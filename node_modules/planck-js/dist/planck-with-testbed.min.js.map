{"version":3,"sources":["webpack://planck/webpack/bootstrap","webpack://planck/./lib/common/Vec2.js","webpack://planck/./lib/common/Math.js","webpack://planck/./lib/util/common.js","webpack://planck/./lib/common/Rot.js","webpack://planck/./lib/Settings.js","webpack://planck/./lib/common/Transform.js","webpack://planck/./lib/util/create.js","webpack://planck/./lib/util/options.js","webpack://planck/./lib/common/Sweep.js","webpack://planck/./lib/common/Mat22.js","webpack://planck/./lib/common/Vec3.js","webpack://planck/./lib/common/Velocity.js","webpack://planck/./lib/common/Position.js","webpack://planck/./lib/common/Mat33.js","webpack://planck/./lib/Joint.js","webpack://planck/./lib/Shape.js","webpack://planck/./lib/collision/AABB.js","webpack://planck/./lib/Contact.js","webpack://planck/./lib/Manifold.js","webpack://planck/./node_modules/stage-js/lib/core.js","webpack://planck/./lib/shape/PolygonShape.js","webpack://planck/./lib/collision/Distance.js","webpack://planck/./lib/shape/CircleShape.js","webpack://planck/./lib/shape/EdgeShape.js","webpack://planck/./node_modules/stage-js/lib/util/create.js","webpack://planck/./node_modules/stage-js/lib/pin.js","webpack://planck/./lib/World.js","webpack://planck/./lib/Body.js","webpack://planck/./lib/common/stats.js","webpack://planck/./lib/shape/ChainShape.js","webpack://planck/./node_modules/stage-js/lib/loop.js","webpack://planck/./lib/collision/DynamicTree.js","webpack://planck/./lib/Fixture.js","webpack://planck/./lib/collision/TimeOfImpact.js","webpack://planck/./lib/joint/RevoluteJoint.js","webpack://planck/./lib/joint/PrismaticJoint.js","webpack://planck/./node_modules/stage-js/lib/util/stats.js","webpack://planck/./node_modules/stage-js/lib/util/extend.js","webpack://planck/./node_modules/stage-js/lib/util/is.js","webpack://planck/./lib/index.js","webpack://planck/./lib/Serializer.js","webpack://planck/./lib/collision/BroadPhase.js","webpack://planck/./lib/util/Pool.js","webpack://planck/./lib/Solver.js","webpack://planck/./lib/util/Timer.js","webpack://planck/./lib/shape/BoxShape.js","webpack://planck/./lib/shape/CollideCircle.js","webpack://planck/./lib/shape/CollideEdgeCircle.js","webpack://planck/./lib/shape/CollidePolygon.js","webpack://planck/./lib/shape/CollideCirclePolygone.js","webpack://planck/./lib/shape/CollideEdgePolygon.js","webpack://planck/./lib/joint/DistanceJoint.js","webpack://planck/./lib/joint/FrictionJoint.js","webpack://planck/./lib/joint/GearJoint.js","webpack://planck/./lib/joint/MotorJoint.js","webpack://planck/./lib/joint/MouseJoint.js","webpack://planck/./lib/joint/PulleyJoint.js","webpack://planck/./lib/joint/RopeJoint.js","webpack://planck/./lib/joint/WeldJoint.js","webpack://planck/./lib/joint/WheelJoint.js","webpack://planck/./node_modules/stage-js/lib/texture.js","webpack://planck/./node_modules/stage-js/lib/util/math.js","webpack://planck/./node_modules/stage-js/lib/matrix.js","webpack://planck/./testbed/index.js","webpack://planck/./node_modules/stage-js/platform/web.js","webpack://planck/./node_modules/stage-js/lib/index.js","webpack://planck/./node_modules/stage-js/lib/util/await.js","webpack://planck/./node_modules/stage-js/lib/atlas.js","webpack://planck/./node_modules/stage-js/lib/util/string.js","webpack://planck/./node_modules/stage-js/lib/tree.js","webpack://planck/./node_modules/stage-js/lib/event.js","webpack://planck/./node_modules/stage-js/lib/util/event.js","webpack://planck/./node_modules/stage-js/lib/root.js","webpack://planck/./node_modules/stage-js/lib/canvas.js","webpack://planck/./node_modules/stage-js/lib/image.js","webpack://planck/./node_modules/stage-js/lib/util/repeat.js","webpack://planck/./node_modules/stage-js/lib/anim.js","webpack://planck/./node_modules/stage-js/lib/str.js","webpack://planck/./node_modules/stage-js/lib/layout.js","webpack://planck/./node_modules/stage-js/lib/addon/tween.js","webpack://planck/./node_modules/stage-js/lib/addon/easing.js","webpack://planck/./node_modules/stage-js/lib/addon/mouse.js","webpack://planck/./node_modules/stage-js/lib/loader/web.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_ASSERT","Vec2","common","Math","x","y","this","assert","_serialize","_deserialize","data","obj","zero","neo","clone","v","toString","JSON","stringify","isValid","isFinite","Error","setZero","set","wSet","a","b","w","setCombine","setMul","add","wAdd","addCombine","addMul","wSub","subCombine","subMul","sub","mul","length","lengthOf","lengthSquared","normalize","EPSILON","invLength","sqrt","distance","dx","dy","distanceSquared","areEqual","skew","dot","cross","addCross","combine","neg","abs","mid","upper","max","lower","min","clamp","lengthSqr","invSqrt","scaleFn","translateFn","native","math","isNaN","nextPowerOfTwo","isPowerOfTwo","mod","num","random","debug","statement","err","log","Rot","angle","setAngle","setIdentity","rot","identity","sin","cos","getAngle","atan2","getXAxis","getYAxis","qr","mulRot","mulVec2","mulSub","mulT","mulTRot","mulTVec2","Settings","maxManifoldPoints","maxPolygonVertices","aabbExtension","aabbMultiplier","linearSlop","linearSlopSquared","angularSlop","PI","polygonRadius","maxSubSteps","maxTOIContacts","maxTOIIterations","maxDistnceIterations","velocityThreshold","maxLinearCorrection","maxAngularCorrection","maxTranslation","maxTranslationSquared","maxRotation","maxRotationSquared","baumgarte","toiBaugarte","timeToSleep","linearSleepTolerance","linearSleepToleranceSqr","pow","angularSleepTolerance","angularSleepToleranceSqr","Transform","position","rotation","q","xf","Array","isArray","arr","mulAll","mulFn","mulXf","px","py","mulTXf","proto","props","noop","propertyIsEnumerable","to","from","getOwnPropertySymbols","symbols","symbol","Sweep","localCenter","alpha0","c0","a0","setTransform","setLocalCenter","getTransform","beta","advance","alpha","forward","that","Mat22","ex","ey","getInverse","det","imx","solve","mx","mulMat22","mulTMat22","mx1","mx2","Vec3","z","Position","Mat33","ez","solve33","solve22","a11","a12","a21","a22","getInverse22","M","getSymInverse33","a13","a23","a33","mulVec3","Joint","JointEdge","other","joint","prev","next","def","bodyA","bodyB","m_type","m_bodyA","m_bodyB","m_index","m_collideConnected","collideConnected","m_prev","m_next","m_edgeA","m_edgeB","m_islandFlag","m_userData","userData","isActive","getType","getBodyA","getBodyB","getNext","getUserData","setUserData","getCollideConnected","getAnchorA","getAnchorB","getReactionForce","inv_dt","getReactionTorque","shiftOrigin","newOrigin","initVelocityConstraints","step","solveVelocityConstraints","solvePositionConstraints","Shape","m_radius","_reset","TYPES","clazz","type","shape","getRadius","_clone","getChildCount","testPoint","rayCast","output","input","transform","childIndex","computeAABB","aabb","computeMass","massData","density","computeDistanceProxy","proxy","AABB","lowerBound","upperBound","getCenter","getExtents","getPerimeter","lowerA","upperA","lowerB","upperB","lowerX","lowerY","upperX","upperY","combinePoints","contains","result","extend","testOverlap","d1x","d2x","d1y","d2y","diff","wD","hD","tmin","Infinity","tmax","p1","p2","absD","normal","f","inv_d","t1","t2","temp","maxFraction","fraction","Manifold","Distance","ContactEdge","contact","Contact","fA","indexA","fB","indexB","evaluateFcn","m_nodeA","m_nodeB","m_fixtureA","m_fixtureB","m_indexA","m_indexB","m_evaluateFcn","m_manifold","m_toi","m_toiCount","m_toiFlag","m_friction","mixFriction","m_restitution","mixRestitution","m_tangentSpeed","m_enabledFlag","m_touchingFlag","m_filterFlag","m_bulletHitFlag","v_points","v_normal","v_normalMass","v_K","v_pointCount","v_tangentSpeed","v_friction","v_restitution","v_invMassA","v_invMassB","v_invIA","v_invIB","p_localPoints","p_localNormal","p_localPoint","p_localCenterA","p_localCenterB","p_type","p_radiusA","p_radiusB","p_pointCount","p_invMassA","p_invMassB","p_invIA","p_invIB","VelocityConstraintPoint","rA","rB","normalImpulse","tangentImpulse","normalMass","tangentMass","velocityBias","friction1","friction2","restitution1","restitution2","initConstraint","fixtureA","fixtureB","shapeA","getShape","shapeB","getBody","manifold","getManifold","pointCount","m_invMass","m_invI","m_sweep","localNormal","localPoint","j","cp","points","vcp","warmStarting","dtRatio","getWorldManifold","worldManifold","setEnabled","flag","isEnabled","isTouching","getFixtureA","getFixtureB","getChildIndexA","getChildIndexB","flagForFiltering","setFriction","friction","getFriction","resetFriction","setRestitution","restitution","getRestitution","resetRestitution","setTangentSpeed","speed","getTangentSpeed","evaluate","xfA","xfB","update","listener","touching","wasTouching","sensorA","isSensor","sensorB","sensor","oldManifold","nmp","omp","id","setAwake","beginContact","endContact","preSolve","solvePositionConstraint","_solvePositionConstraint","solvePositionConstraintTOI","toiA","toiB","toi","positionA","c_velocity","c_position","positionB","localCenterA","localCenterB","mA","iA","mB","iB","cA","aA","cB","aB","minSeparation","point","separation","e_circles","pointA","pointB","e_faceA","planePoint","clipPoint","e_faceB","C","rnA","rnB","K","impulse","P","initVelocityConstraint","velocityA","velocityB","radiusA","radiusB","vA","wA","vB","wB","kNormal","tangent","rtA","rtB","kTangent","vRel","blockSolve","vcp1","vcp2","rn1A","rn1B","rn2A","rn2B","k11","k22","k12","warmStartConstraint","storeConstraintImpulses","solveVelocityConstraint","m_body","dv","vt","lambda","maxFriction","newImpulse","vn","dv1","dv2","vn1","vn2","P1","P2","s_registers","addType","type1","type2","callback","typeA","typeB","m_contactList","destroy","destroyFcn","ManifoldPoint","ContactID","cf","ContactFeature","clipSegmentToLine","vOut","vIn","offset","vertexIndexA","numOut","distance0","distance1","interp","e_vertex","e_face","clipVertex","ClipVertex","getPointStates","state1","state2","manifold1","manifold2","PointState","removeState","persistState","addState","configurable","wm","separations","dist","nullState","stats","is","_await","Class","arg","fn","app","apply","arguments","atlas","_init","push","_load","_config","config","string","_app_queue","_stages","_loaded","_paused","opts","loader","stage","canvas","start","loading","preload","load","url","resolve","test","src","el","document","createElement","addEventListener","Date","now","body","appendChild","loadScript","then","args","shift","pause","resume","window","scripts","getElementsByTagName","currentScript","stack","split","match","readyState","location","href","getScriptSrc","substring","lastIndexOf","PolygonShape","vertices","_super","TYPE","m_centroid","m_vertices","m_normals","m_count","_set","centroid","normals","count","getVertex","index","_setAsBox","ps","tempCount","unique","i0","x0","hull","ih","ie","i1","i2","edge","vs","area","pRef","p3","e1","e2","triangleArea","ComputeCentroid","hx","hy","center","pLocal","numerator","denominator","minX","minY","maxX","maxY","I","D","ex1","ey1","ex2","ey2","mass","validate","e","Input","DistanceInput","Output","DistanceOutput","Proxy","DistanceProxy","Cache","SimplexCache","proxyA","proxyB","transformA","transformB","useRadii","iterations","metric","cache","gjkCalls","simplex","Simplex","readCache","m_v","k_maxIters","saveA","saveB","saveCount","iter","getClosestPoint","getSearchDirection","vertex","getSupport","gjkIters","duplicate","gjkMaxIters","getWitnessPoints","writeCache","m_buffer","SimplexVertex","m_v1","m_v2","m_v3","getVertexCount","bestIndex","bestValue","getSupportVertex","print","wALocal","wBLocal","metric1","metric2","getMetric","e12","pA","pB","solve2","solve3","w1","w2","d12_2","d12_1","inv_d12","w3","w1e12","e13","w1e13","d13_1","d13_2","e23","w2e23","d23_1","d23_2","n123","d123_1","d123_2","d123_3","inv_d13","inv_d23","inv_d123","CircleShape","m_p","radius","rr","sigma","EdgeShape","v1","v2","m_vertex1","m_vertex2","m_vertex0","m_vertex3","m_hasVertex0","m_hasVertex3","vertex1","vertex2","vertex0","vertex3","hasVertex0","hasVertex3","setPrev","setNext","v3","v0","Matrix","iid","Pin","owner","_owner","_parent","_relativeMatrix","_absoluteMatrix","reset","_pin","matrix","relative","relativeMatrix","absoluteMatrix","pin","_textureAlpha","_alpha","_width","_height","_scaleX","_scaleY","_skewX","_skewY","_rotation","_pivoted","_pivotX","_pivotY","_handled","_handleX","_handleY","_aligned","_alignX","_alignY","_offsetX","_offsetY","_boxX","_boxY","_boxWidth","_boxHeight","_ts_translate","_ts_transform","_ts_matrix","_update","_mo_handle","_mo_align","ts","_mo_abs","concat","_mo_rel","rel","translate","scale","rotate","_x","_y","getters","setters","_ts_pin","touch","textureAlpha","width","height","boxWidth","boxHeight","scaleX","scaleY","skewX","skewY","pivotX","pivotY","offsetX","offsetY","alignX","alignY","handleX","handleY","_width_","_height_","pivot","align","handle","resizeMode","all","scaleTo","resizeWidth","resizeHeight","scaleMode","scaleWidth","scaleHeight","h","_add_shortcuts","size","ta","World","options","BroadPhase","Solver","Body","WorldDef","gravity","allowSleep","continuousPhysics","subStepping","velocityIterations","positionIterations","m_solver","m_broadPhase","m_contactCount","m_bodyList","m_bodyCount","m_jointList","m_jointCount","m_stepComplete","m_allowSleep","m_gravity","m_clearForces","m_newFixture","m_locked","m_warmStarting","m_continuousPhysics","m_subStepping","m_blockSolve","m_velocityIterations","m_positionIterations","m_t","m_stepCount","addPair","createContact","bodies","getBodyList","world","reverse","forEach","_addBody","getJointList","getContactList","getBodyCount","getJointCount","getContactCount","setGravity","getGravity","isLocked","setAllowSleeping","getAllowSleeping","setWarmStarting","getWarmStarting","setContinuousPhysics","getContinuousPhysics","setSubStepping","getSubStepping","setAutoClearForces","getAutoClearForces","clearForces","m_force","m_torque","queryAABB","queryCallback","broadPhase","query","proxyId","fixture","point1","point2","reportFixtureCallback","getProxyCount","getTreeHeight","getTreeBalance","getTreeQuality","m_xf","createBody","createDynamicBody","createKinematicBody","destroyBody","m_destroyed","je","je0","publish","destroyJoint","ce","ce0","destroyContact","m_fixtureList","f0","destroyProxies","createJoint","s_step","TimeStep","timeStep","findNewContacts","updateContacts","solveWorld","isStatic","synchronizeFixtures","solveWorldTOI","updatePairs","shouldCollide","next_c","activeA","isAwake","activeB","proxyIdA","m_proxies","proxyIdB","_listeners","on","off","listeners","indexOf","splice","arg1","arg2","arg3","postSolve","Velocity","Fixture","staticBody","STATIC","kinematicBody","KINEMATIC","dynamicBody","DYNAMIC","BodyDef","linearVelocity","angularVelocity","linearDamping","angularDamping","fixedRotation","bullet","gravityScale","awake","active","m_world","m_awakeFlag","m_autoSleepFlag","m_bulletFlag","m_fixedRotationFlag","m_activeFlag","m_mass","m_I","m_linearVelocity","m_angularVelocity","m_linearDamping","m_angularDamping","m_gravityScale","m_sleepTime","MassData","fixtures","_addFixture","isWorldLocked","getWorld","getFixtureList","isDynamic","isKinematic","setStatic","setType","setDynamic","setKinematic","resetMassData","proxyCount","m_proxyCount","touchProxy","isBullet","setBullet","isSleepingAllowed","setSleepingAllowed","setActive","createProxies","isFixedRotation","setFixedRotation","synchronize","synchronizeTransform","getPosition","setPosition","getWorldCenter","getLocalCenter","getLinearVelocity","getLinearVelocityFromWorldPoint","worldPoint","getLinearVelocityFromLocalPoint","getWorldPoint","setLinearVelocity","getAngularVelocity","setAngularVelocity","getLinearDamping","setLinearDamping","getAngularDamping","setAngularDamping","getGravityScale","setGravityScale","getMass","getInertia","getMassData","m_density","oldCenter","setMassData","applyForce","force","wake","applyForceToCenter","applyTorque","torque","applyLinearImpulse","applyAngularImpulse","jn","createFixture","fixdef","destroyFixture","found","node","getWorldVector","localVector","getLocalPoint","getLocalVector","worldVector","newline","ChainShape","loop","m_prevVertex","m_nextVertex","m_hasPrevVertex","m_hasNextVertex","m_isLoop","_createLoop","_createChain","isLoop","prevVertex","nextVertex","hasPrevVertex","hasNextVertex","map","_setPrevVertex","_setNextVertex","createChain","getChildEdge","_textures","render","context","_visible","globalAlpha","draw","child","_first","_next","_tickBefore","_tickAfter","MAX_ELAPSE","_tick","elapsed","last","ticked","tick","_flag","ticker","before","untick","timeout","time","setTimeout","timer","clearTimeout","Pool","TreeNode","parent","child1","child2","DynamicTree","m_root","m_nodes","m_lastProxyId","m_pool","isLeaf","getFatAABB","allocateNode","allocate","freeNode","release","createProxy","insertLeaf","destroyProxy","removeLeaf","moveProxy","leaf","leafAABB","combinedAABB","cost1","cost2","combinedArea","cost","inheritanceCost","oldArea","sibling","oldParent","newParent","balance","grandParent","A","B","F","G","E","getHeight","getAreaRatio","rootArea","totalArea","it","iteratorPool","preorder","computeHeight","height1","ComputeHeight","height2","validateStructure","validateMetrics","ValidateStructure","ValidateMetrics","getMaxBalance","maxBalance","rebuildBottomUp","nodes","minCost","iMin","jMin","aabbi","aabbj","stackPool","pop","rayCastCallback","abs_v","segmentAABB","subInput","inputPool","parents","states","root","close","iterator","FixtureDef","filterGroupIndex","filterCategoryBits","filterMaskBits","FixtureProxy","m_isSensor","m_filterGroupIndex","m_filterCategoryBits","m_filterMaskBits","m_shape","childCount","setSensor","getDensity","setDensity","getAABB","xf1","xf2","aabb1","aabb2","displacement","setFilterData","filter","groupIndex","categoryBits","maskBits","refilter","getFilterGroupIndex","getFilterCategoryBits","getFilterMaskBits","Timer","toiCalls","state","TOIOutput","e_unknown","tMax","sweepA","sweepB","totalRadius","target","tolerance","k_maxIterations","distanceInput","distanceOutput","e_overlapped","e_touching","fcn","SeparationFunction","initialize","done","pushBackIter","s2","findMinSeparation","e_separated","s1","e_failed","rootIterCount","a1","a2","toiRootIters","toiMaxRootIters","toiIters","toiMaxIters","toiMaxTime","toiTime","m_proxyA","m_proxyB","m_sweepA","m_sweepB","m_localPoint","m_axis","localPointA","localPointB","localPointB1","localPointB2","localPointA1","localPointA2","compute","find","axisA","axisB","RevoluteJoint","inactiveLimit","DEFAULTS","lowerAngle","upperAngle","maxMotorTorque","motorSpeed","enableLimit","enableMotor","anchor","m_localAnchorA","localAnchorA","m_localAnchorB","localAnchorB","m_referenceAngle","referenceAngle","m_impulse","m_motorImpulse","m_lowerAngle","m_upperAngle","m_maxMotorTorque","m_motorSpeed","m_enableLimit","m_enableMotor","m_rA","m_rB","m_localCenterA","m_localCenterB","m_invMassA","m_invMassB","m_invIA","m_invIB","m_motorMass","m_limitState","getLocalAnchorA","getLocalAnchorB","getReferenceAngle","getJointAngle","bA","getJointSpeed","isMotorEnabled","getMotorTorque","setMotorSpeed","getMotorSpeed","setMaxMotorTorque","isLimitEnabled","getLowerLimit","getUpperLimit","setLimits","qA","qB","jointAngle","Cdot","oldImpulse","maxImpulse","dt","Cdot1","Cdot2","rhs","reduced","positionError","angularError","limitImpulse","PrismaticJoint","lowerTranslation","upperTranslation","maxMotorForce","axis","m_localXAxisA","localAxisA","m_localYAxisA","m_lowerTranslation","m_upperTranslation","m_maxMotorForce","m_perp","m_s1","m_s2","m_a1","m_a2","m_K","getLocalAxisA","getJointTranslation","bB","setMaxMotorForce","getMotorForce","k13","k23","k33","jointTranslation","LA","LB","f1","df","f2r","perp","C1","linearError","C2","translation","impulse1","base","objProto","owns","toStr","hexRegex","an","defined","empty","equal","getTime","instance","constructor","nil","undef","array","emptyarray","arraylike","boolean","number","element","undefined","HTMLElement","nodeType","nan","hash","setInterval","regexp","hex","internal","Serializer","Circle","Edge","Polygon","Chain","Box","CollidePolygons","DistanceJoint","FrictionJoint","GearJoint","MotorJoint","MouseJoint","PulleyJoint","RopeJoint","WeldJoint","WheelJoint","TimeOfImpact","toJson","fromJson","parse","m_tree","m_moveBuffer","aabbA","aabbB","bufferMove","unbufferMove","addPairCallback","m_callback","m_queryProxyId","fatAABB","userDataA","userDataB","_list","_max","_createFn","_outFn","_inFn","_discardFn","discard","_createCount","_outCount","_inCount","_discardCount","item","TOIInput","inv_dt0","m_stack","m_bodies","m_contacts","m_joints","clear","addBody","addContact","addJoint","seed","solveIsland","ratio","positionSolved","contactsOkay","jointsOkay","jointOkay","postSolveIsland","minSleepTime","linTolSqr","angTolSqr","printBodies","tag","s_subStep","minContact","minAlpha","collideA","collideB","backup1","backup2","backup","solveIslandTOI","subStep","normalImpulses","tangentImpulses","BoxShape","CollideCircles","circleA","circleB","distSqr","CollideEdgeCircle","edgeA","Q","u","A1","B1","B2","A2","den","chain","FindMaxSeparation","poly1","poly2","count1","count2","n1s","v1s","v2s","maxSeparation","si","sij","_maxSeparation","_bestIndex","polyA","polyB","separationA","edgeB","separationB","edge1","flip","incidentEdge","normals1","vertices2","normals2","normal1","minDot","FindIncidentEdge","vertices1","iv1","iv2","v11","v12","localTangent","frontOffset","sideOffset1","sideOffset2","clipPoints1","clipPoints2","polygonA","cLocal","normalIndex","vertexCount","vertIndex1","vertIndex2","u1","u2","faceCenter","CollidePolygonCircle","CollideEdgePolygon","e_edgeA","e_edgeB","EPAxis","edgeAxis","polygonAxis","polygonBA","rf","sideNormal1","sideNormal2","polygonB","centroidB","front","offset1","offset0","offset2","convex1","convex2","edge0","normal0","edge2","normal2","lowerLimit","upperLimit","primaryAxis","frequencyHz","dampingRatio","anchorA","anchorB","m_length","m_frequencyHz","m_dampingRatio","m_gamma","m_bias","m_u","setLength","getLength","setFrequency","hz","getFrequency","setDampingRatio","getDampingRatio","crAu","crBu","invMass","omega","k","vpA","vpB","maxForce","maxTorque","m_linearImpulse","m_angularImpulse","m_maxForce","m_maxTorque","m_linearMass","m_angularMass","setMaxForce","getMaxForce","setMaxTorque","getMaxTorque","joint1","joint2","coordinateA","coordinateB","m_joint1","m_joint2","m_ratio","m_type1","m_type2","m_bodyC","xfC","aC","revolute","m_localAnchorC","m_referenceAngleA","m_localAxisC","prismatic","pC","m_bodyD","xfD","aD","m_localAnchorD","m_referenceAngleB","m_localAxisD","pD","m_constant","m_lcA","m_lcB","m_lcC","m_lcD","m_mA","m_mB","m_mC","m_mD","m_iA","m_iB","m_iC","m_iD","m_JvAC","m_JvBD","m_JwA","m_JwB","m_JwC","m_JwD","getJoint1","getJoint2","setRatio","getRatio","vC","wC","vD","qC","qD","rC","rD","JvAC","JvBD","JwA","JwB","JwC","JwD","cC","cD","correctionFactor","m_linearOffset","linearOffset","angleA","angleB","m_angularOffset","m_correctionFactor","m_linearError","m_angularError","setCorrectionFactor","factor","getCorrectionFactor","setLinearOffset","getLinearOffset","setAngularOffset","angularOffset","getAngularOffset","inv_h","m_targetA","m_beta","m_C","setTarget","getTarget","velocity","MIN_PULLEY_LENGTH","PulleyJointDef","groundA","groundB","m_groundAnchorA","groundAnchorA","m_groundAnchorB","groundAnchorB","m_lengthA","lengthA","m_lengthB","lengthB","m_uA","m_uB","getGroundAnchorA","getGroundAnchorB","getLengthA","getLengthB","getCurrentLengthA","getCurrentLengthB","ruA","ruB","PA","PB","uA","uB","maxLength","m_maxLength","m_state","setMaxLength","getMaxLength","getLimitState","crA","crB","invM","impulse2","m_localAxis","m_springMass","m_springImpulse","m_ax","m_ay","m_sAx","m_sBx","m_sAy","m_sBy","getMaxMotorTorque","setSpringFrequencyHz","getSpringFrequencyHz","setSpringDampingRatio","getSpringDampingRatio","ay","sAy","sBy","Texture","image","pipe","_image","_sx","_dx","_sy","_dy","_sw","_dw","_sh","_dh","dest","x1","y1","x2","y2","x3","y3","x4","y4","sx","sy","sw","sh","dw","dh","limit","drawImage","_draw_failed","console","_dirty","inverse","inversed","mapX","mapY","planck","Stage","Viewer","label","_options","lineWidth","_world","elapsedTime","renderWorld","ui","remove","testbed","Mouse","START","focus","activeElement","blur","paused","_resume","_pause","isPaused","togglePause","activeKeys","background","statusText","statusMap","statusSet","status","statusMerge","_status","info","text","_info","lastDrawHash","drawHash","drawingTexture","append","buffer","ctx","save","lineCap","drawing","restore","drawPoint","color","beginPath","arc","strokeStyle","stroke","drawCircle","drawSegment","moveTo","lineTo","drawPolygon","closePath","drawAABB","g","viewer","lastX","lastY","targetBody","mouseMove","viewbox","prepend","mouseJoint","mouseGround","attr","findBody","mouseForce","MOVE","END","CANCEL","keyCode","charCodeAt","downKeys","updateActiveKeys","keydown","String","fromCharCode","keyup","down","char","right","left","up","fire","_create","fill","fillStyle","drawEdge","drawChain","appendTo","__lastX","__lastY","__lastR","drawJoint","cx","cy","lw","texture","stretch","Image","_extend","fork","_atlases_map","_atlases_arr","Atlas","deprecated","ppu","trim","textures","factory","cutouts","sprites","make","top","bottom","startsWith","subquery","select","Selection","imagePath","imageRatio","imageloader","nfTexture","nfSelection","link","one","msg","replace","slice","error","str","_ensure","_last","_prev","_ts_parent","_ts_children","insertBefore","self","insertAfter","_label","_attrs","_flags","visible","hide","show","first","visit","visitor","end","more","prependTo","insertNext","insertPrev","_ts_touch","hitTest","hit","listen","types","join","trigger","Root","request","lastTime","_mo_touch","fps","touch_root","viewport","_viewport","_viewbox","box","attributes","getContext","repeat","img","setImage","tile","inner","_repeat","insert","_repeatTicker","_mo_stretch","owidth","oheight","Anim","_fps","FPS","_ft","_time","_index","_frames","ignore","moveFrame","stop","_callback","anim","frames","gotoFrame","setFrames","frame","resize","move","play","Str","setFont","_item","setValue","_value","_spacing","row","sequence","column","_padding","_layoutTiker","_mo_seq","alignChildren","_mo_seqAlign","_mo_box","layer","padding","pad","spacing","space","Easing","Tween","duration","delay","_end","_duration","_delay","pinning","tween","_tweens","ticktime","head","unshift","over","_start","_easing","_done","ease","easing","_identity","_cache","_modes","_easings","token","exec","params","fc","names","asin","elem","locate","event","ev","loc","touches","clientX","clientY","rect","getBoundingClientRect","clientLeft","clientTop","locateElevent","lookup","collect","targets","timeStamp","mouse","raw","cancel","subscribe","CLICK","handleStart","handleEnd","handleMove","handleCancel","clicklist","cancellist","preventDefault","defineValue","_supported","app-loader","configs","full","getElementById","style","firstChild","devicePixelRatio","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","oRequestAnimationFrame","clearRect","innerWidth","screen","innerHeight","clientWidth","clientHeight","backgroundColor","image-loader","success","onload","onerror"],"mappings":"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","file":"planck-with-testbed.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 63);\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Vec2;\n\nvar common = require('../util/common');\nvar Math = require('./Math');\n\nfunction Vec2(x, y) {\n  if (!(this instanceof Vec2)) {\n    return new Vec2(x, y);\n  }\n  if (typeof x === 'undefined') {\n    this.x = 0;\n    this.y = 0;\n  } else if (typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n  } else {\n    this.x = x;\n    this.y = y;\n  }\n  _ASSERT && Vec2.assert(this);\n}\n\nVec2.prototype._serialize = function() {\n  return {\n    x: this.x,\n    y: this.y\n  };\n};\n\nVec2._deserialize = function(data) {\n  var obj = Object.create(Vec2.prototype);\n  obj.x = data.x;\n  obj.y = data.y;\n  return obj;\n};\n\nVec2.zero = function() {\n  var obj = Object.create(Vec2.prototype);\n  obj.x = 0;\n  obj.y = 0;\n  return obj;\n};\n\nVec2.neo = function(x, y) {\n  var obj = Object.create(Vec2.prototype);\n  obj.x = x;\n  obj.y = y;\n  return obj;\n};\n\nVec2.clone = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(v.x, v.y);\n};\n\nVec2.prototype.toString = function() {\n  return JSON.stringify(this);\n};\n\n/**\n * Does this vector contain finite coordinates?\n */\nVec2.isValid = function(v) {\n  return v && Math.isFinite(v.x) && Math.isFinite(v.y);\n}\n\nVec2.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Vec2.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Vec2!');\n  }\n}\n\nVec2.prototype.clone = function() {\n  return Vec2.clone(this);\n}\n\n/**\n * Set this vector to all zeros.\n * \n * @returns this\n */\nVec2.prototype.setZero = function() {\n  this.x = 0.0;\n  this.y = 0.0;\n  return this;\n}\n\n/**\n * Set this vector to some specified coordinates.\n * \n * @returns this\n */\nVec2.prototype.set = function(x, y) {\n  if (typeof x === 'object') {\n    _ASSERT && Vec2.assert(x);\n    this.x = x.x;\n    this.y = x.y;\n  } else {\n    _ASSERT && Math.assert(x);\n    _ASSERT && Math.assert(y);\n    this.x = x;\n    this.y = y;\n  }\n  return this;\n}\n\n/**\n * @deprecated Use setCombine or setMul\n */\nVec2.prototype.wSet = function(a, v, b, w) {\n  if (typeof b !== 'undefined' || typeof w !== 'undefined') {\n    return this.setCombine(a, v, b, w);\n  } else {\n    return this.setMul(a, v);\n  }\n}\n\n/**\n * Set linear combination of v and w: `a * v + b * w`\n */\nVec2.prototype.setCombine = function(a, v, b, w) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Math.assert(b);\n  _ASSERT && Vec2.assert(w);\n  var x = a * v.x + b * w.x;\n  var y = a * v.y + b * w.y;\n\n  // `this` may be `w`\n  this.x = x;\n  this.y = y;\n  return this;\n}\n\nVec2.prototype.setMul = function(a, v) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  var x = a * v.x;\n  var y = a * v.y;\n\n  this.x = x;\n  this.y = y;\n  return this;\n}\n\n/**\n * Add a vector to this vector.\n * \n * @returns this\n */\nVec2.prototype.add = function(w) {\n  _ASSERT && Vec2.assert(w);\n  this.x += w.x;\n  this.y += w.y;\n  return this;\n}\n\n/**\n * @deprecated Use addCombine or addMul\n */\nVec2.prototype.wAdd = function(a, v, b, w) {\n  if (typeof b !== 'undefined' || typeof w !== 'undefined') {\n    return this.addCombine(a, v, b, w);\n  } else {\n    return this.addMul(a, v);\n  }\n}\n\n/**\n * Add linear combination of v and w: `a * v + b * w`\n */\nVec2.prototype.addCombine = function(a, v, b, w) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Math.assert(b);\n  _ASSERT && Vec2.assert(w);\n\n  var x = a * v.x + b * w.x;\n  var y = a * v.y + b * w.y;\n\n  // `this` may be `w`\n  this.x += x;\n  this.y += y;\n  return this;\n}\n\nVec2.prototype.addMul = function(a, v) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  var x = a * v.x;\n  var y = a * v.y;\n\n  this.x += x;\n  this.y += y;\n  return this;\n}\n\n/**\n * @deprecated Use subCombine or subMul\n */\nVec2.prototype.wSub = function(a, v, b, w) {\n  if (typeof b !== 'undefined' || typeof w !== 'undefined') {\n    return this.subCombine(a, v, b, w);\n  } else {\n    return this.subMul(a, v);\n  }}\n\n/**\n * Subtract linear combination of v and w: `a * v + b * w`\n */\nVec2.prototype.subCombine = function(a, v, b, w) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Math.assert(b);\n  _ASSERT && Vec2.assert(w);\n  var x = a * v.x + b * w.x;\n  var y = a * v.y + b * w.y;\n\n  // `this` may be `w`\n  this.x -= x;\n  this.y -= y;\n  return this;\n}\n\nVec2.prototype.subMul = function(a, v) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  var x = a * v.x;\n  var y = a * v.y;\n\n  this.x -= x;\n  this.y -= y;\n  return this;\n}\n\n/**\n * Subtract a vector from this vector\n * \n * @returns this\n */\nVec2.prototype.sub = function(w) {\n  _ASSERT && Vec2.assert(w);\n  this.x -= w.x;\n  this.y -= w.y;\n  return this;\n}\n\n/**\n * Multiply this vector by a scalar.\n * \n * @returns this\n */\nVec2.prototype.mul = function(m) {\n  _ASSERT && Math.assert(m);\n  this.x *= m;\n  this.y *= m;\n  return this;\n}\n\n/**\n * Get the length of this vector (the norm).\n * \n * For performance, use this instead of lengthSquared (if possible).\n */\nVec2.prototype.length = function() {\n  return Vec2.lengthOf(this);\n}\n\n/**\n * Get the length squared.\n */\nVec2.prototype.lengthSquared = function() {\n  return Vec2.lengthSquared(this);\n}\n\n/**\n * Convert this vector into a unit vector.\n * \n * @returns old length\n */\nVec2.prototype.normalize = function() {\n  var length = this.length();\n  if (length < Math.EPSILON) {\n    return 0.0;\n  }\n  var invLength = 1.0 / length;\n  this.x *= invLength;\n  this.y *= invLength;\n  return length;\n}\n\n/**\n * Get the length of this vector (the norm).\n *\n * For performance, use this instead of lengthSquared (if possible).\n */\nVec2.lengthOf = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return Math.sqrt(v.x * v.x + v.y * v.y);\n}\n\n/**\n * Get the length squared.\n */\nVec2.lengthSquared = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return v.x * v.x + v.y * v.y;\n}\n\nVec2.distance = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  var dx = v.x - w.x, dy = v.y - w.y;\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nVec2.distanceSquared = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  var dx = v.x - w.x, dy = v.y - w.y;\n  return dx * dx + dy * dy;\n}\n\nVec2.areEqual = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return v == w || typeof w === 'object' && w !== null && v.x === w.x && v.y === w.y;\n}\n\n/**\n * Get the skew vector such that dot(skew_vec, other) == cross(vec, other)\n */\nVec2.skew = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(-v.y, v.x);\n}\n\n/**\n * Perform the dot product on two vectors.\n */\nVec2.dot = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return v.x * w.x + v.y * w.y;\n}\n\n/**\n * Perform the cross product on two vectors. In 2D this produces a scalar.\n * \n * Perform the cross product on a vector and a scalar. In 2D this produces a\n * vector.\n */\nVec2.cross = function(v, w) {\n  if (typeof w === 'number') {\n    _ASSERT && Vec2.assert(v);\n    _ASSERT && Math.assert(w);\n    return Vec2.neo(w * v.y, -w * v.x);\n\n  } else if (typeof v === 'number') {\n    _ASSERT && Math.assert(v);\n    _ASSERT && Vec2.assert(w);\n    return Vec2.neo(-v * w.y, v * w.x);\n\n  } else {\n    _ASSERT && Vec2.assert(v);\n    _ASSERT && Vec2.assert(w);\n    return v.x * w.y - v.y * w.x\n  }\n}\n\n/**\n * Returns `a + (v x w)`\n */\nVec2.addCross = function(a, v, w) {\n  if (typeof w === 'number') {\n    _ASSERT && Vec2.assert(v);\n    _ASSERT && Math.assert(w);\n    return Vec2.neo(w * v.y + a.x, -w * v.x + a.y);\n\n  } else if (typeof v === 'number') {\n    _ASSERT && Math.assert(v);\n    _ASSERT && Vec2.assert(w);\n    return Vec2.neo(-v * w.y + a.x, v * w.x + a.y);\n  }\n\n  _ASSERT && common.assert(false);\n}\n\nVec2.add = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo(v.x + w.x, v.y + w.y);\n}\n\n/**\n * @deprecated Use combine\n */\nVec2.wAdd = function(a, v, b, w) {\n  if (typeof b !== 'undefined' || typeof w !== 'undefined') {\n    return Vec2.combine(a, v, b, w);\n  } else {\n    return Vec2.mul(a, v);\n  }\n}\n\nVec2.combine = function(a, v, b, w) {\n  return Vec2.zero().setCombine(a, v, b, w);\n}\n\nVec2.sub = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo(v.x - w.x, v.y - w.y);\n}\n\nVec2.mul = function(a, b) {\n  if (typeof a === 'object') {\n    _ASSERT && Vec2.assert(a);\n    _ASSERT && Math.assert(b);\n    return Vec2.neo(a.x * b, a.y * b);\n\n  } else if (typeof b === 'object') {\n    _ASSERT && Math.assert(a);\n    _ASSERT && Vec2.assert(b);\n    return Vec2.neo(a * b.x, a * b.y);\n  }\n}\n\nVec2.prototype.neg = function() {\n  this.x = -this.x;\n  this.y = -this.y;\n  return this;\n}\n\nVec2.neg = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(-v.x, -v.y);\n}\n\nVec2.abs = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(Math.abs(v.x), Math.abs(v.y));\n}\n\nVec2.mid = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo((v.x + w.x) * 0.5, (v.y + w.y) * 0.5);\n}\n\nVec2.upper = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo(Math.max(v.x, w.x), Math.max(v.y, w.y));\n}\n\nVec2.lower = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo(Math.min(v.x, w.x), Math.min(v.y, w.y));\n}\n\nVec2.prototype.clamp = function(max) {\n  var lengthSqr = this.x * this.x + this.y * this.y;\n  if (lengthSqr > max * max) {\n    var invLength = Math.invSqrt(lengthSqr);\n    this.x *= invLength * max;\n    this.y *= invLength * max;\n  }\n  return this;\n}\n\nVec2.clamp = function(v, max) {\n  v = Vec2.neo(v.x, v.y);\n  v.clamp(max);\n  return v;\n}\n\n/**\n * @experimental\n */\nVec2.scaleFn = function (x, y) {\n  return function (v) {\n    return Vec2.neo(v.x * x, v.y * y);\n  };\n}\n\n/**\n * @experimental\n */\nVec2.translateFn = function(x, y) {\n  return function (v) {\n    return Vec2.neo(v.x + x, v.y + y);\n  };\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar native = Math;\nvar math = module.exports = create(native);\n\nmath.EPSILON = 1e-9; // TODO\n\n/**\n * This function is used to ensure that a floating point number is not a NaN or\n * infinity.\n */\nmath.isFinite = function(x) {\n  return (typeof x === 'number') && isFinite(x) && !isNaN(x);\n}\n\nmath.assert = function(x) {\n  if (!_ASSERT) return;\n  if (!math.isFinite(x)) {\n    _DEBUG && common.debug(x);\n    throw new Error('Invalid Number!');\n  }\n}\n\n/**\n * TODO: This is a approximate yet fast inverse square-root.\n */\nmath.invSqrt = function(x) {\n  // TODO\n  return 1 / native.sqrt(x);\n}\n\n/**\n * Next Largest Power of 2 Given a binary integer value x, the next largest\n * power of 2 can be computed by a SWAR algorithm that recursively \"folds\" the\n * upper bits into the lower bits. This process yields a bit vector with the\n * same most significant 1 as x, but all 1's below it. Adding 1 to that value\n * yields the next largest power of 2. For a 32-bit value:\n */\nmath.nextPowerOfTwo = function(x) {\n  // TODO\n  x |= (x >> 1);\n  x |= (x >> 2);\n  x |= (x >> 4);\n  x |= (x >> 8);\n  x |= (x >> 16);\n  return x + 1;\n}\n\nmath.isPowerOfTwo = function(x) {\n  return x > 0 && (x & (x - 1)) == 0;\n}\n\nmath.mod = function(num, min, max) {\n  if (typeof min === 'undefined') {\n    max = 1, min = 0;\n  } else if (typeof max === 'undefined') {\n    max = min, min = 0;\n  }\n  if (max > min) {\n    num = (num - min) % (max - min);\n    return num + (num < 0 ? max : min);\n  } else {\n    num = (num - max) % (min - max);\n    return num + (num <= 0 ? min : max);\n  }\n};\n\nmath.clamp = function(num, min, max) {\n  if (num < min) {\n    return min;\n  } else if (num > max) {\n    return max;\n  } else {\n    return num;\n  }\n};\n\nmath.random = function(min, max) {\n  if (typeof min === 'undefined') {\n    max = 1;\n    min = 0;\n  } else if (typeof max === 'undefined') {\n    max = min;\n    min = 0;\n  }\n  return min == max ? min : native.random() * (max - min) + min;\n};\n","var _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexports.debug = function() {\n  if (!_DEBUG) return;\n  console.log.apply(console, arguments);\n};\n\nexports.assert = function(statement, err, log) {\n  if (!_ASSERT) return;\n  if (statement) return;\n  log && console.log(log);\n  throw new Error(err);\n};","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Rot;\n\nvar common = require('../util/common');\nvar Vec2 = require('./Vec2');\nvar Math = require('./Math');\n\n// TODO merge with Transform\n\n/**\n * Initialize from an angle in radians.\n */\nfunction Rot(angle) {\n  if (!(this instanceof Rot)) {\n    return new Rot(angle);\n  }\n  if (typeof angle === 'number') {\n    this.setAngle(angle);\n  } else if (typeof angle === 'object') {\n      this.set(angle);\n  } else {\n    this.setIdentity();\n  }\n}\n\nRot.neo = function(angle) {\n  var obj = Object.create(Rot.prototype);\n  obj.setAngle(angle);\n  return obj;\n};\n\nRot.clone = function(rot) {\n  _ASSERT && Rot.assert(rot);\n  var obj = Object.create(Rot.prototype);\n  obj.s = rot.s;\n  obj.c = rot.c;\n  return obj;\n};\n\nRot.identity = function() {\n  var obj = Object.create(Rot.prototype);\n  obj.s = 0.0;\n  obj.c = 1.0;\n  return obj;\n};\n\nRot.isValid = function(o) {\n  return o && Math.isFinite(o.s) && Math.isFinite(o.c);\n}\n\nRot.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Rot.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Rot!');\n  }\n}\n\n/**\n * Set to the identity rotation.\n */\nRot.prototype.setIdentity = function() {\n  this.s = 0.0;\n  this.c = 1.0;\n}\n\nRot.prototype.set = function(angle) {\n  if (typeof angle === 'object') {\n    _ASSERT && Rot.assert(angle);\n    this.s = angle.s;\n    this.c = angle.c;\n\n  } else {\n    _ASSERT && Math.assert(angle);\n    // TODO_ERIN optimize\n    this.s = Math.sin(angle);\n    this.c = Math.cos(angle);\n  }\n}\n\n/**\n * Set using an angle in radians.\n */\nRot.prototype.setAngle = function(angle) {\n  _ASSERT && Math.assert(angle);\n  // TODO_ERIN optimize\n  this.s = Math.sin(angle);\n  this.c = Math.cos(angle);\n};\n\n/**\n * Get the angle in radians.\n */\nRot.prototype.getAngle = function() {\n  return Math.atan2(this.s, this.c);\n}\n\n/**\n * Get the x-axis.\n */\nRot.prototype.getXAxis = function() {\n  return Vec2.neo(this.c, this.s);\n}\n\n/**\n * Get the u-axis.\n */\nRot.prototype.getYAxis = function() {\n  return Vec2.neo(-this.s, this.c);\n}\n\n/**\n * Multiply two rotations: q * r\n * \n * @returns Rot\n * \n * Rotate a vector\n * \n * @returns Vec2\n */\nRot.mul = function(rot, m) {\n  _ASSERT && Rot.assert(rot);\n  if ('c' in m && 's' in m) {\n    _ASSERT && Rot.assert(m);\n    // [qc -qs] * [rc -rs] = [qc*rc-qs*rs -qc*rs-qs*rc]\n    // [qs qc] [rs rc] [qs*rc+qc*rs -qs*rs+qc*rc]\n    // s = qs * rc + qc * rs\n    // c = qc * rc - qs * rs\n    var qr = Rot.identity();\n    qr.s = rot.s * m.c + rot.c * m.s;\n    qr.c = rot.c * m.c - rot.s * m.s;\n    return qr;\n\n  } else if ('x' in m && 'y' in m) {\n    _ASSERT && Vec2.assert(m);\n    return Vec2.neo(rot.c * m.x - rot.s * m.y, rot.s * m.x + rot.c * m.y);\n  }\n}\n\nRot.mulRot = function(rot, m) {\n  _ASSERT && Rot.assert(rot);\n  _ASSERT && Rot.assert(m);\n  // [qc -qs] * [rc -rs] = [qc*rc-qs*rs -qc*rs-qs*rc]\n  // [qs qc] [rs rc] [qs*rc+qc*rs -qs*rs+qc*rc]\n  // s = qs * rc + qc * rs\n  // c = qc * rc - qs * rs\n  var qr = Rot.identity();\n  qr.s = rot.s * m.c + rot.c * m.s;\n  qr.c = rot.c * m.c - rot.s * m.s;\n  return qr;\n}\n\nRot.mulVec2 = function(rot, m) {\n  _ASSERT && Rot.assert(rot);\n  _ASSERT && Vec2.assert(m);\n  return Vec2.neo(rot.c * m.x - rot.s * m.y, rot.s * m.x + rot.c * m.y);\n}\n\nRot.mulSub = function(rot, v, w) {\n  var x = rot.c * (v.x - w.x) - rot.s * (v.y - w.y);\n  var y = rot.s * (v.x - w.x) + rot.c * (v.y - w.y);\n  return Vec2.neo(x, y);\n}\n\n/**\n * Transpose multiply two rotations: qT * r\n * \n * @returns Rot\n * \n * Inverse rotate a vector\n * \n * @returns Vec2\n */\nRot.mulT = function(rot, m) {\n  if ('c' in m && 's' in m) {\n    _ASSERT && Rot.assert(m);\n    // [ qc qs] * [rc -rs] = [qc*rc+qs*rs -qc*rs+qs*rc]\n    // [-qs qc] [rs rc] [-qs*rc+qc*rs qs*rs+qc*rc]\n    // s = qc * rs - qs * rc\n    // c = qc * rc + qs * rs\n    var qr = Rot.identity();\n    qr.s = rot.c * m.s - rot.s * m.c;\n    qr.c = rot.c * m.c + rot.s * m.s;\n    return qr;\n\n  } else if ('x' in m && 'y' in m) {\n    _ASSERT && Vec2.assert(m);\n    return Vec2.neo(rot.c * m.x + rot.s * m.y, -rot.s * m.x + rot.c * m.y);\n  }\n}\n\nRot.mulTRot = function(rot, m) {\n  _ASSERT && Rot.assert(m);\n  // [ qc qs] * [rc -rs] = [qc*rc+qs*rs -qc*rs+qs*rc]\n  // [-qs qc] [rs rc] [-qs*rc+qc*rs qs*rs+qc*rc]\n  // s = qc * rs - qs * rc\n  // c = qc * rc + qs * rs\n  var qr = Rot.identity();\n  qr.s = rot.c * m.s - rot.s * m.c;\n  qr.c = rot.c * m.c + rot.s * m.s;\n  return qr;\n}\n\nRot.mulTVec2 = function(rot, m) {\n  _ASSERT && Vec2.assert(m);\n  return Vec2.neo(rot.c * m.x + rot.s * m.y, -rot.s * m.x + rot.c * m.y);\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\n// TODO merge with World options?\n\nvar Settings = exports;\n\n/**\n * Tuning constants based on meters-kilograms-seconds (MKS) units.\n */\n\n// Collision\n/**\n * The maximum number of contact points between two convex shapes. Do not change\n * this value.\n */\nSettings.maxManifoldPoints = 2;\n\n/**\n * The maximum number of vertices on a convex polygon. You cannot increase this\n * too much because BlockAllocator has a maximum object size.\n */\nSettings.maxPolygonVertices = 12;\n\n/**\n * This is used to fatten AABBs in the dynamic tree. This allows proxies to move\n * by a small amount without triggering a tree adjustment. This is in meters.\n */\nSettings.aabbExtension = 0.1;\n\n/**\n * This is used to fatten AABBs in the dynamic tree. This is used to predict the\n * future position based on the current displacement. This is a dimensionless\n * multiplier.\n */\nSettings.aabbMultiplier = 2.0;\n\n/**\n * A small length used as a collision and constraint tolerance. Usually it is\n * chosen to be numerically significant, but visually insignificant.\n */\nSettings.linearSlop = 0.005;\nSettings.linearSlopSquared = Settings.linearSlop * Settings.linearSlop;\n\n/**\n * A small angle used as a collision and constraint tolerance. Usually it is\n * chosen to be numerically significant, but visually insignificant.\n */\nSettings.angularSlop = (2.0 / 180.0 * Math.PI);\n\n/**\n * The radius of the polygon/edge shape skin. This should not be modified.\n * Making this smaller means polygons will have an insufficient buffer for\n * continuous collision. Making it larger may create artifacts for vertex\n * collision.\n */\nSettings.polygonRadius = (2.0 * Settings.linearSlop);\n\n/**\n * Maximum number of sub-steps per contact in continuous physics simulation.\n */\nSettings.maxSubSteps = 8;\n\n// Dynamics\n\n/**\n * Maximum number of contacts to be handled to solve a TOI impact.\n */\nSettings.maxTOIContacts = 32;\n\n/**\n * Maximum iterations to solve a TOI.\n */\nSettings.maxTOIIterations = 20;\n\n/**\n * Maximum iterations to find Distance.\n */\nSettings.maxDistnceIterations = 20;\n\n/**\n * A velocity threshold for elastic collisions. Any collision with a relative\n * linear velocity below this threshold will be treated as inelastic.\n */\nSettings.velocityThreshold = 1.0;\n\n/**\n * The maximum linear position correction used when solving constraints. This\n * helps to prevent overshoot.\n */\nSettings.maxLinearCorrection = 0.2;\n\n/**\n * The maximum angular position correction used when solving constraints. This\n * helps to prevent overshoot.\n */\nSettings.maxAngularCorrection = (8.0 / 180.0 * Math.PI);\n\n/**\n * The maximum linear velocity of a body. This limit is very large and is used\n * to prevent numerical problems. You shouldn't need to adjust this.\n */\nSettings.maxTranslation = 2.0;\nSettings.maxTranslationSquared = (Settings.maxTranslation * Settings.maxTranslation);\n\n/**\n * The maximum angular velocity of a body. This limit is very large and is used\n * to prevent numerical problems. You shouldn't need to adjust this.\n */\nSettings.maxRotation = (0.5 * Math.PI)\nSettings.maxRotationSquared = (Settings.maxRotation * Settings.maxRotation)\n\n/**\n * This scale factor controls how fast overlap is resolved. Ideally this would\n * be 1 so that overlap is removed in one time step. However using values close\n * to 1 often lead to overshoot.\n */\nSettings.baumgarte = 0.2;\nSettings.toiBaugarte = 0.75;\n\n// Sleep\n\n/**\n * The time that a body must be still before it will go to sleep.\n */\nSettings.timeToSleep = 0.5;\n\n/**\n * A body cannot sleep if its linear velocity is above this tolerance.\n */\nSettings.linearSleepTolerance = 0.01;\n\nSettings.linearSleepToleranceSqr = Math.pow(Settings.linearSleepTolerance, 2);\n\n/**\n * A body cannot sleep if its angular velocity is above this tolerance.\n */\nSettings.angularSleepTolerance = (2.0 / 180.0 * Math.PI);\n\nSettings.angularSleepToleranceSqr = Math.pow(Settings.angularSleepTolerance, 2);\n\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Transform;\n\nvar common = require('../util/common');\nvar Vec2 = require('./Vec2');\nvar Rot = require('./Rot');\n\n// TODO merge with Rot\n\n/**\n * A transform contains translation and rotation. It is used to represent the\n * position and orientation of rigid frames. Initialize using a position vector\n * and a rotation.\n *\n * @prop {Vec2} position\n * @prop {Rot} rotation\n */\nfunction Transform(position, rotation) {\n  if (!(this instanceof Transform)) {\n    return new Transform(position, rotation);\n  }\n  this.p = Vec2.zero();\n  this.q = Rot.identity();\n  if (typeof position !== 'undefined') {\n    this.p.set(position);\n  }\n  if (typeof rotation !== 'undefined') {\n    this.q.set(rotation);\n  }\n};\n\nTransform.clone = function(xf) {\n  var obj = Object.create(Transform.prototype);\n  obj.p = Vec2.clone(xf.p);\n  obj.q = Rot.clone(xf.q);\n  return obj;\n};\n\nTransform.neo = function(position, rotation) {\n  var obj = Object.create(Transform.prototype);\n  obj.p = Vec2.clone(position);\n  obj.q = Rot.clone(rotation);\n  return obj;\n};\n\nTransform.identity = function() {\n  var obj = Object.create(Transform.prototype);\n  obj.p = Vec2.zero();\n  obj.q = Rot.identity();\n  return obj;\n};\n\n/**\n * Set this to the identity transform.\n */\nTransform.prototype.setIdentity = function() {\n  this.p.setZero();\n  this.q.setIdentity();\n}\n\n/**\n * Set this based on the position and angle.\n */\nTransform.prototype.set = function(a, b) {\n  if (typeof b === 'undefined') {\n    this.p.set(a.p);\n    this.q.set(a.q);\n  } else {\n    this.p.set(a);\n    this.q.set(b);\n  }\n}\n\nTransform.isValid = function(o) {\n  return o && Vec2.isValid(o.p) && Rot.isValid(o.q);\n}\n\nTransform.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Transform.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Transform!');\n  }\n}\n\n/**\n * @param {Transform} a\n * @param {Vec2} b\n * @returns {Vec2}\n *\n * @param {Transform} a\n * @param {Transform} b\n * @returns {Transform}\n */\nTransform.mul = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  if (Array.isArray(b)) {\n    var arr = [];\n    for (var i = 0; i < b.length; i++) {\n      arr[i] = Transform.mul(a, b[i]);\n    }\n    return arr;\n\n  } else if ('x' in b && 'y' in b) {\n    _ASSERT && Vec2.assert(b);\n    var x = (a.q.c * b.x - a.q.s * b.y) + a.p.x;\n    var y = (a.q.s * b.x + a.q.c * b.y) + a.p.y;\n    return Vec2.neo(x, y);\n\n  } else if ('p' in b && 'q' in b) {\n    _ASSERT && Transform.assert(b);\n    // v2 = A.q.Rot(B.q.Rot(v1) + B.p) + A.p\n    // = (A.q * B.q).Rot(v1) + A.q.Rot(B.p) + A.p\n    var xf = Transform.identity();\n    xf.q = Rot.mulRot(a.q, b.q);\n    xf.p = Vec2.add(Rot.mulVec2(a.q, b.p), a.p);\n    return xf;\n  }\n}\n\n/**\n * @deprecated Use mulFn instead.\n */\nTransform.mulAll = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  var arr = [];\n  for (var i = 0; i < b.length; i++) {\n    arr[i] = Transform.mul(a, b[i]);\n  }\n  return arr;\n}\n\n/**\n * @experimental\n */\nTransform.mulFn = function(a) {\n  _ASSERT && Transform.assert(a);\n  return function(b) {\n    return Transform.mul(a, b);\n  };\n}\n\nTransform.mulVec2 = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  _ASSERT && Vec2.assert(b);\n  var x = (a.q.c * b.x - a.q.s * b.y) + a.p.x;\n  var y = (a.q.s * b.x + a.q.c * b.y) + a.p.y;\n  return Vec2.neo(x, y);\n}\n\nTransform.mulXf = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  _ASSERT && Transform.assert(b);\n  // v2 = A.q.Rot(B.q.Rot(v1) + B.p) + A.p\n  // = (A.q * B.q).Rot(v1) + A.q.Rot(B.p) + A.p\n  var xf = Transform.identity();\n  xf.q = Rot.mulRot(a.q, b.q);\n  xf.p = Vec2.add(Rot.mulVec2(a.q, b.p), a.p);\n  return xf;\n}\n\n/**\n * @param {Transform} a\n * @param {Vec2} b\n * @returns {Vec2}\n *\n * @param {Transform} a\n * @param {Transform} b\n * @returns {Transform}\n */\nTransform.mulT = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  if ('x' in b && 'y' in b) {\n    _ASSERT && Vec2.assert(b)\n    var px = b.x - a.p.x;\n    var py = b.y - a.p.y;\n    var x = (a.q.c * px + a.q.s * py);\n    var y = (-a.q.s * px + a.q.c * py);\n    return Vec2.neo(x, y);\n\n  } else if ('p' in b && 'q' in b) {\n    _ASSERT && Transform.assert(b);\n    // v2 = A.q' * (B.q * v1 + B.p - A.p)\n    // = A.q' * B.q * v1 + A.q' * (B.p - A.p)\n    var xf = Transform.identity();\n    xf.q.set(Rot.mulTRot(a.q, b.q));\n    xf.p.set(Rot.mulTVec2(a.q, Vec2.sub(b.p, a.p)));\n    return xf;\n  }\n}\n\nTransform.mulTVec2 = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  _ASSERT && Vec2.assert(b)\n  var px = b.x - a.p.x;\n  var py = b.y - a.p.y;\n  var x = (a.q.c * px + a.q.s * py);\n  var y = (-a.q.s * px + a.q.c * py);\n  return Vec2.neo(x, y);\n}\n\nTransform.mulTXf = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  _ASSERT && Transform.assert(b);\n  // v2 = A.q' * (B.q * v1 + B.p - A.p)\n  // = A.q' * B.q * v1 + A.q' * (B.p - A.p)\n  var xf = Transform.identity();\n  xf.q.set(Rot.mulTRot(a.q, b.q));\n  xf.p.set(Rot.mulTVec2(a.q, Vec2.sub(b.p, a.p)));\n  return xf;\n}\n","if (typeof Object.create == 'function') {\n  module.exports = function(proto, props) {\n    return Object.create.call(Object, proto, props);\n  };\n} else {\n  module.exports = function(proto, props) {\n    if (props)\n      throw Error('Second argument is not supported!');\n    if (typeof proto !== 'object' || proto === null)\n      throw Error('Invalid prototype!');\n    noop.prototype = proto;\n    return new noop;\n  };\n  function noop() {\n  }\n}\n","var _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nmodule.exports = function(to, from) {\n  if (to === null || typeof to === 'undefined') {\n    to = {};\n  }\n\n  for ( var key in from) {\n    if (from.hasOwnProperty(key) && typeof to[key] === 'undefined') {\n      to[key] = from[key];\n    }\n  }\n\n  if (typeof Object.getOwnPropertySymbols === 'function') {\n    var symbols = Object.getOwnPropertySymbols(from);\n    for (var i = 0; i < symbols.length; i++) {\n      var symbol = symbols[i];\n      if (from.propertyIsEnumerable(symbol) && typeof to[key] === 'undefined') {\n        to[symbol] = from[symbol];\n      }\n    }\n  }\n  return to;\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Sweep;\n\nvar common = require('../util/common');\nvar Math = require('./Math');\nvar Vec2 = require('./Vec2');\nvar Rot = require('./Rot');\nvar Transform = require('./Transform');\n\n/**\n * This describes the motion of a body/shape for TOI computation. Shapes are\n * defined with respect to the body origin, which may not coincide with the\n * center of mass. However, to support dynamics we must interpolate the center\n * of mass position.\n * \n * @prop {Vec2} localCenter Local center of mass position\n * @prop {Vec2} c World center position\n * @prop {float} a World angle\n * @prop {float} alpha0 Fraction of the current time step in the range [0,1], c0\n *       and a0 are c and a at alpha0.\n */\nfunction Sweep(c, a) {\n  _ASSERT && common.assert(typeof c === 'undefined');\n  _ASSERT && common.assert(typeof a === 'undefined');\n  this.localCenter = Vec2.zero();\n  this.c = Vec2.zero();\n  this.a = 0;\n  this.alpha0 = 0;\n  this.c0 = Vec2.zero();\n  this.a0 = 0;\n}\n\nSweep.prototype.setTransform = function(xf) {\n  var c = Transform.mulVec2(xf, this.localCenter);\n  this.c.set(c);\n  this.c0.set(c);\n\n  this.a = xf.q.getAngle();\n  this.a0 = xf.q.getAngle();\n};\n\nSweep.prototype.setLocalCenter = function(localCenter, xf) {\n  this.localCenter.set(localCenter);\n\n  var c = Transform.mulVec2(xf, this.localCenter);\n  this.c.set(c);\n  this.c0.set(c);\n};\n\n/**\n * Get the interpolated transform at a specific time.\n * \n * @param xf\n * @param beta A factor in [0,1], where 0 indicates alpha0\n */\nSweep.prototype.getTransform = function(xf, beta) {\n  beta = typeof beta === 'undefined' ? 0 : beta;\n  xf.q.setAngle((1.0 - beta) * this.a0 + beta * this.a);\n  xf.p.setCombine((1.0 - beta), this.c0, beta, this.c);\n\n  // shift to origin\n  xf.p.sub(Rot.mulVec2(xf.q, this.localCenter));\n};\n\n/**\n * Advance the sweep forward, yielding a new initial state.\n * \n * @param {float} alpha The new initial time\n */\nSweep.prototype.advance = function(alpha) {\n  _ASSERT && common.assert(this.alpha0 < 1.0);\n  var beta = (alpha - this.alpha0) / (1.0 - this.alpha0);\n  this.c0.setCombine(beta, this.c, 1 - beta, this.c0);\n  this.a0 = beta * this.a + (1 - beta) * this.a0;\n  this.alpha0 = alpha;\n};\n\nSweep.prototype.forward = function() {\n  this.a0 = this.a;\n  this.c0.set(this.c);\n};\n\n/**\n * normalize the angles in radians to be between -pi and pi.\n */\nSweep.prototype.normalize = function() {\n  var a0 = Math.mod(this.a0, -Math.PI, +Math.PI);\n  this.a -= this.a0 - a0;\n  this.a0 = a0;\n};\n\nSweep.prototype.clone = function() {\n  var clone = new Sweep();\n  clone.localCenter.set(this.localCenter);\n  clone.alpha0 = this.alpha0;\n  clone.a0 = this.a0;\n  clone.a = this.a;\n  clone.c0.set(this.c0);\n  clone.c.set(this.c);\n  return clone;\n};\n\nSweep.prototype.set = function(that) {\n  this.localCenter.set(that.localCenter);\n  this.alpha0 = that.alpha0;\n  this.a0 = that.a0;\n  this.a = that.a;\n  this.c0.set(that.c0);\n  this.c.set(that.c);\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Mat22;\n\nvar common = require('../util/common');\nvar Math = require('./Math');\nvar Vec2 = require('./Vec2');\n\n/**\n * A 2-by-2 matrix. Stored in column-major order.\n */\nfunction Mat22(a, b, c, d) {\n  if (typeof a === 'object' && a !== null) {\n    this.ex = Vec2.clone(a);\n    this.ey = Vec2.clone(b);\n  } else if (typeof a === 'number') {\n    this.ex = Vec2.neo(a, c);\n    this.ey = Vec2.neo(b, d)\n  } else {\n    this.ex = Vec2.zero();\n    this.ey = Vec2.zero()\n  }\n};\n\nMat22.prototype.toString = function() {\n  return JSON.stringify(this);\n};\n\nMat22.isValid = function(o) {\n  return o && Vec2.isValid(o.ex) && Vec2.isValid(o.ey);\n};\n\nMat22.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Mat22.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Mat22!');\n  }\n};\n\nMat22.prototype.set = function(a, b, c, d) {\n  if (typeof a === 'number' && typeof b === 'number' && typeof c === 'number'\n      && typeof d === 'number') {\n    this.ex.set(a, c);\n    this.ey.set(b, d);\n\n  } else if (typeof a === 'object' && typeof b === 'object') {\n    this.ex.set(a);\n    this.ey.set(b);\n\n  } else if (typeof a === 'object') {\n    _ASSERT && Mat22.assert(a);\n    this.ex.set(a.ex);\n    this.ey.set(a.ey);\n\n  } else {\n    _ASSERT && common.assert(false);\n  }\n}\n\nMat22.prototype.setIdentity = function() {\n  this.ex.x = 1.0;\n  this.ey.x = 0.0;\n  this.ex.y = 0.0;\n  this.ey.y = 1.0;\n}\n\nMat22.prototype.setZero = function() {\n  this.ex.x = 0.0;\n  this.ey.x = 0.0;\n  this.ex.y = 0.0;\n  this.ey.y = 0.0;\n}\n\nMat22.prototype.getInverse = function() {\n  var a = this.ex.x;\n  var b = this.ey.x;\n  var c = this.ex.y;\n  var d = this.ey.y;\n  var det = a * d - b * c;\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  var imx = new Mat22();\n  imx.ex.x = det * d;\n  imx.ey.x = -det * b;\n  imx.ex.y = -det * c;\n  imx.ey.y = det * a;\n  return imx;\n}\n\n/**\n * Solve A * x = b, where b is a column vector. This is more efficient than\n * computing the inverse in one-shot cases.\n */\nMat22.prototype.solve = function(v) {\n  _ASSERT && Vec2.assert(v);\n  var a = this.ex.x;\n  var b = this.ey.x;\n  var c = this.ex.y;\n  var d = this.ey.y;\n  var det = a * d - b * c;\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  var w = Vec2.zero();\n  w.x = det * (d * v.x - b * v.y);\n  w.y = det * (a * v.y - c * v.x);\n  return w;\n}\n\n/**\n * Multiply a matrix times a vector. If a rotation matrix is provided, then this\n * transforms the vector from one frame to another.\n */\nMat22.mul = function(mx, v) {\n  if (v && 'x' in v && 'y' in v) {\n    _ASSERT && Vec2.assert(v);\n    var x = mx.ex.x * v.x + mx.ey.x * v.y;\n    var y = mx.ex.y * v.x + mx.ey.y * v.y;\n    return Vec2.neo(x, y);\n\n  } else if (v && 'ex' in v && 'ey' in v) { // Mat22\n    _ASSERT && Mat22.assert(v);\n    return new Mat22(Vec2.mul(mx, v.ex), Vec2.mul(mx, v.ey));\n  }\n\n  _ASSERT && common.assert(false);\n}\n\nMat22.mulVec2 = function(mx, v) {\n  _ASSERT && Vec2.assert(v);\n  var x = mx.ex.x * v.x + mx.ey.x * v.y;\n  var y = mx.ex.y * v.x + mx.ey.y * v.y;\n  return Vec2.neo(x, y);\n}\n\nMat22.mulMat22 = function(mx, v) {\n  _ASSERT && Mat22.assert(v);\n  return new Mat22(Vec2.mul(mx, v.ex), Vec2.mul(mx, v.ey));\n  _ASSERT && common.assert(false);\n}\n\n/**\n * Multiply a matrix transpose times a vector. If a rotation matrix is provided,\n * then this transforms the vector from one frame to another (inverse\n * transform).\n */\nMat22.mulT = function(mx, v) {\n  if (v && 'x' in v && 'y' in v) { // Vec2\n    _ASSERT && Vec2.assert(v);\n    return Vec2.neo(Vec2.dot(v, mx.ex), Vec2.dot(v, mx.ey));\n\n  } else if (v && 'ex' in v && 'ey' in v) { // Mat22\n    _ASSERT && Mat22.assert(v);\n    var c1 = Vec2.neo(Vec2.dot(mx.ex, v.ex), Vec2.dot(mx.ey, v.ex));\n    var c2 = Vec2.neo(Vec2.dot(mx.ex, v.ey), Vec2.dot(mx.ey, v.ey));\n    return new Mat22(c1, c2);\n  }\n\n  _ASSERT && common.assert(false);\n}\n\nMat22.mulTVec2 = function(mx, v) {\n  _ASSERT && Mat22.assert(mx);\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(Vec2.dot(v, mx.ex), Vec2.dot(v, mx.ey));\n}\n\nMat22.mulTMat22 = function(mx, v) {\n  _ASSERT && Mat22.assert(mx);\n  _ASSERT && Mat22.assert(v);\n  var c1 = Vec2.neo(Vec2.dot(mx.ex, v.ex), Vec2.dot(mx.ey, v.ex));\n  var c2 = Vec2.neo(Vec2.dot(mx.ex, v.ey), Vec2.dot(mx.ey, v.ey));\n  return new Mat22(c1, c2);\n}\n\nMat22.abs = function(mx) {\n  _ASSERT && Mat22.assert(mx);\n  return new Mat22(Vec2.abs(mx.ex), Vec2.abs(mx.ey));\n}\n\nMat22.add = function(mx1, mx2) {\n  _ASSERT && Mat22.assert(mx1);\n  _ASSERT && Mat22.assert(mx2);\n  return new Mat22(Vec2.add(mx1.ex + mx2.ex), Vec2.add(mx1.ey + mx2.ey));\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Vec3;\n\nvar common = require('../util/common');\nvar Math = require('./Math');\n\nfunction Vec3(x, y, z) {\n  if (!(this instanceof Vec3)) {\n    return new Vec3(x, y, z);\n  }\n  if (typeof x === 'undefined') {\n    this.x = 0, this.y = 0, this.z = 0;\n  } else if (typeof x === 'object') {\n    this.x = x.x, this.y = x.y, this.z = x.z;\n  } else {\n    this.x = x, this.y = y, this.z = z;\n  }\n  _ASSERT && Vec3.assert(this);\n};\n\nVec3.prototype._serialize = function() {\n  return {\n    x: this.x,\n    y: this.y,\n    z: this.z\n  };\n};\n\nVec3._deserialize = function(data) {\n  var obj = Object.create(Vec3.prototype);\n  obj.x = data.x;\n  obj.y = data.y;\n  obj.z = data.z;\n  return obj;\n};\n\nVec3.neo = function(x, y, z) {\n  var obj = Object.create(Vec3.prototype);\n  obj.x = x;\n  obj.y = y;\n  obj.z = z;\n  return obj;\n};\n\nVec3.clone = function(v) {\n  _ASSERT && Vec3.assert(v);\n  return Vec3.neo(v.x, v.y, v.z);\n};\n\nVec3.prototype.toString = function() {\n  return JSON.stringify(this);\n};\n\n/**\n * Does this vector contain finite coordinates?\n */\nVec3.isValid = function(v) {\n  return v && Math.isFinite(v.x) && Math.isFinite(v.y) && Math.isFinite(v.z);\n}\n\nVec3.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Vec3.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Vec3!');\n  }\n}\n\nVec3.prototype.setZero = function() {\n  this.x = 0.0;\n  this.y = 0.0;\n  this.z = 0.0;\n  return this;\n}\n\nVec3.prototype.set = function(x, y, z) {\n  this.x = x;\n  this.y = y;\n  this.z = z;\n  return this;\n}\n\nVec3.prototype.add = function(w) {\n  this.x += w.x;\n  this.y += w.y;\n  this.z += w.z;\n  return this;\n}\n\nVec3.prototype.sub = function(w) {\n  this.x -= w.x;\n  this.y -= w.y;\n  this.z -= w.z;\n  return this;\n}\n\nVec3.prototype.mul = function(m) {\n  this.x *= m;\n  this.y *= m;\n  this.z *= m;\n  return this;\n}\n\nVec3.areEqual = function(v, w) {\n  _ASSERT && Vec3.assert(v);\n  _ASSERT && Vec3.assert(w);\n  return v == w ||\n    typeof v === 'object' && v !== null &&\n    typeof w === 'object' && w !== null &&\n    v.x === w.x && v.y === w.y && v.z === w.z;\n}\n\n/**\n * Perform the dot product on two vectors.\n */\nVec3.dot = function(v, w) {\n  return v.x * w.x + v.y * w.y + v.z * w.z;\n}\n\n/**\n * Perform the cross product on two vectors. In 2D this produces a scalar.\n */\nVec3.cross = function(v, w) {\n  return new Vec3(\n    v.y * w.z - v.z * w.y,\n    v.z * w.x - v.x * w.z,\n    v.x * w.y - v.y * w.x\n  );\n}\n\nVec3.add = function(v, w) {\n  return new Vec3(v.x + w.x, v.y + w.y, v.z + w.z);\n}\n\nVec3.sub = function(v, w) {\n  return new Vec3(v.x - w.x, v.y - w.y, v.z - w.z);\n}\n\nVec3.mul = function(v, m) {\n  return new Vec3(m * v.x, m * v.y, m * v.z);\n}\n\nVec3.prototype.neg = function() {\n  this.x = -this.x;\n  this.y = -this.y;\n  this.z = -this.z;\n  return this;\n}\n\nVec3.neg = function(v) {\n  return new Vec3(-v.x, -v.y, -v.z);\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Velocity;\n\nvar Vec2 = require('./Vec2');\n\n/**\n * @prop {Vec2} v linear\n * @prop {float} w angular\n */\nfunction Velocity() {\n  this.v = Vec2.zero();\n  this.w = 0;\n}","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Position;\n\nvar Vec2 = require('./Vec2');\nvar Rot = require('./Rot');\n\n/**\n * @prop {Vec2} c location\n * @prop {float} a angle\n */\nfunction Position() {\n  this.c = Vec2.zero();\n  this.a = 0;\n}\n\nPosition.prototype.getTransform = function(xf, p) {\n  xf.q.set(this.a);\n  xf.p.set(Vec2.sub(this.c, Rot.mulVec2(xf.q, p)));\n  return xf;\n}","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Mat33;\n\nvar common = require('../util/common');\nvar Math = require('./Math');\nvar Vec2 = require('./Vec2');\nvar Vec3 = require('./Vec3');\n\n/**\n * A 3-by-3 matrix. Stored in column-major order.\n */\nfunction Mat33(a, b, c) {\n  if (typeof a === 'object' && a !== null) {\n    this.ex = Vec3.clone(a);\n    this.ey = Vec3.clone(b);\n    this.ez = Vec3.clone(c);\n  } else {\n    this.ex = Vec3();\n    this.ey = Vec3();\n    this.ez = Vec3();\n  }\n};\n\nMat33.prototype.toString = function() {\n  return JSON.stringify(this);\n};\n\nMat33.isValid = function(o) {\n  return o && Vec3.isValid(o.ex) && Vec3.isValid(o.ey) && Vec3.isValid(o.ez);\n};\n\nMat33.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Mat33.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Mat33!');\n  }\n};\n\n/**\n * Set this matrix to all zeros.\n */\nMat33.prototype.setZero = function() {\n  this.ex.setZero();\n  this.ey.setZero();\n  this.ez.setZero();\n  return this;\n}\n\n/**\n * Solve A * x = b, where b is a column vector. This is more efficient than\n * computing the inverse in one-shot cases.\n * \n * @param {Vec3} v\n * @returns {Vec3}\n */\nMat33.prototype.solve33 = function(v) {\n  var det = Vec3.dot(this.ex, Vec3.cross(this.ey, this.ez));\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  var r = new Vec3();\n  r.x = det * Vec3.dot(v, Vec3.cross(this.ey, this.ez));\n  r.y = det * Vec3.dot(this.ex, Vec3.cross(v, this.ez));\n  r.z = det * Vec3.dot(this.ex, Vec3.cross(this.ey, v));\n  return r;\n}\n\n/**\n * Solve A * x = b, where b is a column vector. This is more efficient than\n * computing the inverse in one-shot cases. Solve only the upper 2-by-2 matrix\n * equation.\n * \n * @param {Vec2} v\n * \n * @returns {Vec2}\n */\nMat33.prototype.solve22 = function(v) {\n  var a11 = this.ex.x;\n  var a12 = this.ey.x;\n  var a21 = this.ex.y;\n  var a22 = this.ey.y;\n  var det = a11 * a22 - a12 * a21;\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  var r = Vec2.zero();\n  r.x = det * (a22 * v.x - a12 * v.y);\n  r.y = det * (a11 * v.y - a21 * v.x);\n  return r;\n}\n\n/**\n * Get the inverse of this matrix as a 2-by-2. Returns the zero matrix if\n * singular.\n * \n * @param {Mat33} M\n */\nMat33.prototype.getInverse22 = function(M) {\n  var a = this.ex.x;\n  var b = this.ey.x;\n  var c = this.ex.y;\n  var d = this.ey.y;\n  var det = a * d - b * c;\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  M.ex.x = det * d;\n  M.ey.x = -det * b;\n  M.ex.z = 0.0;\n  M.ex.y = -det * c;\n  M.ey.y = det * a;\n  M.ey.z = 0.0;\n  M.ez.x = 0.0;\n  M.ez.y = 0.0;\n  M.ez.z = 0.0;\n}\n\n/**\n * Get the symmetric inverse of this matrix as a 3-by-3. Returns the zero matrix\n * if singular.\n * \n * @param {Mat33} M\n */\nMat33.prototype.getSymInverse33 = function(M) {\n  var det = Vec3.dot(this.ex, Vec3.cross(this.ey, this.ez));\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  var a11 = this.ex.x;\n  var a12 = this.ey.x;\n  var a13 = this.ez.x;\n  var a22 = this.ey.y;\n  var a23 = this.ez.y;\n  var a33 = this.ez.z;\n\n  M.ex.x = det * (a22 * a33 - a23 * a23);\n  M.ex.y = det * (a13 * a23 - a12 * a33);\n  M.ex.z = det * (a12 * a23 - a13 * a22);\n\n  M.ey.x = M.ex.y;\n  M.ey.y = det * (a11 * a33 - a13 * a13);\n  M.ey.z = det * (a13 * a12 - a11 * a23);\n\n  M.ez.x = M.ex.z;\n  M.ez.y = M.ey.z;\n  M.ez.z = det * (a11 * a22 - a12 * a12);\n}\n\n/**\n * Multiply a matrix times a vector.\n * \n * @param {Mat33} a\n * @param {Vec3|Vec2} b\n * \n * @returns {Vec3|Vec2}\n */\nMat33.mul = function(a, b) {\n  _ASSERT && Mat33.assert(a);\n  if (b && 'z' in b && 'y' in b && 'x' in b) {\n    _ASSERT && Vec3.assert(b);\n    var x = a.ex.x * b.x + a.ey.x * b.y + a.ez.x * b.z;\n    var y = a.ex.y * b.x + a.ey.y * b.y + a.ez.y * b.z;\n    var z = a.ex.z * b.x + a.ey.z * b.y + a.ez.z * b.z;\n    return new Vec3(x, y, z);\n\n  } else if (b && 'y' in b && 'x' in b) {\n    _ASSERT && Vec2.assert(b);\n    var x = a.ex.x * b.x + a.ey.x * b.y;\n    var y = a.ex.y * b.x + a.ey.y * b.y;\n    return Vec2.neo(x, y);\n  }\n\n  _ASSERT && common.assert(false);\n}\n\nMat33.mulVec3 = function(a, b) {\n  _ASSERT && Mat33.assert(a);\n  _ASSERT && Vec3.assert(b);\n  var x = a.ex.x * b.x + a.ey.x * b.y + a.ez.x * b.z;\n  var y = a.ex.y * b.x + a.ey.y * b.y + a.ez.y * b.z;\n  var z = a.ex.z * b.x + a.ey.z * b.y + a.ez.z * b.z;\n  return new Vec3(x, y, z);\n}\n\nMat33.mulVec2 = function(a, b) {\n  _ASSERT && Mat33.assert(a);\n  _ASSERT && Vec2.assert(b);\n  var x = a.ex.x * b.x + a.ey.x * b.y;\n  var y = a.ex.y * b.x + a.ey.y * b.y;\n  return Vec2.neo(x, y);\n}\n\nMat33.add = function(a, b) {\n  _ASSERT && Mat33.assert(a);\n  _ASSERT && Mat33.assert(b);\n  return new Mat33(\n    Vec3.add(a.ex + b.ex),\n    Vec3.add(a.ey + b.ey),\n    Vec3.add(a.ez + b.ez)\n  );\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Joint;\n\nvar common = require('./util/common');\n\n/**\n * A joint edge is used to connect bodies and joints together in a joint graph\n * where each body is a node and each joint is an edge. A joint edge belongs to\n * a doubly linked list maintained in each attached body. Each joint has two\n * joint nodes, one for each attached body.\n * \n * @prop {Body} other provides quick access to the other body attached.\n * @prop {Joint} joint the joint\n * @prop {JointEdge} prev the previous joint edge in the body's joint list\n * @prop {JointEdge} next the next joint edge in the body's joint list\n */\nfunction JointEdge() {\n  this.other = null;\n  this.joint = null;\n  this.prev = null;\n  this.next = null;\n};\n\n/**\n * @typedef {Object} JointDef\n *\n * Joint definitions are used to construct joints.\n * \n * @prop userData Use this to attach application specific data to your joints.\n *       void userData;\n * @prop {boolean} collideConnected Set this flag to true if the attached bodies\n *       should collide.\n *\n * @prop {Body} bodyA The first attached body.\n * @prop {Body} bodyB The second attached body.\n */\n\nvar DEFAULTS = {\n  userData : null,\n  collideConnected : false\n};\n\n/**\n * The base joint class. Joints are used to constraint two bodies together in\n * various fashions. Some joints also feature limits and motors.\n * \n * @param {JointDef} def\n */\nfunction Joint(def, bodyA, bodyB) {\n  bodyA = def.bodyA || bodyA;\n  bodyB = def.bodyB || bodyB;\n\n  _ASSERT && common.assert(bodyA);\n  _ASSERT && common.assert(bodyB);\n  _ASSERT && common.assert(bodyA != bodyB);\n\n  this.m_type = 'unknown-joint';\n\n  this.m_bodyA = bodyA;\n  this.m_bodyB = bodyB;\n\n  this.m_index = 0;\n  this.m_collideConnected = !!def.collideConnected;\n\n  this.m_prev = null;\n  this.m_next = null;\n\n  this.m_edgeA = new JointEdge();\n  this.m_edgeB = new JointEdge();\n\n  this.m_islandFlag = false;\n  this.m_userData = def.userData;\n};\n\n/**\n * Short-cut function to determine if either body is inactive.\n * \n * @returns {boolean}\n */\nJoint.prototype.isActive = function() {\n  return this.m_bodyA.isActive() && this.m_bodyB.isActive();\n}\n\n/**\n * Get the type of the concrete joint.\n * \n * @returns JointType\n */\nJoint.prototype.getType = function() {\n  return this.m_type;\n}\n\n/**\n * Get the first body attached to this joint.\n * \n * @returns Body\n */\nJoint.prototype.getBodyA = function() {\n  return this.m_bodyA;\n}\n\n/**\n * Get the second body attached to this joint.\n * \n * @returns Body\n */\nJoint.prototype.getBodyB = function() {\n  return this.m_bodyB;\n}\n\n/**\n * Get the next joint the world joint list.\n * \n * @returns Joint\n */\nJoint.prototype.getNext = function() {\n  return this.m_next;\n}\n\nJoint.prototype.getUserData = function() {\n  return this.m_userData;\n}\n\nJoint.prototype.setUserData = function(data) {\n  this.m_userData = data;\n}\n\n/**\n * Get collide connected. Note: modifying the collide connect flag won't work\n * correctly because the flag is only checked when fixture AABBs begin to\n * overlap.\n * \n * @returns {boolean}\n */\nJoint.prototype.getCollideConnected = function() {\n  return this.m_collideConnected;\n};\n\n/**\n * Get the anchor point on bodyA in world coordinates.\n * \n * @return {Vec2}\n */\nJoint.prototype.getAnchorA = function() {\n};\n\n/**\n * Get the anchor point on bodyB in world coordinates.\n * \n * @return {Vec2}\n */\nJoint.prototype.getAnchorB = function() {\n};\n\n/**\n * Get the reaction force on bodyB at the joint anchor in Newtons.\n * \n * @param {float} inv_dt\n * @return {Vec2}\n */\nJoint.prototype.getReactionForce = function(inv_dt) {\n};\n\n/**\n * Get the reaction torque on bodyB in N*m.\n * \n * @param {float} inv_dt\n * @return {float}\n */\nJoint.prototype.getReactionTorque = function(inv_dt) {\n};\n\n/**\n * Shift the origin for any points stored in world coordinates.\n * \n * @param {Vec2} newOrigin\n */\nJoint.prototype.shiftOrigin = function(newOrigin) {\n};\n\n/**\n */\nJoint.prototype.initVelocityConstraints = function(step) {\n};\n\n/**\n */\nJoint.prototype.solveVelocityConstraints = function(step) {\n};\n\n/**\n * This returns true if the position errors are within tolerance.\n */\nJoint.prototype.solvePositionConstraints = function(step) {\n};","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Shape;\n\nvar Math = require('./common/Math');\n\n/**\n * A shape is used for collision detection. You can create a shape however you\n * like. Shapes used for simulation in World are created automatically when a\n * Fixture is created. Shapes may encapsulate one or more child shapes.\n */\nfunction Shape() {\n  this.m_type;\n  this.m_radius;\n}\n\nShape.prototype._reset = function() {\n};\n\nShape.prototype._serialize = function() {\n  return {};\n};\n\nShape.TYPES = {};\n\nShape._deserialize = function(data) {\n  var clazz = Shape.TYPES[data.type];\n  return clazz && clazz._deserialize && clazz._deserialize(data);\n};\n\nShape.isValid = function(shape) {\n  return !!shape;\n};\n\nShape.prototype.getRadius = function() {\n  return this.m_radius;\n};\n\n/**\n * Get the type of this shape. You can use this to down cast to the concrete\n * shape.\n * \n * @return the shape type.\n */\nShape.prototype.getType = function() {\n  return this.m_type;\n};\n\n/**\n * @deprecated Shapes should be treated as immutable.\n *\n * clone the concrete shape.\n */\nShape.prototype._clone = function() {\n};\n\n/**\n * // Get the number of child primitives.\n */\nShape.prototype.getChildCount = function() {\n};\n\n/**\n * Test a point for containment in this shape. This only works for convex\n * shapes.\n * \n * @param {Transform} xf The shape world transform.\n * @param p A point in world coordinates.\n */\nShape.prototype.testPoint = function(xf, p) {\n};\n\n/**\n * Cast a ray against a child shape.\n * \n * @param {RayCastOutput} output The ray-cast results.\n * @param {RayCastInput} input The ray-cast input parameters.\n * @param {Transform} transform The transform to be applied to the shape.\n * @param childIndex The child shape index\n */\nShape.prototype.rayCast = function(output, input, transform, childIndex) {\n};\n\n/**\n * Given a transform, compute the associated axis aligned bounding box for a\n * child shape.\n * \n * @param {AABB} aabb Returns the axis aligned box.\n * @param {Transform} xf The world transform of the shape.\n * @param childIndex The child shape\n */\nShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n};\n\n/**\n * Compute the mass properties of this shape using its dimensions and density.\n * The inertia tensor is computed about the local origin.\n * \n * @param {MassData} massData Returns the mass data for this shape.\n * @param density The density in kilograms per meter squared.\n */\nShape.prototype.computeMass = function(massData, density) {\n};\n\n/**\n * @param {DistanceProxy} proxy\n */\nShape.prototype.computeDistanceProxy = function(proxy) {\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar Settings = require('../Settings');\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\n\nmodule.exports = AABB;\n\nfunction AABB(lower, upper) {\n  if (!(this instanceof AABB)) {\n    return new AABB(lower, upper);\n  }\n\n  this.lowerBound = Vec2.zero();\n  this.upperBound = Vec2.zero();\n\n  if (typeof lower === 'object') {\n    this.lowerBound.set(lower);\n  }\n  if (typeof upper === 'object') {\n    this.upperBound.set(upper);\n  }\n};\n\n/**\n * Verify that the bounds are sorted.\n */\nAABB.prototype.isValid = function() {\n  return AABB.isValid(this);\n}\n\nAABB.isValid = function(aabb) {\n  var d = Vec2.sub(aabb.upperBound, aabb.lowerBound);\n  var valid = d.x >= 0.0 && d.y >= 0.0 && Vec2.isValid(aabb.lowerBound) && Vec2.isValid(aabb.upperBound);\n  return valid;\n}\n\nAABB.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!AABB.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid AABB!');\n  }\n}\n\n/**\n * Get the center of the AABB.\n */\nAABB.prototype.getCenter = function() {\n  return Vec2.neo((this.lowerBound.x + this.upperBound.x) * 0.5, (this.lowerBound.y + this.upperBound.y) * 0.5);\n}\n\n/**\n * Get the extents of the AABB (half-widths).\n */\nAABB.prototype.getExtents = function() {\n  return Vec2.neo((this.upperBound.x - this.lowerBound.x) * 0.5, (this.upperBound.y - this.lowerBound.y) * 0.5);\n}\n\n/**\n * Get the perimeter length.\n */\nAABB.prototype.getPerimeter = function() {\n  return 2.0 * (this.upperBound.x - this.lowerBound.x + this.upperBound.y - this.lowerBound.y);\n}\n\n/**\n * Combine one or two AABB into this one.\n */\nAABB.prototype.combine = function(a, b) {\n  b = b || this;\n\n  var lowerA = a.lowerBound;\n  var upperA = a.upperBound;\n  var lowerB = b.lowerBound;\n  var upperB = b.upperBound;\n\n  var lowerX = Math.min(lowerA.x, lowerB.x);\n  var lowerY = Math.min(lowerA.y, lowerB.y);\n  var upperX = Math.max(upperB.x, upperA.x);\n  var upperY = Math.max(upperB.y, upperA.y);\n\n  this.lowerBound.set(lowerX, lowerY);\n  this.upperBound.set(upperX, upperY);\n}\n\nAABB.prototype.combinePoints = function(a, b) {\n  this.lowerBound.set(Math.min(a.x, b.x), Math.min(a.y, b.y));\n  this.upperBound.set(Math.max(a.x, b.x), Math.max(a.y, b.y));\n}\n\nAABB.prototype.set = function(aabb) {\n  this.lowerBound.set(aabb.lowerBound.x, aabb.lowerBound.y);\n  this.upperBound.set(aabb.upperBound.x, aabb.upperBound.y);\n}\n\nAABB.prototype.contains = function(aabb) {\n  var result = true;\n  result = result && this.lowerBound.x <= aabb.lowerBound.x;\n  result = result && this.lowerBound.y <= aabb.lowerBound.y;\n  result = result && aabb.upperBound.x <= this.upperBound.x;\n  result = result && aabb.upperBound.y <= this.upperBound.y;\n  return result;\n}\n\nAABB.prototype.extend = function(value) {\n  AABB.extend(this, value);\n}\n\nAABB.extend = function(aabb, value) {\n  aabb.lowerBound.x -= value;\n  aabb.lowerBound.y -= value;\n  aabb.upperBound.x += value;\n  aabb.upperBound.y += value;\n}\n\nAABB.testOverlap = function(a, b) {\n  var d1x = b.lowerBound.x - a.upperBound.x;\n  var d2x = a.lowerBound.x - b.upperBound.x;\n\n  var d1y = b.lowerBound.y - a.upperBound.y;\n  var d2y = a.lowerBound.y - b.upperBound.y;\n\n  if (d1x > 0 || d1y > 0 || d2x > 0 || d2y > 0) {\n    return false;\n  }\n  return true;\n}\n\nAABB.areEqual = function(a, b) {\n  return Vec2.areEqual(a.lowerBound, b.lowerBound) && Vec2.areEqual(a.upperBound, b.upperBound);\n}\n\nAABB.diff = function(a, b) {\n  var wD = Math.max(0, Math.min(a.upperBound.x, b.upperBound.x) - Math.max(b.lowerBound.x, a.lowerBound.x))\n  var hD = Math.max(0, Math.min(a.upperBound.y, b.upperBound.y) - Math.max(b.lowerBound.y, a.lowerBound.y));\n\n  var wA = a.upperBound.x - a.lowerBound.x;\n  var hA = a.upperBound.y - a.lowerBound.y;\n\n  var wB = b.upperBound.x - b.lowerBound.x;\n  var hB = b.upperBound.y - b.lowerBound.y;\n\n  return wA * hA + wB * hB - wD * hD;\n};\n\n/**\n * @typedef RayCastInput\n *\n * Ray-cast input data. The ray extends from p1 to p1 + maxFraction * (p2 - p1).\n *\n * @prop {Vec2} p1\n * @prop {Vec2} p2\n * @prop {number} maxFraction\n */\n\n/**\n * @typedef RayCastInput\n *\n * Ray-cast output data. The ray hits at p1 + fraction * (p2 - p1), where p1 and\n * p2 come from RayCastInput.\n *\n * @prop {Vec2} normal\n * @prop {number} fraction\n */\n\n/**\n * @param {RayCastOutput} output\n * @param {RayCastInput} input\n * @returns {boolean}\n */\nAABB.prototype.rayCast = function(output, input) {\n  // From Real-time Collision Detection, p179.\n\n  var tmin = -Infinity;\n  var tmax = Infinity;\n\n  var p = input.p1;\n  var d = Vec2.sub(input.p2, input.p1);\n  var absD = Vec2.abs(d);\n\n  var normal = Vec2.zero();\n\n  for (var f = 'x'; f !== null; f = (f === 'x' ? 'y' : null)) {\n    if (absD.x < Math.EPSILON) {\n      // Parallel.\n      if (p[f] < this.lowerBound[f] || this.upperBound[f] < p[f]) {\n        return false;\n      }\n    } else {\n      var inv_d = 1.0 / d[f];\n      var t1 = (this.lowerBound[f] - p[f]) * inv_d;\n      var t2 = (this.upperBound[f] - p[f]) * inv_d;\n\n      // Sign of the normal vector.\n      var s = -1.0;\n\n      if (t1 > t2) {\n        var temp = t1;\n        t1 = t2, t2 = temp;\n        s = 1.0;\n      }\n\n      // Push the min up\n      if (t1 > tmin) {\n        normal.setZero();\n        normal[f] = s;\n        tmin = t1;\n      }\n\n      // Pull the max down\n      tmax = Math.min(tmax, t2);\n\n      if (tmin > tmax) {\n        return false;\n      }\n    }\n  }\n\n  // Does the ray start inside the box?\n  // Does the ray intersect beyond the max fraction?\n  if (tmin < 0.0 || input.maxFraction < tmin) {\n    return false;\n  }\n\n  // Intersection.\n  output.fraction = tmin;\n  output.normal = normal;\n  return true;\n}\n\nAABB.prototype.toString = function() {\n  return JSON.stringify(this);\n}","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar DEBUG_SOLVER = false;\n\nvar common = require('./util/common');\n\nvar Math = require('./common/Math');\nvar Vec2 = require('./common/Vec2');\nvar Transform = require('./common/Transform');\nvar Mat22 = require('./common/Mat22');\nvar Rot = require('./common/Rot');\n\nvar Settings = require('./Settings');\nvar Manifold = require('./Manifold');\nvar Distance = require('./collision/Distance');\n\nmodule.exports = Contact;\n\n/**\n * A contact edge is used to connect bodies and contacts together in a contact\n * graph where each body is a node and each contact is an edge. A contact edge\n * belongs to a doubly linked list maintained in each attached body. Each\n * contact has two contact nodes, one for each attached body.\n * \n * @prop {Contact} contact The contact\n * @prop {ContactEdge} prev The previous contact edge in the body's contact list\n * @prop {ContactEdge} next The next contact edge in the body's contact list\n * @prop {Body} other Provides quick access to the other body attached.\n */\nfunction ContactEdge(contact) {\n  this.contact = contact;\n  this.prev;\n  this.next;\n  this.other;\n};\n\n/**\n * @function Contact~evaluate\n * \n * @param manifold\n * @param xfA\n * @param fixtureA\n * @param indexA\n * @param xfB\n * @param fixtureB\n * @param indexB\n */\n\n/**\n * The class manages contact between two shapes. A contact exists for each\n * overlapping AABB in the broad-phase (except if filtered). Therefore a contact\n * object may exist that has no contact points.\n * \n * @param {Fixture} fA\n * @param {int} indexA\n * @param {Fixture} fB\n * @param {int} indexB\n * @param {Contact~evaluate} evaluateFcn\n */\nfunction Contact(fA, indexA, fB, indexB, evaluateFcn) {\n  // Nodes for connecting bodies.\n  this.m_nodeA = new ContactEdge(this);\n  this.m_nodeB = new ContactEdge(this);\n\n  this.m_fixtureA = fA;\n  this.m_fixtureB = fB;\n\n  this.m_indexA = indexA;\n  this.m_indexB = indexB;\n\n  this.m_evaluateFcn = evaluateFcn;\n\n  this.m_manifold = new Manifold();\n\n  this.m_prev = null;\n  this.m_next = null;\n\n  this.m_toi = 1.0;\n  this.m_toiCount = 0;\n  // This contact has a valid TOI in m_toi\n  this.m_toiFlag = false;\n\n  this.m_friction = mixFriction(this.m_fixtureA.m_friction,\n      this.m_fixtureB.m_friction);\n  this.m_restitution = mixRestitution(this.m_fixtureA.m_restitution,\n      this.m_fixtureB.m_restitution);\n\n  this.m_tangentSpeed = 0.0;\n\n  // This contact can be disabled (by user)\n  this.m_enabledFlag = true;\n\n  // Used when crawling contact graph when forming islands.\n  this.m_islandFlag = false;\n\n  // Set when the shapes are touching.\n  this.m_touchingFlag = false;\n\n  // This contact needs filtering because a fixture filter was changed.\n  this.m_filterFlag = false;\n\n  // This bullet contact had a TOI event\n  this.m_bulletHitFlag = false;\n\n  this.v_points = []; // VelocityConstraintPoint[maxManifoldPoints]\n  this.v_normal = Vec2.zero();\n  this.v_normalMass = new Mat22();\n  this.v_K = new Mat22();\n  this.v_pointCount;\n\n  this.v_tangentSpeed;\n  this.v_friction;\n  this.v_restitution;\n\n  this.v_invMassA;\n  this.v_invMassB;\n  this.v_invIA;\n  this.v_invIB;\n\n  this.p_localPoints = [] // Vec2[maxManifoldPoints];\n  this.p_localNormal = Vec2.zero();\n  this.p_localPoint = Vec2.zero();\n  this.p_localCenterA = Vec2.zero();\n  this.p_localCenterB = Vec2.zero();\n  this.p_type; // Manifold.Type\n  this.p_radiusA;\n  this.p_radiusB;\n  this.p_pointCount;\n\n  this.p_invMassA;\n  this.p_invMassB;\n  this.p_invIA;\n  this.p_invIB;\n}\n\nContact.prototype.initConstraint = function(step) {\n  var fixtureA = this.m_fixtureA;\n  var fixtureB = this.m_fixtureB;\n\n  var shapeA = fixtureA.getShape();\n  var shapeB = fixtureB.getShape();\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  var manifold = this.getManifold();\n\n  var pointCount = manifold.pointCount;\n  _ASSERT && common.assert(pointCount > 0);\n\n  this.v_invMassA = bodyA.m_invMass;\n  this.v_invMassB = bodyB.m_invMass;\n  this.v_invIA = bodyA.m_invI;\n  this.v_invIB = bodyB.m_invI;\n\n  this.v_friction = this.m_friction;\n  this.v_restitution = this.m_restitution;\n  this.v_tangentSpeed = this.m_tangentSpeed;\n\n  this.v_pointCount = pointCount;\n\n  this.v_K.setZero();\n  this.v_normalMass.setZero();\n\n  this.p_invMassA = bodyA.m_invMass;\n  this.p_invMassB = bodyB.m_invMass;\n  this.p_invIA = bodyA.m_invI;\n  this.p_invIB = bodyB.m_invI;\n  this.p_localCenterA = Vec2.clone(bodyA.m_sweep.localCenter);\n  this.p_localCenterB = Vec2.clone(bodyB.m_sweep.localCenter);\n\n  this.p_radiusA = shapeA.m_radius;\n  this.p_radiusB = shapeB.m_radius;\n\n  this.p_type = manifold.type;\n  this.p_localNormal = Vec2.clone(manifold.localNormal);\n  this.p_localPoint = Vec2.clone(manifold.localPoint);\n  this.p_pointCount = pointCount;\n\n  for (var j = 0; j < pointCount; ++j) {\n    var cp = manifold.points[j]; // ManifoldPoint\n    var vcp = this.v_points[j] = new VelocityConstraintPoint();\n\n    if (step.warmStarting) {\n      vcp.normalImpulse = step.dtRatio * cp.normalImpulse;\n      vcp.tangentImpulse = step.dtRatio * cp.tangentImpulse;\n\n    } else {\n      vcp.normalImpulse = 0.0;\n      vcp.tangentImpulse = 0.0;\n    }\n\n    vcp.rA.setZero();\n    vcp.rB.setZero();\n    vcp.normalMass = 0.0;\n    vcp.tangentMass = 0.0;\n    vcp.velocityBias = 0.0;\n\n    this.p_localPoints[j] = Vec2.clone(cp.localPoint);\n\n  }\n};\n\n/**\n * Get the contact manifold. Do not modify the manifold unless you understand\n * the internals of the library.\n */\nContact.prototype.getManifold = function() {\n  return this.m_manifold;\n}\n\n/**\n * Get the world manifold.\n * \n * @param {WorldManifold} [worldManifold]\n */\nContact.prototype.getWorldManifold = function(worldManifold) {\n  var bodyA = this.m_fixtureA.getBody();\n  var bodyB = this.m_fixtureB.getBody();\n  var shapeA = this.m_fixtureA.getShape();\n  var shapeB = this.m_fixtureB.getShape();\n\n  return this.m_manifold.getWorldManifold(worldManifold, bodyA.getTransform(),\n      shapeA.m_radius, bodyB.getTransform(), shapeB.m_radius);\n}\n\n/**\n * Enable/disable this contact. This can be used inside the pre-solve contact\n * listener. The contact is only disabled for the current time step (or sub-step\n * in continuous collisions).\n */\nContact.prototype.setEnabled = function(flag) {\n  this.m_enabledFlag = !!flag;\n}\n\n/**\n * Has this contact been disabled?\n */\nContact.prototype.isEnabled = function() {\n  return this.m_enabledFlag;\n}\n\n/**\n * Is this contact touching?\n */\nContact.prototype.isTouching = function() {\n  return this.m_touchingFlag;\n}\n\n/**\n * Get the next contact in the world's contact list.\n */\nContact.prototype.getNext = function() {\n  return this.m_next;\n}\n\n/**\n * Get fixture A in this contact.\n */\nContact.prototype.getFixtureA = function() {\n  return this.m_fixtureA;\n}\n\n/**\n * Get fixture B in this contact.\n */\nContact.prototype.getFixtureB = function() {\n  return this.m_fixtureB;\n}\n\n/**\n * Get the child primitive index for fixture A.\n */\nContact.prototype.getChildIndexA = function() {\n  return this.m_indexA;\n}\n\n/**\n * Get the child primitive index for fixture B.\n */\nContact.prototype.getChildIndexB = function() {\n  return this.m_indexB;\n}\n\n/**\n * Flag this contact for filtering. Filtering will occur the next time step.\n */\nContact.prototype.flagForFiltering = function() {\n  this.m_filterFlag = true;\n}\n\n/**\n * Override the default friction mixture. You can call this in\n * ContactListener.preSolve. This value persists until set or reset.\n */\nContact.prototype.setFriction = function(friction) {\n  this.m_friction = friction;\n}\n\n/**\n * Get the friction.\n */\nContact.prototype.getFriction = function() {\n  return this.m_friction;\n}\n\n/**\n * Reset the friction mixture to the default value.\n */\nContact.prototype.resetFriction = function() {\n  this.m_friction = mixFriction(this.m_fixtureA.m_friction,\n      this.m_fixtureB.m_friction);\n}\n\n/**\n * Override the default restitution mixture. You can call this in\n * ContactListener.preSolve. The value persists until you set or reset.\n */\nContact.prototype.setRestitution = function(restitution) {\n  this.m_restitution = restitution;\n}\n\n/**\n * Get the restitution.\n */\nContact.prototype.getRestitution = function() {\n  return this.m_restitution;\n}\n\n/**\n * Reset the restitution to the default value.\n */\nContact.prototype.resetRestitution = function() {\n  this.m_restitution = mixRestitution(this.m_fixtureA.m_restitution,\n      this.m_fixtureB.m_restitution);\n}\n\n/**\n * Set the desired tangent speed for a conveyor belt behavior. In meters per\n * second.\n */\nContact.prototype.setTangentSpeed = function(speed) {\n  this.m_tangentSpeed = speed;\n}\n\n/**\n * Get the desired tangent speed. In meters per second.\n */\nContact.prototype.getTangentSpeed = function() {\n  return this.m_tangentSpeed;\n}\n\n/**\n * Called by Update method, and implemented by subclasses.\n */\nContact.prototype.evaluate = function(manifold, xfA, xfB) {\n  this.m_evaluateFcn(manifold, xfA, this.m_fixtureA, this.m_indexA, xfB,\n      this.m_fixtureB, this.m_indexB);\n};\n\n/**\n * Updates the contact manifold and touching status.\n * \n * Note: do not assume the fixture AABBs are overlapping or are valid.\n * \n * @param {function} listener.beginContact\n * @param {function} listener.endContact\n * @param {function} listener.preSolve\n */\nContact.prototype.update = function(listener) {\n\n  // Re-enable this contact.\n  this.m_enabledFlag = true;\n\n  var touching = false;\n  var wasTouching = this.m_touchingFlag;\n\n  var sensorA = this.m_fixtureA.isSensor();\n  var sensorB = this.m_fixtureB.isSensor();\n  var sensor = sensorA || sensorB;\n\n  var bodyA = this.m_fixtureA.getBody();\n  var bodyB = this.m_fixtureB.getBody();\n  var xfA = bodyA.getTransform();\n  var xfB = bodyB.getTransform();\n\n  // Is this contact a sensor?\n  if (sensor) {\n    var shapeA = this.m_fixtureA.getShape();\n    var shapeB = this.m_fixtureB.getShape();\n    touching = Distance.testOverlap(shapeA, this.m_indexA, shapeB,\n        this.m_indexB, xfA, xfB);\n\n    // Sensors don't generate manifolds.\n    this.m_manifold.pointCount = 0;\n  } else {\n\n    // TODO reuse manifold\n    var oldManifold = this.m_manifold;\n    this.m_manifold = new Manifold();\n\n    this.evaluate(this.m_manifold, xfA, xfB);\n    touching = this.m_manifold.pointCount > 0;\n\n    // Match old contact ids to new contact ids and copy the\n    // stored impulses to warm start the solver.\n    for (var i = 0; i < this.m_manifold.pointCount; ++i) {\n      var nmp = this.m_manifold.points[i];\n      nmp.normalImpulse = 0.0;\n      nmp.tangentImpulse = 0.0;\n\n      for (var j = 0; j < oldManifold.pointCount; ++j) {\n        var omp = oldManifold.points[j];\n        if (omp.id.key == nmp.id.key) { // ContactID.key\n          nmp.normalImpulse = omp.normalImpulse;\n          nmp.tangentImpulse = omp.tangentImpulse;\n          break;\n        }\n      }\n    }\n\n    if (touching != wasTouching) {\n      bodyA.setAwake(true);\n      bodyB.setAwake(true);\n    }\n  }\n\n  this.m_touchingFlag = touching;\n\n  if (wasTouching == false && touching == true && listener) {\n    listener.beginContact(this);\n  }\n\n  if (wasTouching == true && touching == false && listener) {\n    listener.endContact(this);\n  }\n\n  if (sensor == false && touching && listener) {\n    listener.preSolve(this, oldManifold);\n  }\n}\n\nContact.prototype.solvePositionConstraint = function(step) {\n  return this._solvePositionConstraint(step, false);\n}\n\nContact.prototype.solvePositionConstraintTOI = function(step, toiA, toiB) {\n  return this._solvePositionConstraint(step, true, toiA, toiB);\n}\n\nContact.prototype._solvePositionConstraint = function(step, toi, toiA, toiB) {\n\n  var fixtureA = this.m_fixtureA;\n  var fixtureB = this.m_fixtureB;\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  var velocityA = bodyA.c_velocity;\n  var velocityB = bodyB.c_velocity;\n  var positionA = bodyA.c_position;\n  var positionB = bodyB.c_position;\n\n  var localCenterA = Vec2.clone(this.p_localCenterA);\n  var localCenterB = Vec2.clone(this.p_localCenterB);\n\n  var mA = 0.0;\n  var iA = 0.0;\n  if (!toi || (bodyA == toiA || bodyA == toiB)) {\n    mA = this.p_invMassA;\n    iA = this.p_invIA;\n  }\n\n  var mB = 0.0;\n  var iB = 0.0;\n  if (!toi || (bodyB == toiA || bodyB == toiB)) {\n    mB = this.p_invMassB;\n    iB = this.p_invIB;\n  }\n\n  var cA = Vec2.clone(positionA.c);\n  var aA = positionA.a;\n\n  var cB = Vec2.clone(positionB.c);\n  var aB = positionB.a;\n\n  var minSeparation = 0.0;\n\n  // Solve normal constraints\n  for (var j = 0; j < this.p_pointCount; ++j) {\n    var xfA = Transform.identity();\n    var xfB = Transform.identity();\n    xfA.q.set(aA);\n    xfB.q.set(aB);\n    xfA.p = Vec2.sub(cA, Rot.mulVec2(xfA.q, localCenterA));\n    xfB.p = Vec2.sub(cB, Rot.mulVec2(xfB.q, localCenterB));\n\n    // PositionSolverManifold\n    var normal, point, separation;\n    switch (this.p_type) {\n    case Manifold.e_circles:\n      var pointA = Transform.mulVec2(xfA, this.p_localPoint);\n      var pointB = Transform.mulVec2(xfB, this.p_localPoints[0]);\n      normal = Vec2.sub(pointB, pointA);\n      normal.normalize();\n      point = Vec2.combine(0.5, pointA, 0.5, pointB);\n      separation = Vec2.dot(Vec2.sub(pointB, pointA), normal) - this.p_radiusA\n          - this.p_radiusB;\n      break;\n\n    case Manifold.e_faceA:\n      normal = Rot.mulVec2(xfA.q, this.p_localNormal);\n      var planePoint = Transform.mulVec2(xfA, this.p_localPoint);\n      var clipPoint = Transform.mulVec2(xfB, this.p_localPoints[j]);\n      separation = Vec2.dot(Vec2.sub(clipPoint, planePoint), normal)\n          - this.p_radiusA - this.p_radiusB;\n      point = clipPoint;\n      break;\n\n    case Manifold.e_faceB:\n      normal = Rot.mulVec2(xfB.q, this.p_localNormal);\n      var planePoint = Transform.mulVec2(xfB, this.p_localPoint);\n      var clipPoint = Transform.mulVec2(xfA, this.p_localPoints[j]);\n      separation = Vec2.dot(Vec2.sub(clipPoint, planePoint), normal)\n          - this.p_radiusA - this.p_radiusB;\n      point = clipPoint;\n\n      // Ensure normal points from A to B\n      normal.mul(-1);\n      break;\n    }\n\n    var rA = Vec2.sub(point, cA);\n    var rB = Vec2.sub(point, cB);\n\n    // Track max constraint error.\n    minSeparation = Math.min(minSeparation, separation);\n\n    var baumgarte = toi ? Settings.toiBaugarte : Settings.baumgarte;\n    var linearSlop = Settings.linearSlop;\n    var maxLinearCorrection = Settings.maxLinearCorrection;\n\n    // Prevent large corrections and allow slop.\n    var C = Math.clamp(baumgarte * (separation + linearSlop),\n        -maxLinearCorrection, 0.0);\n\n    // Compute the effective mass.\n    var rnA = Vec2.cross(rA, normal);\n    var rnB = Vec2.cross(rB, normal);\n    var K = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\n\n    // Compute normal impulse\n    var impulse = K > 0.0 ? -C / K : 0.0;\n\n    var P = Vec2.mul(impulse, normal);\n\n    cA.subMul(mA, P);\n    aA -= iA * Vec2.cross(rA, P);\n\n    cB.addMul(mB, P);\n    aB += iB * Vec2.cross(rB, P);\n  }\n\n  positionA.c.set(cA);\n  positionA.a = aA;\n\n  positionB.c.set(cB);\n  positionB.a = aB;\n\n  return minSeparation;\n}\n\n// TODO merge with ManifoldPoint\nfunction VelocityConstraintPoint() {\n  this.rA = Vec2.zero();\n  this.rB = Vec2.zero();\n  this.normalImpulse = 0;\n  this.tangentImpulse = 0;\n  this.normalMass = 0;\n  this.tangentMass = 0;\n  this.velocityBias = 0;\n}\n\nContact.prototype.initVelocityConstraint = function(step) {\n  var fixtureA = this.m_fixtureA;\n  var fixtureB = this.m_fixtureB;\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  var velocityA = bodyA.c_velocity;\n  var velocityB = bodyB.c_velocity;\n\n  var positionA = bodyA.c_position;\n  var positionB = bodyB.c_position;\n\n  var radiusA = this.p_radiusA;\n  var radiusB = this.p_radiusB;\n  var manifold = this.getManifold();\n\n  var mA = this.v_invMassA;\n  var mB = this.v_invMassB;\n  var iA = this.v_invIA;\n  var iB = this.v_invIB;\n  var localCenterA = Vec2.clone(this.p_localCenterA);\n  var localCenterB = Vec2.clone(this.p_localCenterB);\n\n  var cA = Vec2.clone(positionA.c);\n  var aA = positionA.a;\n  var vA = Vec2.clone(velocityA.v);\n  var wA = velocityA.w;\n\n  var cB = Vec2.clone(positionB.c);\n  var aB = positionB.a;\n  var vB = Vec2.clone(velocityB.v);\n  var wB = velocityB.w;\n\n  _ASSERT && common.assert(manifold.pointCount > 0);\n\n  var xfA = Transform.identity();\n  var xfB = Transform.identity();\n  xfA.q.set(aA);\n  xfB.q.set(aB);\n  xfA.p.setCombine(1, cA, -1, Rot.mulVec2(xfA.q, localCenterA));\n  xfB.p.setCombine(1, cB, -1, Rot.mulVec2(xfB.q, localCenterB));\n\n  var worldManifold = manifold.getWorldManifold(null, xfA, radiusA, xfB, radiusB);\n\n  this.v_normal.set(worldManifold.normal);\n\n  for (var j = 0; j < this.v_pointCount; ++j) {\n    var vcp = this.v_points[j]; // VelocityConstraintPoint\n\n    vcp.rA.set(Vec2.sub(worldManifold.points[j], cA));\n    vcp.rB.set(Vec2.sub(worldManifold.points[j], cB));\n\n    var rnA = Vec2.cross(vcp.rA, this.v_normal);\n    var rnB = Vec2.cross(vcp.rB, this.v_normal);\n\n    var kNormal = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\n\n    vcp.normalMass = kNormal > 0.0 ? 1.0 / kNormal : 0.0;\n\n    var tangent = Vec2.cross(this.v_normal, 1.0);\n\n    var rtA = Vec2.cross(vcp.rA, tangent);\n    var rtB = Vec2.cross(vcp.rB, tangent);\n\n    var kTangent = mA + mB + iA * rtA * rtA + iB * rtB * rtB;\n\n    vcp.tangentMass = kTangent > 0.0 ? 1.0 / kTangent : 0.0;\n\n    // Setup a velocity bias for restitution.\n    vcp.velocityBias = 0.0;\n    var vRel = Vec2.dot(this.v_normal, vB)\n        + Vec2.dot(this.v_normal, Vec2.cross(wB, vcp.rB))\n        - Vec2.dot(this.v_normal, vA)\n        - Vec2.dot(this.v_normal, Vec2.cross(wA, vcp.rA));\n    if (vRel < -Settings.velocityThreshold) {\n      vcp.velocityBias = -this.v_restitution * vRel;\n    }\n  }\n\n  // If we have two points, then prepare the block solver.\n  if (this.v_pointCount == 2 && step.blockSolve) {\n    var vcp1 = this.v_points[0]; // VelocityConstraintPoint\n    var vcp2 = this.v_points[1]; // VelocityConstraintPoint\n\n    var rn1A = Vec2.cross(vcp1.rA, this.v_normal);\n    var rn1B = Vec2.cross(vcp1.rB, this.v_normal);\n    var rn2A = Vec2.cross(vcp2.rA, this.v_normal);\n    var rn2B = Vec2.cross(vcp2.rB, this.v_normal);\n\n    var k11 = mA + mB + iA * rn1A * rn1A + iB * rn1B * rn1B;\n    var k22 = mA + mB + iA * rn2A * rn2A + iB * rn2B * rn2B;\n    var k12 = mA + mB + iA * rn1A * rn2A + iB * rn1B * rn2B;\n\n    // Ensure a reasonable condition number.\n    var k_maxConditionNumber = 1000.0;\n    if (k11 * k11 < k_maxConditionNumber * (k11 * k22 - k12 * k12)) {\n      // K is safe to invert.\n      this.v_K.ex.set(k11, k12);\n      this.v_K.ey.set(k12, k22);\n      this.v_normalMass.set(this.v_K.getInverse());\n    } else {\n      // The constraints are redundant, just use one.\n      // TODO_ERIN use deepest?\n      this.v_pointCount = 1;\n    }\n  }\n\n  positionA.c.set(cA);\n  positionA.a = aA;\n  velocityA.v.set(vA);\n  velocityA.w = wA;\n\n  positionB.c.set(cB);\n  positionB.a = aB;\n  velocityB.v.set(vB);\n  velocityB.w = wB;\n};\n\nContact.prototype.warmStartConstraint = function(step) {\n  var fixtureA = this.m_fixtureA;\n  var fixtureB = this.m_fixtureB;\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  var velocityA = bodyA.c_velocity;\n  var velocityB = bodyB.c_velocity;\n  var positionA = bodyA.c_position;\n  var positionB = bodyB.c_position;\n\n  var mA = this.v_invMassA;\n  var iA = this.v_invIA;\n  var mB = this.v_invMassB;\n  var iB = this.v_invIB;\n\n  var vA = Vec2.clone(velocityA.v);\n  var wA = velocityA.w;\n  var vB = Vec2.clone(velocityB.v);\n  var wB = velocityB.w;\n\n  var normal = this.v_normal;\n  var tangent = Vec2.cross(normal, 1.0);\n\n  for (var j = 0; j < this.v_pointCount; ++j) {\n    var vcp = this.v_points[j]; // VelocityConstraintPoint\n\n    var P = Vec2.combine(vcp.normalImpulse, normal, vcp.tangentImpulse, tangent);\n    wA -= iA * Vec2.cross(vcp.rA, P);\n    vA.subMul(mA, P);\n    wB += iB * Vec2.cross(vcp.rB, P);\n    vB.addMul(mB, P);\n  }\n\n  velocityA.v.set(vA);\n  velocityA.w = wA;\n  velocityB.v.set(vB);\n  velocityB.w = wB;\n};\n\nContact.prototype.storeConstraintImpulses = function(step) {\n  var manifold = this.m_manifold;\n  for (var j = 0; j < this.v_pointCount; ++j) {\n    manifold.points[j].normalImpulse = this.v_points[j].normalImpulse;\n    manifold.points[j].tangentImpulse = this.v_points[j].tangentImpulse;\n  }\n};\n\nContact.prototype.solveVelocityConstraint = function(step) {\n  var bodyA = this.m_fixtureA.m_body;\n  var bodyB = this.m_fixtureB.m_body;\n\n  var velocityA = bodyA.c_velocity;\n  var positionA = bodyA.c_position;\n\n  var velocityB = bodyB.c_velocity;\n  var positionB = bodyB.c_position;\n\n  var mA = this.v_invMassA;\n  var iA = this.v_invIA;\n  var mB = this.v_invMassB;\n  var iB = this.v_invIB;\n\n  var vA = Vec2.clone(velocityA.v);\n  var wA = velocityA.w;\n  var vB = Vec2.clone(velocityB.v);\n  var wB = velocityB.w;\n\n  var normal = this.v_normal;\n  var tangent = Vec2.cross(normal, 1.0);\n  var friction = this.v_friction;\n\n  _ASSERT && common.assert(this.v_pointCount == 1 || this.v_pointCount == 2);\n\n  // Solve tangent constraints first because non-penetration is more important\n  // than friction.\n  for (var j = 0; j < this.v_pointCount; ++j) {\n    var vcp = this.v_points[j]; // VelocityConstraintPoint\n\n    // Relative velocity at contact\n    var dv = Vec2.zero();\n    dv.addCombine(1, vB, 1, Vec2.cross(wB, vcp.rB));\n    dv.subCombine(1, vA, 1, Vec2.cross(wA, vcp.rA));\n\n    // Compute tangent force\n    var vt = Vec2.dot(dv, tangent) - this.v_tangentSpeed;\n    var lambda = vcp.tangentMass * (-vt);\n\n    // Clamp the accumulated force\n    var maxFriction = friction * vcp.normalImpulse;\n    var newImpulse = Math.clamp(vcp.tangentImpulse + lambda, -maxFriction,\n        maxFriction);\n    lambda = newImpulse - vcp.tangentImpulse;\n    vcp.tangentImpulse = newImpulse;\n\n    // Apply contact impulse\n    var P = Vec2.mul(lambda, tangent);\n\n    vA.subMul(mA, P);\n    wA -= iA * Vec2.cross(vcp.rA, P);\n\n    vB.addMul(mB, P);\n    wB += iB * Vec2.cross(vcp.rB, P);\n  }\n\n  // Solve normal constraints\n  if (this.v_pointCount == 1 || step.blockSolve == false) {\n    for (var i = 0; i < this.v_pointCount; ++i) {\n      var vcp = this.v_points[i]; // VelocityConstraintPoint\n\n      // Relative velocity at contact\n      var dv = Vec2.zero();\n      dv.addCombine(1, vB, 1, Vec2.cross(wB, vcp.rB));\n      dv.subCombine(1, vA, 1, Vec2.cross(wA, vcp.rA));\n\n      // Compute normal impulse\n      var vn = Vec2.dot(dv, normal);\n      var lambda = -vcp.normalMass * (vn - vcp.velocityBias);\n\n      // Clamp the accumulated impulse\n      var newImpulse = Math.max(vcp.normalImpulse + lambda, 0.0);\n      lambda = newImpulse - vcp.normalImpulse;\n      vcp.normalImpulse = newImpulse;\n\n      // Apply contact impulse\n      var P = Vec2.mul(lambda, normal);\n\n      vA.subMul(mA, P);\n      wA -= iA * Vec2.cross(vcp.rA, P);\n\n      vB.addMul(mB, P);\n      wB += iB * Vec2.cross(vcp.rB, P);\n    }\n  } else {\n    // Block solver developed in collaboration with Dirk Gregorius (back in\n    // 01/07 on Box2D_Lite).\n    // Build the mini LCP for this contact patch\n    //\n    // vn = A * x + b, vn >= 0, , vn >= 0, x >= 0 and vn_i * x_i = 0 with i =\n    // 1..2\n    //\n    // A = J * W * JT and J = ( -n, -r1 x n, n, r2 x n )\n    // b = vn0 - velocityBias\n    //\n    // The system is solved using the \"Total enumeration method\" (s. Murty).\n    // The complementary constraint vn_i * x_i\n    // implies that we must have in any solution either vn_i = 0 or x_i = 0.\n    // So for the 2D contact problem the cases\n    // vn1 = 0 and vn2 = 0, x1 = 0 and x2 = 0, x1 = 0 and vn2 = 0, x2 = 0 and\n    // vn1 = 0 need to be tested. The first valid\n    // solution that satisfies the problem is chosen.\n    // \n    // In order to account of the accumulated impulse 'a' (because of the\n    // iterative nature of the solver which only requires\n    // that the accumulated impulse is clamped and not the incremental\n    // impulse) we change the impulse variable (x_i).\n    //\n    // Substitute:\n    // \n    // x = a + d\n    // \n    // a := old total impulse\n    // x := new total impulse\n    // d := incremental impulse\n    //\n    // For the current iteration we extend the formula for the incremental\n    // impulse\n    // to compute the new total impulse:\n    //\n    // vn = A * d + b\n    // = A * (x - a) + b\n    // = A * x + b - A * a\n    // = A * x + b'\n    // b' = b - A * a;\n\n    var vcp1 = this.v_points[0]; // VelocityConstraintPoint\n    var vcp2 = this.v_points[1]; // VelocityConstraintPoint\n\n    var a = Vec2.neo(vcp1.normalImpulse, vcp2.normalImpulse);\n    _ASSERT && common.assert(a.x >= 0.0 && a.y >= 0.0);\n\n    // Relative velocity at contact\n    var dv1 = Vec2.zero().add(vB).add(Vec2.cross(wB, vcp1.rB)).sub(vA).sub(Vec2.cross(wA, vcp1.rA));\n    var dv2 = Vec2.zero().add(vB).add(Vec2.cross(wB, vcp2.rB)).sub(vA).sub(Vec2.cross(wA, vcp2.rA));\n\n    // Compute normal velocity\n    var vn1 = Vec2.dot(dv1, normal);\n    var vn2 = Vec2.dot(dv2, normal);\n\n    var b = Vec2.neo(vn1 - vcp1.velocityBias, vn2 - vcp2.velocityBias);\n\n    // Compute b'\n    b.sub(Mat22.mulVec2(this.v_K, a));\n\n    var k_errorTol = 1e-3;\n    // NOT_USED(k_errorTol);\n\n    for (;;) {\n      //\n      // Case 1: vn = 0\n      //\n      // 0 = A * x + b'\n      //\n      // Solve for x:\n      //\n      // x = - inv(A) * b'\n      //\n      var x = Mat22.mulVec2(this.v_normalMass, b).neg();\n\n      if (x.x >= 0.0 && x.y >= 0.0) {\n        // Get the incremental impulse\n        var d = Vec2.sub(x, a);\n\n        // Apply incremental impulse\n        var P1 = Vec2.mul(d.x, normal);\n        var P2 = Vec2.mul(d.y, normal);\n\n        vA.subCombine(mA, P1, mA, P2);\n        wA -= iA * (Vec2.cross(vcp1.rA, P1) + Vec2.cross(vcp2.rA, P2));\n\n        vB.addCombine(mB, P1, mB, P2);\n        wB += iB * (Vec2.cross(vcp1.rB, P1) + Vec2.cross(vcp2.rB, P2));\n\n        // Accumulate\n        vcp1.normalImpulse = x.x;\n        vcp2.normalImpulse = x.y;\n\n        if (DEBUG_SOLVER) {\n          // Postconditions\n          dv1 = vB + Vec2.cross(wB, vcp1.rB) - vA - Vec2.cross(wA, vcp1.rA);\n          dv2 = vB + Vec2.cross(wB, vcp2.rB) - vA - Vec2.cross(wA, vcp2.rA);\n\n          // Compute normal velocity\n          vn1 = Dot(dv1, normal);\n          vn2 = Dot(dv2, normal);\n\n          _ASSERT && common.assert(Abs(vn1 - vcp1.velocityBias) < k_errorTol);\n          _ASSERT && common.assert(Abs(vn2 - vcp2.velocityBias) < k_errorTol);\n        }\n        break;\n      }\n\n      //\n      // Case 2: vn1 = 0 and x2 = 0\n      //\n      // 0 = a11 * x1 + a12 * 0 + b1'\n      // vn2 = a21 * x1 + a22 * 0 + b2'\n      //\n      x.x = -vcp1.normalMass * b.x;\n      x.y = 0.0;\n      vn1 = 0.0;\n      vn2 = this.v_K.ex.y * x.x + b.y;\n\n      if (x.x >= 0.0 && vn2 >= 0.0) {\n        // Get the incremental impulse\n        var d = Vec2.sub(x, a);\n\n        // Apply incremental impulse\n        var P1 = Vec2.mul(d.x, normal);\n        var P2 = Vec2.mul(d.y, normal);\n        vA.subCombine(mA, P1, mA, P2);\n        wA -= iA * (Vec2.cross(vcp1.rA, P1) + Vec2.cross(vcp2.rA, P2));\n\n        vB.addCombine(mB, P1, mB, P2);\n        wB += iB * (Vec2.cross(vcp1.rB, P1) + Vec2.cross(vcp2.rB, P2));\n\n        // Accumulate\n        vcp1.normalImpulse = x.x;\n        vcp2.normalImpulse = x.y;\n\n        if (DEBUG_SOLVER) {\n          // Postconditions\n          var dv1B = Vec2.add(vB, Vec2.cross(wB, vcp1.rB));\n          var dv1A = Vec2.add(vA, Vec2.cross(wA, vcp1.rA));\n          var dv1 = Vec2.sub(dv1B, dv1A);\n\n          // Compute normal velocity\n          vn1 = Vec2.dot(dv1, normal);\n\n          _ASSERT && common.assert(Math.abs(vn1 - vcp1.velocityBias) < k_errorTol);\n        }\n        break;\n      }\n\n      //\n      // Case 3: vn2 = 0 and x1 = 0\n      //\n      // vn1 = a11 * 0 + a12 * x2 + b1'\n      // 0 = a21 * 0 + a22 * x2 + b2'\n      //\n      x.x = 0.0;\n      x.y = -vcp2.normalMass * b.y;\n      vn1 = this.v_K.ey.x * x.y + b.x;\n      vn2 = 0.0;\n\n      if (x.y >= 0.0 && vn1 >= 0.0) {\n        // Resubstitute for the incremental impulse\n        var d = Vec2.sub(x, a);\n\n        // Apply incremental impulse\n        var P1 = Vec2.mul(d.x, normal);\n        var P2 = Vec2.mul(d.y, normal);\n        vA.subCombine(mA, P1, mA, P2);\n        wA -= iA * (Vec2.cross(vcp1.rA, P1) + Vec2.cross(vcp2.rA, P2));\n\n        vB.addCombine(mB, P1, mB, P2);\n        wB += iB * (Vec2.cross(vcp1.rB, P1) + Vec2.cross(vcp2.rB, P2));\n\n        // Accumulate\n        vcp1.normalImpulse = x.x;\n        vcp2.normalImpulse = x.y;\n\n        if (DEBUG_SOLVER) {\n          // Postconditions\n          var dv2B = Vec2.add(vB, Vec2.cross(wB, vcp2.rB));\n          var dv2A = Vec2.add(vA, Vec2.cross(wA, vcp2.rA));\n          var dv1 = Vec2.sub(dv2B, dv2A);\n\n          // Compute normal velocity\n          vn2 = Vec2.dot(dv2, normal);\n\n          _ASSERT && common.assert(Math.abs(vn2 - vcp2.velocityBias) < k_errorTol);\n        }\n        break;\n      }\n\n      //\n      // Case 4: x1 = 0 and x2 = 0\n      // \n      // vn1 = b1\n      // vn2 = b2;\n      //\n      x.x = 0.0;\n      x.y = 0.0;\n      vn1 = b.x;\n      vn2 = b.y;\n\n      if (vn1 >= 0.0 && vn2 >= 0.0) {\n        // Resubstitute for the incremental impulse\n        var d = Vec2.sub(x, a);\n\n        // Apply incremental impulse\n        var P1 = Vec2.mul(d.x, normal);\n        var P2 = Vec2.mul(d.y, normal);\n        vA.subCombine(mA, P1, mA, P2);\n        wA -= iA * (Vec2.cross(vcp1.rA, P1) + Vec2.cross(vcp2.rA, P2));\n\n        vB.addCombine(mB, P1, mB, P2);\n        wB += iB * (Vec2.cross(vcp1.rB, P1) + Vec2.cross(vcp2.rB, P2));\n\n        // Accumulate\n        vcp1.normalImpulse = x.x;\n        vcp2.normalImpulse = x.y;\n\n        break;\n      }\n\n      // No solution, give up. This is hit sometimes, but it doesn't seem to\n      // matter.\n      break;\n    }\n  }\n\n  velocityA.v.set(vA);\n  velocityA.w = wA;\n\n  velocityB.v.set(vB);\n  velocityB.w = wB;\n};\n\n/**\n * Friction mixing law. The idea is to allow either fixture to drive the\n * restitution to zero. For example, anything slides on ice.\n */\nfunction mixFriction(friction1, friction2) {\n  return Math.sqrt(friction1 * friction2);\n}\n\n/**\n * Restitution mixing law. The idea is allow for anything to bounce off an\n * inelastic surface. For example, a superball bounces on anything.\n */\nfunction mixRestitution(restitution1, restitution2) {\n  return restitution1 > restitution2 ? restitution1 : restitution2;\n}\n\nvar s_registers = [];\n\n/**\n * @param fn function(fixtureA, indexA, fixtureB, indexB) Contact\n */\nContact.addType = function(type1, type2, callback) {\n\n  s_registers[type1] = s_registers[type1] || {};\n  s_registers[type1][type2] = callback;\n}\n\nContact.create = function(fixtureA, indexA, fixtureB, indexB) {\n  var typeA = fixtureA.getType(); // Shape.Type\n  var typeB = fixtureB.getType(); // Shape.Type\n\n  // TODO: pool contacts\n  var contact, evaluateFcn;\n  if (evaluateFcn = s_registers[typeA] && s_registers[typeA][typeB]) {\n    contact = new Contact(fixtureA, indexA, fixtureB, indexB, evaluateFcn);\n  } else if (evaluateFcn = s_registers[typeB] && s_registers[typeB][typeA]) {\n    contact = new Contact(fixtureB, indexB, fixtureA, indexA, evaluateFcn);\n  } else {\n    return null;\n  }\n\n  // Contact creation may swap fixtures.\n  fixtureA = contact.getFixtureA();\n  fixtureB = contact.getFixtureB();\n  indexA = contact.getChildIndexA();\n  indexB = contact.getChildIndexB();\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  // Connect to body A\n  contact.m_nodeA.contact = contact;\n  contact.m_nodeA.other = bodyB;\n\n  contact.m_nodeA.prev = null;\n  contact.m_nodeA.next = bodyA.m_contactList;\n  if (bodyA.m_contactList != null) {\n    bodyA.m_contactList.prev = contact.m_nodeA;\n  }\n  bodyA.m_contactList = contact.m_nodeA;\n\n  // Connect to body B\n  contact.m_nodeB.contact = contact;\n  contact.m_nodeB.other = bodyA;\n\n  contact.m_nodeB.prev = null;\n  contact.m_nodeB.next = bodyB.m_contactList;\n  if (bodyB.m_contactList != null) {\n    bodyB.m_contactList.prev = contact.m_nodeB;\n  }\n  bodyB.m_contactList = contact.m_nodeB;\n\n  // Wake up the bodies\n  if (fixtureA.isSensor() == false && fixtureB.isSensor() == false) {\n    bodyA.setAwake(true);\n    bodyB.setAwake(true);\n  }\n\n  return contact;\n}\n\nContact.destroy = function(contact, listener) {\n  var fixtureA = contact.m_fixtureA;\n  var fixtureB = contact.m_fixtureB;\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  if (contact.isTouching()) {\n    listener.endContact(contact);\n  }\n\n  // Remove from body 1\n  if (contact.m_nodeA.prev) {\n    contact.m_nodeA.prev.next = contact.m_nodeA.next;\n  }\n\n  if (contact.m_nodeA.next) {\n    contact.m_nodeA.next.prev = contact.m_nodeA.prev;\n  }\n\n  if (contact.m_nodeA == bodyA.m_contactList) {\n    bodyA.m_contactList = contact.m_nodeA.next;\n  }\n\n  // Remove from body 2\n  if (contact.m_nodeB.prev) {\n    contact.m_nodeB.prev.next = contact.m_nodeB.next;\n  }\n\n  if (contact.m_nodeB.next) {\n    contact.m_nodeB.next.prev = contact.m_nodeB.prev;\n  }\n\n  if (contact.m_nodeB == bodyB.m_contactList) {\n    bodyB.m_contactList = contact.m_nodeB.next;\n  }\n\n  if (contact.m_manifold.pointCount > 0 && fixtureA.isSensor() == false\n      && fixtureB.isSensor() == false) {\n    bodyA.setAwake(true);\n    bodyB.setAwake(true);\n  }\n\n  var typeA = fixtureA.getType(); // Shape.Type\n  var typeB = fixtureB.getType(); // Shape.Type\n\n  var destroyFcn = s_registers[typeA][typeB].destroyFcn;\n  if (typeof destroyFcn === 'function') {\n    destroyFcn(contact);\n  }\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('./util/common');\n\nvar Vec2 = require('./common/Vec2');\nvar Transform = require('./common/Transform');\nvar Math = require('./common/Math');\nvar Rot = require('./common/Rot');\n\nmodule.exports = Manifold;\nmodule.exports.clipSegmentToLine = clipSegmentToLine;\nmodule.exports.clipVertex = ClipVertex;\nmodule.exports.getPointStates = getPointStates;\nmodule.exports.PointState = PointState;\n\n// Manifold Type\nManifold.e_circles = 0;\nManifold.e_faceA = 1;\nManifold.e_faceB = 2;\n\n// ContactFeature Type\nManifold.e_vertex = 0;\nManifold.e_face = 1;\n\n/**\n * A manifold for two touching convex shapes. Manifolds are created in `evaluate`\n * method of Contact subclasses.\n * \n * Supported manifold types are e_faceA or e_faceB for clip point versus plane\n * with radius and e_circles point versus point with radius.\n * \n * We store contacts in this way so that position correction can account for\n * movement, which is critical for continuous physics. All contact scenarios\n * must be expressed in one of these types. This structure is stored across time\n * steps, so we keep it small.\n * \n * @prop type e_circle, e_faceA, e_faceB\n * @prop localPoint Usage depends on manifold type:<br>\n *       e_circles: the local center of circleA <br>\n *       e_faceA: the center of faceA <br>\n *       e_faceB: the center of faceB\n * @prop localNormal Usage depends on manifold type:<br>\n *       e_circles: not used <br>\n *       e_faceA: the normal on polygonA <br>\n *       e_faceB: the normal on polygonB\n * @prop points The points of contact {ManifoldPoint[]}\n * @prop pointCount The number of manifold points\n */\nfunction Manifold() {\n  this.type;\n  this.localNormal = Vec2.zero();\n  this.localPoint = Vec2.zero();\n  this.points = [ new ManifoldPoint(), new ManifoldPoint() ];\n  this.pointCount = 0;\n};\n\n/**\n * A manifold point is a contact point belonging to a contact manifold. It holds\n * details related to the geometry and dynamics of the contact points.\n * \n * This structure is stored across time steps, so we keep it small.\n * \n * Note: impulses are used for internal caching and may not provide reliable\n * contact forces, especially for high speed collisions.\n * \n * @prop {Vec2} localPoint Usage depends on manifold type:<br>\n *       e_circles: the local center of circleB<br>\n *       e_faceA: the local center of cirlceB or the clip point of polygonB<br>\n *       e_faceB: the clip point of polygonA.\n * @prop normalImpulse The non-penetration impulse\n * @prop tangentImpulse The friction impulse\n * @prop {ContactID} id Uniquely identifies a contact point between two shapes\n *       to facilatate warm starting\n */\nfunction ManifoldPoint() {\n  this.localPoint = Vec2.zero();\n  this.normalImpulse = 0;\n  this.tangentImpulse = 0;\n  this.id = new ContactID();\n};\n\n/**\n * Contact ids to facilitate warm starting.\n * \n * @prop {ContactFeature} cf\n * @prop key Used to quickly compare contact ids.\n * \n */\nfunction ContactID() {\n  this.cf = new ContactFeature();\n};\n\nObject.defineProperty(ContactID.prototype, 'key', {\n  get: function() {\n    return this.cf.indexA + this.cf.indexB * 4 + this.cf.typeA * 16 + this.cf.typeB * 64;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nContactID.prototype.set = function(o) {\n  // this.key = o.key;\n  this.cf.set(o.cf);\n};\n\n/**\n * The features that intersect to form the contact point.\n * \n * @prop indexA Feature index on shapeA\n * @prop indexB Feature index on shapeB\n * @prop typeA The feature type on shapeA\n * @prop typeB The feature type on shapeB\n */\nfunction ContactFeature() {\n  this.indexA;\n  this.indexB;\n  this.typeA;\n  this.typeB;\n};\n\nContactFeature.prototype.set = function(o) {\n  this.indexA = o.indexA;\n  this.indexB = o.indexB;\n  this.typeA = o.typeA;\n  this.typeB = o.typeB;\n};\n\n/**\n * This is used to compute the current state of a contact manifold.\n * \n * @prop normal World vector pointing from A to B\n * @prop points World contact point (point of intersection)\n * @prop separations A negative value indicates overlap, in meters\n */\nfunction WorldManifold() {\n  this.normal;\n  this.points = []; // [maxManifoldPoints]\n  this.separations = []; // float[maxManifoldPoints]\n};\n\n/**\n * Evaluate the manifold with supplied transforms. This assumes modest motion\n * from the original state. This does not change the point count, impulses, etc.\n * The radii must come from the shapes that generated the manifold.\n * \n * @param {WorldManifold} [wm]\n */\nManifold.prototype.getWorldManifold = function(wm, xfA, radiusA, xfB, radiusB) {\n  if (this.pointCount == 0) {\n    return;\n  }\n\n  wm = wm || new WorldManifold();\n\n  var normal = wm.normal;\n  var points = wm.points;\n  var separations = wm.separations;\n\n  // TODO: improve\n  switch (this.type) {\n  case Manifold.e_circles:\n    normal = Vec2.neo(1.0, 0.0);\n    var pointA = Transform.mulVec2(xfA, this.localPoint);\n    var pointB = Transform.mulVec2(xfB, this.points[0].localPoint);\n    var dist = Vec2.sub(pointB, pointA);\n    if (Vec2.lengthSquared(dist) > Math.EPSILON * Math.EPSILON) {\n      normal.set(dist);\n      normal.normalize();\n    }\n    points[0] = Vec2.mid(pointA, pointB);\n    separations[0] = -radiusB - radiusA;\n    points.length = 1;\n    separations.length = 1;\n    break;\n\n  case Manifold.e_faceA:\n    normal = Rot.mulVec2(xfA.q, this.localNormal);\n    var planePoint = Transform.mulVec2(xfA, this.localPoint);\n\n    for (var i = 0; i < this.pointCount; ++i) {\n      var clipPoint = Transform.mulVec2(xfB, this.points[i].localPoint);\n      var cA = Vec2.clone(clipPoint).addMul(radiusA - Vec2.dot(Vec2.sub(clipPoint, planePoint), normal), normal);\n      var cB = Vec2.clone(clipPoint).subMul(radiusB, normal);\n      points[i] = Vec2.mid(cA, cB);\n      separations[i] = Vec2.dot(Vec2.sub(cB, cA), normal);\n    }\n    points.length = this.pointCount;\n    separations.length = this.pointCount;\n    break;\n\n  case Manifold.e_faceB:\n    normal = Rot.mulVec2(xfB.q, this.localNormal);\n    var planePoint = Transform.mulVec2(xfB, this.localPoint);\n\n    for (var i = 0; i < this.pointCount; ++i) {\n      var clipPoint = Transform.mulVec2(xfA, this.points[i].localPoint);\n      var cB = Vec2.combine(1, clipPoint, radiusB - Vec2.dot(Vec2.sub(clipPoint, planePoint), normal), normal);\n      var cA = Vec2.combine(1, clipPoint, -radiusA, normal);\n      points[i] = Vec2.mid(cA, cB);\n      separations[i] = Vec2.dot(Vec2.sub(cA, cB), normal);\n    }\n    points.length = this.pointCount;\n    separations.length = this.pointCount;\n    // Ensure normal points from A to B.\n    normal.mul(-1);\n    break;\n  }\n\n  wm.normal = normal;\n  wm.points = points;\n  wm.separations = separations;\n  return wm;\n}\n\n/**\n * This is used for determining the state of contact points.\n * \n * @prop {0} nullState Point does not exist\n * @prop {1} addState Point was added in the update\n * @prop {2} persistState Point persisted across the update\n * @prop {3} removeState Point was removed in the update\n */\nvar PointState = {\n  // TODO: use constants\n  nullState : 0,\n  addState : 1,\n  persistState : 2,\n  removeState : 3\n};\n\n/**\n * Compute the point states given two manifolds. The states pertain to the\n * transition from manifold1 to manifold2. So state1 is either persist or remove\n * while state2 is either add or persist.\n * \n * @param {PointState[Settings.maxManifoldPoints]} state1\n * @param {PointState[Settings.maxManifoldPoints]} state2\n */\nfunction getPointStates(state1, state2, manifold1, manifold2) {\n  // for (var i = 0; i < Settings.maxManifoldPoints; ++i) {\n  // state1[i] = PointState.nullState;\n  // state2[i] = PointState.nullState;\n  // }\n\n  // Detect persists and removes.\n  for (var i = 0; i < manifold1.pointCount; ++i) {\n    var id = manifold1.points[i].id;// ContactID\n\n    state1[i] = PointState.removeState;\n\n    for (var j = 0; j < manifold2.pointCount; ++j) {\n      if (manifold2.points[j].id.key == id.key) {\n        state1[i] = PointState.persistState;\n        break;\n      }\n    }\n  }\n\n  // Detect persists and adds.\n  for (var i = 0; i < manifold2.pointCount; ++i) {\n    var id = manifold2.points[i].id;// ContactID\n\n    state2[i] = PointState.addState;\n\n    for (var j = 0; j < manifold1.pointCount; ++j) {\n      if (manifold1.points[j].id.key == id.key) {\n        state2[i] = PointState.persistState;\n        break;\n      }\n    }\n  }\n}\n\n/**\n * Used for computing contact manifolds.\n * \n * @prop {Vec2} v\n * @prop {ContactID} id\n */\nfunction ClipVertex() {\n  this.v = Vec2.zero();\n  this.id = new ContactID();\n};\n\nClipVertex.prototype.set = function(o) {\n  this.v.set(o.v);\n  this.id.set(o.id);\n};\n\n/**\n * Clipping for contact manifolds. Sutherland-Hodgman clipping.\n * \n * @param {ClipVertex[2]} vOut\n * @param {ClipVertex[2]} vIn\n */\nfunction clipSegmentToLine(vOut, vIn, normal, offset, vertexIndexA) {\n  // Start with no output points\n  var numOut = 0;\n\n  // Calculate the distance of end points to the line\n  var distance0 = Vec2.dot(normal, vIn[0].v) - offset;\n  var distance1 = Vec2.dot(normal, vIn[1].v) - offset;\n\n  // If the points are behind the plane\n  if (distance0 <= 0.0)\n    vOut[numOut++].set(vIn[0]);\n  if (distance1 <= 0.0)\n    vOut[numOut++].set(vIn[1]);\n\n  // If the points are on different sides of the plane\n  if (distance0 * distance1 < 0.0) {\n    // Find intersection point of edge and plane\n    var interp = distance0 / (distance0 - distance1);\n    vOut[numOut].v.setCombine(1 - interp, vIn[0].v, interp, vIn[1].v);\n\n    // VertexA is hitting edgeB.\n    vOut[numOut].id.cf.indexA = vertexIndexA;\n    vOut[numOut].id.cf.indexB = vIn[0].id.cf.indexB;\n    vOut[numOut].id.cf.typeA = Manifold.e_vertex;\n    vOut[numOut].id.cf.typeB = Manifold.e_face;\n    ++numOut;\n  }\n\n  return numOut;\n}\n","if (typeof DEBUG === 'undefined')\n  DEBUG = true;\n\nvar stats = require('./util/stats');\nvar extend = require('./util/extend');\nvar is = require('./util/is');\nvar _await = require('./util/await');\n\nstats.create = 0;\n\nfunction Class(arg) {\n  if (!(this instanceof Class)) {\n    if (is.fn(arg)) {\n      return Class.app.apply(Class, arguments);\n    } else if (is.object(arg)) {\n      return Class.atlas.apply(Class, arguments);\n    } else {\n      return arg;\n    }\n  }\n\n  stats.create++;\n\n  for (var i = 0; i < _init.length; i++) {\n    _init[i].call(this);\n  }\n}\n\nvar _init = [];\n\nClass._init = function(fn) {\n  _init.push(fn);\n};\n\nvar _load = [];\n\nClass._load = function(fn) {\n  _load.push(fn);\n};\n\nvar _config = {};\n\nClass.config = function() {\n  if (arguments.length === 1 && is.string(arguments[0])) {\n    return _config[arguments[0]];\n  }\n  if (arguments.length === 1 && is.object(arguments[0])) {\n    extend(_config, arguments[0]);\n  }\n  if (arguments.length === 2 && is.string(arguments[0])) {\n    _config[arguments[0], arguments[1]];\n  }\n};\n\nvar _app_queue = [];\nvar _preload_queue = [];\nvar _stages = [];\nvar _loaded = false;\nvar _paused = false;\n\nClass.app = function(app, opts) {\n  if (!_loaded) {\n    _app_queue.push(arguments);\n    return;\n  }\n  DEBUG && console.log('Creating app...');\n  var loader = Class.config('app-loader');\n  loader(function(stage, canvas) {\n    DEBUG && console.log('Initing app...');\n    for (var i = 0; i < _load.length; i++) {\n      _load[i].call(this, stage, canvas);\n    }\n    app(stage, canvas);\n    _stages.push(stage);\n    DEBUG && console.log('Starting app...');\n    stage.start();\n  }, opts);\n};\n\nvar loading = _await();\n\nClass.preload = function(load) {\n  if (typeof load === 'string') {\n    var url = Class.resolve(load);\n    if (/\\.js($|\\?|\\#)/.test(url)) {\n      DEBUG && console.log('Loading script: ' + url);\n      load = function(callback) {\n        loadScript(url, callback);\n      };\n    }\n  }\n  if (typeof load !== 'function') {\n    return;\n  }\n  // if (!_started) {\n  // _preload_queue.push(load);\n  // return;\n  // }\n  load(loading());\n};\n\nClass.start = function(config) {\n  DEBUG && console.log('Starting...');\n\n  Class.config(config);\n\n  // DEBUG && console.log('Preloading...');\n  // _started = true;\n  // while (_preload_queue.length) {\n  // var load = _preload_queue.shift();\n  // load(loading());\n  // }\n\n  loading.then(function() {\n    DEBUG && console.log('Loading apps...');\n    _loaded = true;\n    while (_app_queue.length) {\n      var args = _app_queue.shift();\n      Class.app.apply(Class, args);\n    }\n  });\n};\n\nClass.pause = function() {\n  if (!_paused) {\n    _paused = true;\n    for (var i = _stages.length - 1; i >= 0; i--) {\n      _stages[i].pause();\n    }\n  }\n};\n\nClass.resume = function() {\n  if (_paused) {\n    _paused = false;\n    for (var i = _stages.length - 1; i >= 0; i--) {\n      _stages[i].resume();\n    }\n  }\n};\n\nClass.create = function() {\n  return new Class();\n};\n\nClass.resolve = (function() {\n\n  if (typeof window === 'undefined' || typeof document === 'undefined') {\n    return function(url) {\n      return url;\n    };\n  }\n\n  var scripts = document.getElementsByTagName('script');\n\n  function getScriptSrc() {\n    // HTML5\n    if (document.currentScript) {\n      return document.currentScript.src;\n    }\n\n    // IE>=10\n    var stack;\n    try {\n      var err = new Error();\n      if (err.stack) {\n        stack = err.stack;\n      } else {\n        throw err;\n      }\n    } catch (err) {\n      stack = err.stack;\n    }\n    if (typeof stack === 'string') {\n      stack = stack.split('\\n');\n      // Uses the last line, where the call started\n      for (var i = stack.length; i--;) {\n        var url = stack[i].match(/(\\w+\\:\\/\\/[^/]*?\\/.+?)(:\\d+)(:\\d+)?/);\n        if (url) {\n          return url[1];\n        }\n      }\n    }\n\n    // IE<11\n    if (scripts.length && 'readyState' in scripts[0]) {\n      for (var i = scripts.length; i--;) {\n        if (scripts[i].readyState === 'interactive') {\n          return scripts[i].src;\n        }\n      }\n    }\n\n    return location.href;\n  }\n\n  return function(url) {\n    if (/^\\.\\//.test(url)) {\n      var src = getScriptSrc();\n      var base = src.substring(0, src.lastIndexOf('/') + 1);\n      url = base + url.substring(2);\n      // } else if (/^\\.\\.\\//.test(url)) {\n      // url = base + url;\n    }\n    return url;\n  };\n})();\n\nmodule.exports = Class;\n\nfunction loadScript(src, callback) {\n  var el = document.createElement('script');\n  el.addEventListener('load', function() {\n    callback();\n  });\n  el.addEventListener('error', function(err) {\n    callback(err || 'Error loading script: ' + src);\n  });\n  el.src = src;\n  el.id = 'preload-' + Date.now();\n  document.body.appendChild(el);\n};","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = PolygonShape;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar options = require('../util/options');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\n\nPolygonShape._super = Shape;\nPolygonShape.prototype = create(PolygonShape._super.prototype);\n\nPolygonShape.TYPE = 'polygon';\nShape.TYPES[PolygonShape.TYPE] = PolygonShape;\n\n/**\n * A convex polygon. It is assumed that the interior of the polygon is to the\n * left of each edge. Polygons have a maximum number of vertices equal to\n * Settings.maxPolygonVertices. In most cases you should not need many vertices\n * for a convex polygon. extends Shape\n */\nfunction PolygonShape(vertices) {\n  if (!(this instanceof PolygonShape)) {\n    return new PolygonShape(vertices);\n  }\n\n  PolygonShape._super.call(this);\n\n  this.m_type = PolygonShape.TYPE;\n  this.m_radius = Settings.polygonRadius;\n  this.m_centroid = Vec2.zero();\n  this.m_vertices = []; // Vec2[Settings.maxPolygonVertices]\n  this.m_normals = []; // Vec2[Settings.maxPolygonVertices]\n  this.m_count = 0;\n\n  if (vertices && vertices.length) {\n    this._set(vertices);\n  }\n}\n\nPolygonShape.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n\n    centroid: this.m_centroid,\n\n    vertices: this.m_vertices,\n    normals: this.m_normals,\n    count: this.m_count,\n  };\n};\n\nPolygonShape._deserialize = function(data) {\n  var shape = new PolygonShape(data.vertices);\n  return shape;\n};\n\nPolygonShape.prototype.getVertex = function(index) {\n  _ASSERT && common.assert(0 <= index && index < this.m_count);\n  return this.m_vertices[index];\n}\n\n/**\n * @deprecated\n */\nPolygonShape.prototype._clone = function() {\n  var clone = new PolygonShape();\n  clone.m_type = this.m_type;\n  clone.m_radius = this.m_radius;\n  clone.m_count = this.m_count;\n  clone.m_centroid.set(this.m_centroid);\n  for (var i = 0; i < this.m_count; i++) {\n    clone.m_vertices.push(this.m_vertices[i].clone());\n  }\n  for (var i = 0; i < this.m_normals.length; i++) {\n    clone.m_normals.push(this.m_normals[i].clone());\n  }\n  return clone;\n}\n\nPolygonShape.prototype.getChildCount = function() {\n  return 1;\n}\n\nfunction ComputeCentroid(vs, count) {\n  _ASSERT && common.assert(count >= 3);\n\n  var c = Vec2.zero();\n  var area = 0.0;\n\n  // pRef is the reference point for forming triangles.\n  // It's location doesn't change the result (except for rounding error).\n  var pRef = Vec2.zero();\n  if (false) {\n    // This code would put the reference point inside the polygon.\n    for (var i = 0; i < count; ++i) {\n      pRef.add(vs[i]);\n    }\n    pRef.mul(1.0 / count);\n  }\n\n  var inv3 = 1.0 / 3.0;\n\n  for (var i = 0; i < count; ++i) {\n    // Triangle vertices.\n    var p1 = pRef;\n    var p2 = vs[i];\n    var p3 = i + 1 < count ? vs[i + 1] : vs[0];\n\n    var e1 = Vec2.sub(p2, p1);\n    var e2 = Vec2.sub(p3, p1);\n\n    var D = Vec2.cross(e1, e2);\n\n    var triangleArea = 0.5 * D;\n    area += triangleArea;\n\n    // Area weighted centroid\n    c.addMul(triangleArea * inv3, p1);\n    c.addMul(triangleArea * inv3, p2);\n    c.addMul(triangleArea * inv3, p3);\n  }\n\n  // Centroid\n  _ASSERT && common.assert(area > Math.EPSILON);\n  c.mul(1.0 / area);\n  return c;\n}\n\nPolygonShape.prototype._reset = function() {\n  this._set(this.m_vertices)\n}\n\n/**\n * @private\n *\n * Create a convex hull from the given array of local points. The count must be\n * in the range [3, Settings.maxPolygonVertices].\n *\n * Warning: the points may be re-ordered, even if they form a convex polygon\n * Warning: collinear points are handled but not removed. Collinear points may\n * lead to poor stacking behavior.\n */\nPolygonShape.prototype._set = function(vertices) {\n  _ASSERT && common.assert(3 <= vertices.length && vertices.length <= Settings.maxPolygonVertices);\n  if (vertices.length < 3) {\n    this._setAsBox(1.0, 1.0);\n    return;\n  }\n\n  var n = Math.min(vertices.length, Settings.maxPolygonVertices);\n\n  // Perform welding and copy vertices into local buffer.\n  var ps = [];// [Settings.maxPolygonVertices];\n  var tempCount = 0;\n  for (var i = 0; i < n; ++i) {\n    var v = vertices[i];\n\n    var unique = true;\n    for (var j = 0; j < tempCount; ++j) {\n      if (Vec2.distanceSquared(v, ps[j]) < 0.25 * Settings.linearSlopSquared) {\n        unique = false;\n        break;\n      }\n    }\n\n    if (unique) {\n      ps[tempCount++] = v;\n    }\n  }\n\n  n = tempCount;\n  if (n < 3) {\n    // Polygon is degenerate.\n    _ASSERT && common.assert(false);\n    this._setAsBox(1.0, 1.0);\n    return;\n  }\n\n  // Create the convex hull using the Gift wrapping algorithm\n  // http://en.wikipedia.org/wiki/Gift_wrapping_algorithm\n\n  // Find the right most point on the hull\n  var i0 = 0;\n  var x0 = ps[0].x;\n  for (var i = 1; i < n; ++i) {\n    var x = ps[i].x;\n    if (x > x0 || (x == x0 && ps[i].y < ps[i0].y)) {\n      i0 = i;\n      x0 = x;\n    }\n  }\n\n  var hull = [];// [Settings.maxPolygonVertices];\n  var m = 0;\n  var ih = i0;\n\n  for (;;) {\n    hull[m] = ih;\n\n    var ie = 0;\n    for (var j = 1; j < n; ++j) {\n      if (ie == ih) {\n        ie = j;\n        continue;\n      }\n\n      var r = Vec2.sub(ps[ie], ps[hull[m]]);\n      var v = Vec2.sub(ps[j], ps[hull[m]]);\n      var c = Vec2.cross(r, v);\n      if (c < 0.0) {\n        ie = j;\n      }\n\n      // Collinearity check\n      if (c == 0.0 && v.lengthSquared() > r.lengthSquared()) {\n        ie = j;\n      }\n    }\n\n    ++m;\n    ih = ie;\n\n    if (ie == i0) {\n      break;\n    }\n  }\n\n  if (m < 3) {\n    // Polygon is degenerate.\n    _ASSERT && common.assert(false);\n    this._setAsBox(1.0, 1.0);\n    return;\n  }\n\n  this.m_count = m;\n\n  // Copy vertices.\n  for (var i = 0; i < m; ++i) {\n    this.m_vertices[i] = ps[hull[i]];\n  }\n\n  // Compute normals. Ensure the edges have non-zero length.\n  for (var i = 0; i < m; ++i) {\n    var i1 = i;\n    var i2 = i + 1 < m ? i + 1 : 0;\n    var edge = Vec2.sub(this.m_vertices[i2], this.m_vertices[i1]);\n    _ASSERT && common.assert(edge.lengthSquared() > Math.EPSILON * Math.EPSILON);\n    this.m_normals[i] = Vec2.cross(edge, 1.0);\n    this.m_normals[i].normalize();\n  }\n\n  // Compute the polygon centroid.\n  this.m_centroid = ComputeCentroid(this.m_vertices, m);\n}\n\n/**\n * @private\n */\nPolygonShape.prototype._setAsBox = function(hx, hy, center, angle) {\n  this.m_vertices[0] = Vec2.neo(-hx, -hy);\n  this.m_vertices[1] = Vec2.neo(hx, -hy);\n  this.m_vertices[2] = Vec2.neo(hx, hy);\n  this.m_vertices[3] = Vec2.neo(-hx, hy);\n\n  this.m_normals[0] = Vec2.neo(0.0, -1.0);\n  this.m_normals[1] = Vec2.neo(1.0, 0.0);\n  this.m_normals[2] = Vec2.neo(0.0, 1.0);\n  this.m_normals[3] = Vec2.neo(-1.0, 0.0);\n\n  this.m_count = 4;\n\n  if (Vec2.isValid(center)) {\n    angle = angle || 0;\n\n    this.m_centroid.set(center);\n\n    var xf = Transform.identity();\n    xf.p.set(center);\n    xf.q.set(angle);\n\n    // Transform vertices and normals.\n    for (var i = 0; i < this.m_count; ++i) {\n      this.m_vertices[i] = Transform.mulVec2(xf, this.m_vertices[i]);\n      this.m_normals[i] = Rot.mulVec2(xf.q, this.m_normals[i]);\n    }\n  }\n}\n\nPolygonShape.prototype.testPoint = function(xf, p) {\n  var pLocal = Rot.mulTVec2(xf.q, Vec2.sub(p, xf.p));\n\n  for (var i = 0; i < this.m_count; ++i) {\n    var dot = Vec2.dot(this.m_normals[i], Vec2.sub(pLocal, this.m_vertices[i]));\n    if (dot > 0.0) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nPolygonShape.prototype.rayCast = function(output, input, xf, childIndex) {\n\n  // Put the ray into the polygon's frame of reference.\n  var p1 = Rot.mulTVec2(xf.q, Vec2.sub(input.p1, xf.p));\n  var p2 = Rot.mulTVec2(xf.q, Vec2.sub(input.p2, xf.p));\n  var d = Vec2.sub(p2, p1);\n\n  var lower = 0.0;\n  var upper = input.maxFraction;\n\n  var index = -1;\n\n  for (var i = 0; i < this.m_count; ++i) {\n    // p = p1 + a * d\n    // dot(normal, p - v) = 0\n    // dot(normal, p1 - v) + a * dot(normal, d) = 0\n    var numerator = Vec2.dot(this.m_normals[i], Vec2.sub(this.m_vertices[i], p1));\n    var denominator = Vec2.dot(this.m_normals[i], d);\n\n    if (denominator == 0.0) {\n      if (numerator < 0.0) {\n        return false;\n      }\n    } else {\n      // Note: we want this predicate without division:\n      // lower < numerator / denominator, where denominator < 0\n      // Since denominator < 0, we have to flip the inequality:\n      // lower < numerator / denominator <==> denominator * lower > numerator.\n      if (denominator < 0.0 && numerator < lower * denominator) {\n        // Increase lower.\n        // The segment enters this half-space.\n        lower = numerator / denominator;\n        index = i;\n      } else if (denominator > 0.0 && numerator < upper * denominator) {\n        // Decrease upper.\n        // The segment exits this half-space.\n        upper = numerator / denominator;\n      }\n    }\n\n    // The use of epsilon here causes the assert on lower to trip\n    // in some cases. Apparently the use of epsilon was to make edge\n    // shapes work, but now those are handled separately.\n    // if (upper < lower - Math.EPSILON)\n    if (upper < lower) {\n      return false;\n    }\n  }\n\n  _ASSERT && common.assert(0.0 <= lower && lower <= input.maxFraction);\n\n  if (index >= 0) {\n    output.fraction = lower;\n    output.normal = Rot.mulVec2(xf.q, this.m_normals[index]);\n    return true;\n  }\n\n  return false;\n};\n\nPolygonShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n  var minX = Infinity, minY = Infinity;\n  var maxX = -Infinity, maxY = -Infinity;\n  for (var i = 0; i < this.m_count; ++i) {\n    var v = Transform.mulVec2(xf, this.m_vertices[i]);\n    minX = Math.min(minX, v.x);\n    maxX = Math.max(maxX, v.x);\n    minY = Math.min(minY, v.y);\n    maxY = Math.max(maxY, v.y);\n  }\n\n  aabb.lowerBound.set(minX, minY);\n  aabb.upperBound.set(maxX, maxY);\n  aabb.extend(this.m_radius);\n}\n\nPolygonShape.prototype.computeMass = function(massData, density) {\n  // Polygon mass, centroid, and inertia.\n  // Let rho be the polygon density in mass per unit area.\n  // Then:\n  // mass = rho * int(dA)\n  // centroid.x = (1/mass) * rho * int(x * dA)\n  // centroid.y = (1/mass) * rho * int(y * dA)\n  // I = rho * int((x*x + y*y) * dA)\n  //\n  // We can compute these integrals by summing all the integrals\n  // for each triangle of the polygon. To evaluate the integral\n  // for a single triangle, we make a change of variables to\n  // the (u,v) coordinates of the triangle:\n  // x = x0 + e1x * u + e2x * v\n  // y = y0 + e1y * u + e2y * v\n  // where 0 <= u && 0 <= v && u + v <= 1.\n  //\n  // We integrate u from [0,1-v] and then v from [0,1].\n  // We also need to use the Jacobian of the transformation:\n  // D = cross(e1, e2)\n  //\n  // Simplification: triangle centroid = (1/3) * (p1 + p2 + p3)\n  //\n  // The rest of the derivation is handled by computer algebra.\n\n  _ASSERT && common.assert(this.m_count >= 3);\n\n  var center = Vec2.zero();\n  var area = 0.0;\n  var I = 0.0;\n\n  // s is the reference point for forming triangles.\n  // It's location doesn't change the result (except for rounding error).\n  var s = Vec2.zero();\n\n  // This code would put the reference point inside the polygon.\n  for (var i = 0; i < this.m_count; ++i) {\n    s.add(this.m_vertices[i]);\n  }\n  s.mul(1.0 / this.m_count);\n\n  var k_inv3 = 1.0 / 3.0;\n\n  for (var i = 0; i < this.m_count; ++i) {\n    // Triangle vertices.\n    var e1 = Vec2.sub(this.m_vertices[i], s);\n    var e2 = i + 1 < this.m_count ? Vec2.sub(this.m_vertices[i + 1], s) : Vec2\n        .sub(this.m_vertices[0], s);\n\n    var D = Vec2.cross(e1, e2);\n\n    var triangleArea = 0.5 * D;\n    area += triangleArea;\n\n    // Area weighted centroid\n    center.addCombine(triangleArea * k_inv3, e1, triangleArea * k_inv3, e2);\n\n    var ex1 = e1.x;\n    var ey1 = e1.y;\n    var ex2 = e2.x;\n    var ey2 = e2.y;\n\n    var intx2 = ex1 * ex1 + ex2 * ex1 + ex2 * ex2;\n    var inty2 = ey1 * ey1 + ey2 * ey1 + ey2 * ey2;\n\n    I += (0.25 * k_inv3 * D) * (intx2 + inty2);\n  }\n\n  // Total mass\n  massData.mass = density * area;\n\n  // Center of mass\n  _ASSERT && common.assert(area > Math.EPSILON);\n  center.mul(1.0 / area);\n  massData.center.setCombine(1, center, 1, s);\n\n  // Inertia tensor relative to the local origin (point s).\n  massData.I = density * I;\n\n  // Shift to center of mass then to original body origin.\n  massData.I += massData.mass\n      * (Vec2.dot(massData.center, massData.center) - Vec2.dot(center, center));\n}\n\n// Validate convexity. This is a very time consuming operation.\n// @returns true if valid\nPolygonShape.prototype.validate = function() {\n  for (var i = 0; i < this.m_count; ++i) {\n    var i1 = i;\n    var i2 = i < this.m_count - 1 ? i1 + 1 : 0;\n    var p = this.m_vertices[i1];\n    var e = Vec2.sub(this.m_vertices[i2], p);\n\n    for (var j = 0; j < this.m_count; ++j) {\n      if (j == i1 || j == i2) {\n        continue;\n      }\n\n      var v = Vec2.sub(this.m_vertices[j], p);\n      var c = Vec2.cross(e, v);\n      if (c < 0.0) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nPolygonShape.prototype.computeDistanceProxy = function(proxy) {\n  proxy.m_vertices = this.m_vertices;\n  proxy.m_count = this.m_count;\n  proxy.m_radius = this.m_radius;\n};","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Distance;\n\nmodule.exports.Input = DistanceInput;\nmodule.exports.Output = DistanceOutput;\nmodule.exports.Proxy = DistanceProxy;\nmodule.exports.Cache = SimplexCache;\n\nvar Settings = require('../Settings');\nvar common = require('../util/common');\n\nvar stats = require('../common/stats');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\n/**\n * GJK using Voronoi regions (Christer Ericson) and Barycentric coordinates.\n */\n\nstats.gjkCalls = 0;\nstats.gjkIters = 0;\nstats.gjkMaxIters = 0;\n\n/**\n * Input for Distance. You have to option to use the shape radii in the\n * computation. Even\n */\nfunction DistanceInput() {\n  this.proxyA = new DistanceProxy();\n  this.proxyB = new DistanceProxy();\n  this.transformA = null;\n  this.transformB = null;\n  this.useRadii = false;\n};\n\n/**\n * Output for Distance.\n *\n * @prop {Vec2} pointA closest point on shapeA\n * @prop {Vec2} pointB closest point on shapeB\n * @prop distance\n * @prop iterations number of GJK iterations used\n */\nfunction DistanceOutput() {\n  this.pointA = Vec2.zero();\n  this.pointB = Vec2.zero();\n  this.distance;\n  this.iterations;\n}\n\n/**\n * Used to warm start Distance. Set count to zero on first call.\n *\n * @prop {number} metric length or area\n * @prop {array} indexA vertices on shape A\n * @prop {array} indexB vertices on shape B\n * @prop {number} count\n */\nfunction SimplexCache() {\n  this.metric = 0;\n  this.indexA = [];\n  this.indexB = [];\n  this.count = 0;\n};\n\n/**\n * Compute the closest points between two shapes. Supports any combination of:\n * CircleShape, PolygonShape, EdgeShape. The simplex cache is input/output. On\n * the first call set SimplexCache.count to zero.\n *\n * @param {DistanceOutput} output\n * @param {SimplexCache} cache\n * @param {DistanceInput} input\n */\nfunction Distance(output, cache, input) {\n  ++stats.gjkCalls;\n\n  var proxyA = input.proxyA;\n  var proxyB = input.proxyB;\n  var xfA = input.transformA;\n  var xfB = input.transformB;\n\n  // Initialize the simplex.\n  var simplex = new Simplex();\n  simplex.readCache(cache, proxyA, xfA, proxyB, xfB);\n\n  // Get simplex vertices as an array.\n  var vertices = simplex.m_v;// SimplexVertex\n  var k_maxIters = Settings.maxDistnceIterations;\n\n  // These store the vertices of the last simplex so that we\n  // can check for duplicates and prevent cycling.\n  var saveA = [];\n  var saveB = []; // int[3]\n  var saveCount = 0;\n\n  var distanceSqr1 = Infinity;\n  var distanceSqr2 = Infinity;\n\n  // Main iteration loop.\n  var iter = 0;\n  while (iter < k_maxIters) {\n    // Copy simplex so we can identify duplicates.\n    saveCount = simplex.m_count;\n    for (var i = 0; i < saveCount; ++i) {\n      saveA[i] = vertices[i].indexA;\n      saveB[i] = vertices[i].indexB;\n    }\n\n    simplex.solve();\n\n    // If we have 3 points, then the origin is in the corresponding triangle.\n    if (simplex.m_count == 3) {\n      break;\n    }\n\n    // Compute closest point.\n    var p = simplex.getClosestPoint();\n    distanceSqr2 = p.lengthSquared();\n\n    // Ensure progress\n    if (distanceSqr2 >= distanceSqr1) {\n      // break;\n    }\n    distanceSqr1 = distanceSqr2;\n\n    // Get search direction.\n    var d = simplex.getSearchDirection();\n\n    // Ensure the search direction is numerically fit.\n    if (d.lengthSquared() < Math.EPSILON * Math.EPSILON) {\n      // The origin is probably contained by a line segment\n      // or triangle. Thus the shapes are overlapped.\n\n      // We can't return zero here even though there may be overlap.\n      // In case the simplex is a point, segment, or triangle it is difficult\n      // to determine if the origin is contained in the CSO or very close to it.\n      break;\n    }\n\n    // Compute a tentative new simplex vertex using support points.\n    var vertex = vertices[simplex.m_count]; // SimplexVertex\n\n    vertex.indexA = proxyA.getSupport(Rot.mulTVec2(xfA.q, Vec2.neg(d)));\n    vertex.wA = Transform.mulVec2(xfA, proxyA.getVertex(vertex.indexA));\n\n    vertex.indexB = proxyB.getSupport(Rot.mulTVec2(xfB.q, d));\n    vertex.wB = Transform.mulVec2(xfB, proxyB.getVertex(vertex.indexB));\n\n    vertex.w = Vec2.sub(vertex.wB, vertex.wA);\n\n    // Iteration count is equated to the number of support point calls.\n    ++iter;\n    ++stats.gjkIters;\n\n    // Check for duplicate support points. This is the main termination\n    // criteria.\n    var duplicate = false;\n    for (var i = 0; i < saveCount; ++i) {\n      if (vertex.indexA == saveA[i] && vertex.indexB == saveB[i]) {\n        duplicate = true;\n        break;\n      }\n    }\n\n    // If we found a duplicate support point we must exit to avoid cycling.\n    if (duplicate) {\n      break;\n    }\n\n    // New vertex is ok and needed.\n    ++simplex.m_count;\n  }\n\n  stats.gjkMaxIters = Math.max(stats.gjkMaxIters, iter);\n\n  // Prepare output.\n  simplex.getWitnessPoints(output.pointA, output.pointB);\n  output.distance = Vec2.distance(output.pointA, output.pointB);\n  output.iterations = iter;\n\n  // Cache the simplex.\n  simplex.writeCache(cache);\n\n  // Apply radii if requested.\n  if (input.useRadii) {\n    var rA = proxyA.m_radius;\n    var rB = proxyB.m_radius;\n\n    if (output.distance > rA + rB && output.distance > Math.EPSILON) {\n      // Shapes are still no overlapped.\n      // Move the witness points to the outer surface.\n      output.distance -= rA + rB;\n      var normal = Vec2.sub(output.pointB, output.pointA);\n      normal.normalize();\n      output.pointA.addMul(rA, normal);\n      output.pointB.subMul(rB, normal);\n    } else {\n      // Shapes are overlapped when radii are considered.\n      // Move the witness points to the middle.\n      var p = Vec2.mid(output.pointA, output.pointB);\n      output.pointA.set(p);\n      output.pointB.set(p);\n      output.distance = 0.0;\n    }\n  }\n}\n\n/**\n * A distance proxy is used by the GJK algorithm. It encapsulates any shape.\n */\nfunction DistanceProxy() {\n  this.m_buffer = []; // Vec2[2]\n  this.m_vertices = []; // Vec2[]\n  this.m_count = 0;\n  this.m_radius = 0;\n};\n\n/**\n * Get the vertex count.\n */\nDistanceProxy.prototype.getVertexCount = function() {\n  return this.m_count;\n}\n\n/**\n * Get a vertex by index. Used by Distance.\n */\nDistanceProxy.prototype.getVertex = function(index) {\n  _ASSERT && common.assert(0 <= index && index < this.m_count);\n  return this.m_vertices[index];\n}\n\n/**\n * Get the supporting vertex index in the given direction.\n */\nDistanceProxy.prototype.getSupport = function(d) {\n  var bestIndex = 0;\n  var bestValue = Vec2.dot(this.m_vertices[0], d);\n  for (var i = 0; i < this.m_count; ++i) {\n    var value = Vec2.dot(this.m_vertices[i], d);\n    if (value > bestValue) {\n      bestIndex = i;\n      bestValue = value;\n    }\n  }\n  return bestIndex;\n}\n\n/**\n * Get the supporting vertex in the given direction.\n */\nDistanceProxy.prototype.getSupportVertex = function(d) {\n  return this.m_vertices[this.getSupport(d)];\n}\n\n/**\n * Initialize the proxy using the given shape. The shape must remain in scope\n * while the proxy is in use.\n */\nDistanceProxy.prototype.set = function(shape, index) {\n  // TODO remove, use shape instead\n  _ASSERT && common.assert(typeof shape.computeDistanceProxy === 'function');\n  shape.computeDistanceProxy(this, index);\n}\n\nfunction SimplexVertex() {\n  this.indexA; // wA index\n  this.indexB; // wB index\n  this.wA = Vec2.zero(); // support point in proxyA\n  this.wB = Vec2.zero(); // support point in proxyB\n  this.w = Vec2.zero(); // wB - wA\n  this.a; // barycentric coordinate for closest point\n};\n\nSimplexVertex.prototype.set = function(v) {\n  this.indexA = v.indexA;\n  this.indexB = v.indexB;\n  this.wA = Vec2.clone(v.wA);\n  this.wB = Vec2.clone(v.wB);\n  this.w = Vec2.clone(v.w);\n  this.a = v.a;\n};\n\nfunction Simplex() {\n  this.m_v1 = new SimplexVertex();\n  this.m_v2 = new SimplexVertex();\n  this.m_v3 = new SimplexVertex();\n  this.m_v = [ this.m_v1, this.m_v2, this.m_v3 ];\n  this.m_count;\n};\n\nSimplex.prototype.print = function() {\n  if (this.m_count == 3) {\n    return [\"+\" + this.m_count,\n      this.m_v1.a, this.m_v1.wA.x, this.m_v1.wA.y, this.m_v1.wB.x, this.m_v1.wB.y,\n      this.m_v2.a, this.m_v2.wA.x, this.m_v2.wA.y, this.m_v2.wB.x, this.m_v2.wB.y,\n      this.m_v3.a, this.m_v3.wA.x, this.m_v3.wA.y, this.m_v3.wB.x, this.m_v3.wB.y\n    ].toString();\n\n  } else if (this.m_count == 2) {\n    return [\"+\" + this.m_count,\n      this.m_v1.a, this.m_v1.wA.x, this.m_v1.wA.y, this.m_v1.wB.x, this.m_v1.wB.y,\n      this.m_v2.a, this.m_v2.wA.x, this.m_v2.wA.y, this.m_v2.wB.x, this.m_v2.wB.y\n    ].toString();\n\n  } else if (this.m_count == 1) {\n    return [\"+\" + this.m_count,\n      this.m_v1.a, this.m_v1.wA.x, this.m_v1.wA.y, this.m_v1.wB.x, this.m_v1.wB.y\n    ].toString();\n\n  } else {\n    return \"+\" + this.m_count;\n  }\n};\n\n// (SimplexCache, DistanceProxy, ...)\nSimplex.prototype.readCache = function(cache, proxyA, transformA, proxyB, transformB) {\n  _ASSERT && common.assert(cache.count <= 3);\n\n  // Copy data from cache.\n  this.m_count = cache.count;\n  for (var i = 0; i < this.m_count; ++i) {\n    var v = this.m_v[i];\n    v.indexA = cache.indexA[i];\n    v.indexB = cache.indexB[i];\n    var wALocal = proxyA.getVertex(v.indexA);\n    var wBLocal = proxyB.getVertex(v.indexB);\n    v.wA = Transform.mulVec2(transformA, wALocal);\n    v.wB = Transform.mulVec2(transformB, wBLocal);\n    v.w = Vec2.sub(v.wB, v.wA);\n    v.a = 0.0;\n  }\n\n  // Compute the new simplex metric, if it is substantially different than\n  // old metric then flush the simplex.\n  if (this.m_count > 1) {\n    var metric1 = cache.metric;\n    var metric2 = this.getMetric();\n    if (metric2 < 0.5 * metric1 || 2.0 * metric1 < metric2\n        || metric2 < Math.EPSILON) {\n      // Reset the simplex.\n      this.m_count = 0;\n    }\n  }\n\n  // If the cache is empty or invalid...\n  if (this.m_count == 0) {\n    var v = this.m_v[0];// SimplexVertex\n    v.indexA = 0;\n    v.indexB = 0;\n    var wALocal = proxyA.getVertex(0);\n    var wBLocal = proxyB.getVertex(0);\n    v.wA = Transform.mulVec2(transformA, wALocal);\n    v.wB = Transform.mulVec2(transformB, wBLocal);\n    v.w = Vec2.sub(v.wB, v.wA);\n    v.a = 1.0;\n    this.m_count = 1;\n  }\n}\n\n// (SimplexCache)\nSimplex.prototype.writeCache = function(cache) {\n  cache.metric = this.getMetric();\n  cache.count = this.m_count;\n  for (var i = 0; i < this.m_count; ++i) {\n    cache.indexA[i] = this.m_v[i].indexA;\n    cache.indexB[i] = this.m_v[i].indexB;\n  }\n}\n\nSimplex.prototype.getSearchDirection = function() {\n  switch (this.m_count) {\n  case 1:\n    return Vec2.neg(this.m_v1.w);\n\n  case 2: {\n    var e12 = Vec2.sub(this.m_v2.w, this.m_v1.w);\n    var sgn = Vec2.cross(e12, Vec2.neg(this.m_v1.w));\n    if (sgn > 0.0) {\n      // Origin is left of e12.\n      return Vec2.cross(1.0, e12);\n    } else {\n      // Origin is right of e12.\n      return Vec2.cross(e12, 1.0);\n    }\n  }\n\n  default:\n    _ASSERT && common.assert(false);\n    return Vec2.zero();\n  }\n}\n\nSimplex.prototype.getClosestPoint = function() {\n  switch (this.m_count) {\n  case 0:\n    _ASSERT && common.assert(false);\n    return Vec2.zero();\n\n  case 1:\n    return Vec2.clone(this.m_v1.w);\n\n  case 2:\n    return Vec2.combine(this.m_v1.a, this.m_v1.w, this.m_v2.a, this.m_v2.w);\n\n  case 3:\n    return Vec2.zero();\n\n  default:\n    _ASSERT && common.assert(false);\n    return Vec2.zero();\n  }\n}\n\nSimplex.prototype.getWitnessPoints = function(pA, pB) {\n  switch (this.m_count) {\n  case 0:\n    _ASSERT && common.assert(false);\n    break;\n\n  case 1:\n    pA.set(this.m_v1.wA);\n    pB.set(this.m_v1.wB);\n    break;\n\n  case 2:\n    pA.setCombine(this.m_v1.a, this.m_v1.wA, this.m_v2.a, this.m_v2.wA);\n    pB.setCombine(this.m_v1.a, this.m_v1.wB, this.m_v2.a, this.m_v2.wB);\n    break;\n\n  case 3:\n    pA.setCombine(this.m_v1.a, this.m_v1.wA, this.m_v2.a, this.m_v2.wA);\n    pA.addMul(this.m_v3.a, this.m_v3.wA);\n    pB.set(pA);\n    break;\n\n  default:\n    _ASSERT && common.assert(false);\n    break;\n  }\n}\n\nSimplex.prototype.getMetric = function() {\n  switch (this.m_count) {\n  case 0:\n    _ASSERT && common.assert(false);\n    return 0.0;\n\n  case 1:\n    return 0.0;\n\n  case 2:\n    return Vec2.distance(this.m_v1.w, this.m_v2.w);\n\n  case 3:\n    return Vec2.cross(Vec2.sub(this.m_v2.w, this.m_v1.w), Vec2.sub(this.m_v3.w,\n        this.m_v1.w));\n\n  default:\n    _ASSERT && common.assert(false);\n    return 0.0;\n  }\n}\n\nSimplex.prototype.solve = function() {\n  switch (this.m_count) {\n  case 1:\n    break;\n\n  case 2:\n    this.solve2();\n    break;\n\n  case 3:\n    this.solve3();\n    break;\n\n  default:\n    _ASSERT && common.assert(false);\n  }\n}\n\n// Solve a line segment using barycentric coordinates.\n//\n// p = a1 * w1 + a2 * w2\n// a1 + a2 = 1\n//\n// The vector from the origin to the closest point on the line is\n// perpendicular to the line.\n// e12 = w2 - w1\n// dot(p, e) = 0\n// a1 * dot(w1, e) + a2 * dot(w2, e) = 0\n//\n// 2-by-2 linear system\n// [1 1 ][a1] = [1]\n// [w1.e12 w2.e12][a2] = [0]\n//\n// Define\n// d12_1 = dot(w2, e12)\n// d12_2 = -dot(w1, e12)\n// d12 = d12_1 + d12_2\n//\n// Solution\n// a1 = d12_1 / d12\n// a2 = d12_2 / d12\nSimplex.prototype.solve2 = function() {\n  var w1 = this.m_v1.w;\n  var w2 = this.m_v2.w;\n  var e12 = Vec2.sub(w2, w1);\n\n  // w1 region\n  var d12_2 = -Vec2.dot(w1, e12);\n  if (d12_2 <= 0.0) {\n    // a2 <= 0, so we clamp it to 0\n    this.m_v1.a = 1.0;\n    this.m_count = 1;\n    return;\n  }\n\n  // w2 region\n  var d12_1 = Vec2.dot(w2, e12);\n  if (d12_1 <= 0.0) {\n    // a1 <= 0, so we clamp it to 0\n    this.m_v2.a = 1.0;\n    this.m_count = 1;\n    this.m_v1.set(this.m_v2);\n    return;\n  }\n\n  // Must be in e12 region.\n  var inv_d12 = 1.0 / (d12_1 + d12_2);\n  this.m_v1.a = d12_1 * inv_d12;\n  this.m_v2.a = d12_2 * inv_d12;\n  this.m_count = 2;\n}\n\n// Possible regions:\n// - points[2]\n// - edge points[0]-points[2]\n// - edge points[1]-points[2]\n// - inside the triangle\nSimplex.prototype.solve3 = function() {\n  var w1 = this.m_v1.w;\n  var w2 = this.m_v2.w;\n  var w3 = this.m_v3.w;\n\n  // Edge12\n  // [1 1 ][a1] = [1]\n  // [w1.e12 w2.e12][a2] = [0]\n  // a3 = 0\n  var e12 = Vec2.sub(w2, w1);\n  var w1e12 = Vec2.dot(w1, e12);\n  var w2e12 = Vec2.dot(w2, e12);\n  var d12_1 = w2e12;\n  var d12_2 = -w1e12;\n\n  // Edge13\n  // [1 1 ][a1] = [1]\n  // [w1.e13 w3.e13][a3] = [0]\n  // a2 = 0\n  var e13 = Vec2.sub(w3, w1);\n  var w1e13 = Vec2.dot(w1, e13);\n  var w3e13 = Vec2.dot(w3, e13);\n  var d13_1 = w3e13;\n  var d13_2 = -w1e13;\n\n  // Edge23\n  // [1 1 ][a2] = [1]\n  // [w2.e23 w3.e23][a3] = [0]\n  // a1 = 0\n  var e23 = Vec2.sub(w3, w2);// Vec2\n  var w2e23 = Vec2.dot(w2, e23);\n  var w3e23 = Vec2.dot(w3, e23);\n  var d23_1 = w3e23;\n  var d23_2 = -w2e23;\n\n  // Triangle123\n  var n123 = Vec2.cross(e12, e13);\n\n  var d123_1 = n123 * Vec2.cross(w2, w3);\n  var d123_2 = n123 * Vec2.cross(w3, w1);\n  var d123_3 = n123 * Vec2.cross(w1, w2);\n\n  // w1 region\n  if (d12_2 <= 0.0 && d13_2 <= 0.0) {\n    this.m_v1.a = 1.0;\n    this.m_count = 1;\n    return;\n  }\n\n  // e12\n  if (d12_1 > 0.0 && d12_2 > 0.0 && d123_3 <= 0.0) {\n    var inv_d12 = 1.0 / (d12_1 + d12_2);\n    this.m_v1.a = d12_1 * inv_d12;\n    this.m_v2.a = d12_2 * inv_d12;\n    this.m_count = 2;\n    return;\n  }\n\n  // e13\n  if (d13_1 > 0.0 && d13_2 > 0.0 && d123_2 <= 0.0) {\n    var inv_d13 = 1.0 / (d13_1 + d13_2);\n    this.m_v1.a = d13_1 * inv_d13;\n    this.m_v3.a = d13_2 * inv_d13;\n    this.m_count = 2;\n    this.m_v2.set(this.m_v3);\n    return;\n  }\n\n  // w2 region\n  if (d12_1 <= 0.0 && d23_2 <= 0.0) {\n    this.m_v2.a = 1.0;\n    this.m_count = 1;\n    this.m_v1.set(this.m_v2);\n    return;\n  }\n\n  // w3 region\n  if (d13_1 <= 0.0 && d23_1 <= 0.0) {\n    this.m_v3.a = 1.0;\n    this.m_count = 1;\n    this.m_v1.set(this.m_v3);\n    return;\n  }\n\n  // e23\n  if (d23_1 > 0.0 && d23_2 > 0.0 && d123_1 <= 0.0) {\n    var inv_d23 = 1.0 / (d23_1 + d23_2);\n    this.m_v2.a = d23_1 * inv_d23;\n    this.m_v3.a = d23_2 * inv_d23;\n    this.m_count = 2;\n    this.m_v1.set(this.m_v3);\n    return;\n  }\n\n  // Must be in triangle123\n  var inv_d123 = 1.0 / (d123_1 + d123_2 + d123_3);\n  this.m_v1.a = d123_1 * inv_d123;\n  this.m_v2.a = d123_2 * inv_d123;\n  this.m_v3.a = d123_3 * inv_d123;\n  this.m_count = 3;\n}\n\n/**\n * Determine if two generic shapes overlap.\n */\nDistance.testOverlap = function(shapeA, indexA, shapeB, indexB, xfA, xfB) {\n  var input = new DistanceInput();\n  input.proxyA.set(shapeA, indexA);\n  input.proxyB.set(shapeB, indexB);\n  input.transformA = xfA;\n  input.transformB = xfB;\n  input.useRadii = true;\n\n  var cache = new SimplexCache();\n\n  var output = new DistanceOutput();\n  Distance(output, cache, input);\n\n  return output.distance < 10.0 * Math.EPSILON;\n}","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = CircleShape;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar options = require('../util/options');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\n\nCircleShape._super = Shape;\nCircleShape.prototype = create(CircleShape._super.prototype);\n\nCircleShape.TYPE = 'circle';\nShape.TYPES[CircleShape.TYPE] = CircleShape;\n\nfunction CircleShape(a, b) {\n  if (!(this instanceof CircleShape)) {\n    return new CircleShape(a, b);\n  }\n\n  CircleShape._super.call(this);\n\n  this.m_type = CircleShape.TYPE;\n  this.m_p = Vec2.zero();\n  this.m_radius = 1;\n\n  if (typeof a === 'object' && Vec2.isValid(a)) {\n    this.m_p.set(a);\n\n    if (typeof b === 'number') {\n      this.m_radius = b;\n    }\n\n  } else if (typeof a === 'number') {\n    this.m_radius = a;\n  }\n}\n\nCircleShape.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n\n    p: this.m_p,\n    radius: this.m_radius,\n  };\n};\n\nCircleShape._deserialize = function(data) {\n  return new CircleShape(data.p, data.radius);\n};\n\nCircleShape.prototype.getRadius = function() {\n  return this.m_radius;\n}\n\nCircleShape.prototype.getCenter = function() {\n  return this.m_p;\n}\n\nCircleShape.prototype.getVertex = function(index) {\n  _ASSERT && common.assert(index == 0);\n  return this.m_p;\n}\n\nCircleShape.prototype.getVertexCount = function(index) {\n  return 1;\n}\n\n/**\n * @deprecated\n */\nCircleShape.prototype._clone = function() {\n  var clone = new CircleShape();\n  clone.m_type = this.m_type;\n  clone.m_radius = this.m_radius;\n  clone.m_p = this.m_p.clone();\n  return clone;\n}\n\nCircleShape.prototype.getChildCount = function() {\n  return 1;\n}\n\nCircleShape.prototype.testPoint = function(xf, p) {\n  var center = Vec2.add(xf.p, Rot.mulVec2(xf.q, this.m_p));\n  var d = Vec2.sub(p, center);\n  return Vec2.dot(d, d) <= this.m_radius * this.m_radius;\n}\n\n// Collision Detection in Interactive 3D Environments by Gino van den Bergen\n// From Section 3.1.2\n// x = s + a * r\n// norm(x) = radius\nCircleShape.prototype.rayCast = function(output, input, xf, childIndex) {\n\n  var position = Vec2.add(xf.p, Rot.mulVec2(xf.q, this.m_p));\n  var s = Vec2.sub(input.p1, position);\n  var b = Vec2.dot(s, s) - this.m_radius * this.m_radius;\n\n  // Solve quadratic equation.\n  var r = Vec2.sub(input.p2, input.p1);\n  var c = Vec2.dot(s, r);\n  var rr = Vec2.dot(r, r);\n  var sigma = c * c - rr * b;\n\n  // Check for negative discriminant and short segment.\n  if (sigma < 0.0 || rr < Math.EPSILON) {\n    return false;\n  }\n\n  // Find the point of intersection of the line with the circle.\n  var a = -(c + Math.sqrt(sigma));\n\n  // Is the intersection point on the segment?\n  if (0.0 <= a && a <= input.maxFraction * rr) {\n    a /= rr;\n    output.fraction = a;\n    output.normal = Vec2.add(s, Vec2.mul(a, r));\n    output.normal.normalize();\n    return true;\n  }\n\n  return false;\n}\n\nCircleShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n  var p = Vec2.add(xf.p, Rot.mulVec2(xf.q, this.m_p));\n  aabb.lowerBound.set(p.x - this.m_radius, p.y - this.m_radius);\n  aabb.upperBound.set(p.x + this.m_radius, p.y + this.m_radius);\n}\n\nCircleShape.prototype.computeMass = function(massData, density) {\n  massData.mass = density * Math.PI * this.m_radius * this.m_radius;\n  massData.center = this.m_p;\n  // inertia about the local origin\n  massData.I = massData.mass\n      * (0.5 * this.m_radius * this.m_radius + Vec2.dot(this.m_p, this.m_p));\n}\n\nCircleShape.prototype.computeDistanceProxy = function(proxy) {\n  proxy.m_vertices.push(this.m_p);\n  proxy.m_count = 1;\n  proxy.m_radius = this.m_radius;\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = EdgeShape;\n\nvar create = require('../util/create');\nvar options = require('../util/options');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\n\nEdgeShape._super = Shape;\nEdgeShape.prototype = create(EdgeShape._super.prototype);\n\nEdgeShape.TYPE = 'edge';\nShape.TYPES[EdgeShape.TYPE] = EdgeShape;\n\n/**\n * A line segment (edge) shape. These can be connected in chains or loops to\n * other edge shapes. The connectivity information is used to ensure correct\n * contact normals.\n */\nfunction EdgeShape(v1, v2) {\n  if (!(this instanceof EdgeShape)) {\n    return new EdgeShape(v1, v2);\n  }\n\n  EdgeShape._super.call(this);\n\n  this.m_type = EdgeShape.TYPE;\n  this.m_radius = Settings.polygonRadius;\n\n  // These are the edge vertices\n  this.m_vertex1 = v1 ? Vec2.clone(v1) : Vec2.zero();\n  this.m_vertex2 = v2 ? Vec2.clone(v2) : Vec2.zero();\n\n  // Optional adjacent vertices. These are used for smooth collision.\n  // Used by chain shape.\n  this.m_vertex0 = Vec2.zero();\n  this.m_vertex3 = Vec2.zero();\n  this.m_hasVertex0 = false;\n  this.m_hasVertex3 = false;\n}\n\nEdgeShape.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n\n    vertex1: this.m_vertex1,\n    vertex2: this.m_vertex2,\n\n    vertex0: this.m_vertex0,\n    vertex3: this.m_vertex3,\n    hasVertex0: this.m_hasVertex0,\n    hasVertex3: this.m_hasVertex3,\n  };\n};\n\nEdgeShape._deserialize = function(data) {\n  var shape = new EdgeShape(data.vertex1, data.vertex2);\n  if (shape.hasVertex0) {\n    shape.setPrev(data.vertex0);\n  }\n  if (shape.hasVertex3) {\n    shape.setNext(data.vertex3);\n  }\n  return shape;\n};\n\nEdgeShape.prototype.setNext = function(v3) {\n  if (v3) {\n    this.m_vertex3.set(v3);\n    this.m_hasVertex3 = true;\n  } else {\n    this.m_vertex3.setZero();\n    this.m_hasVertex3 = false;\n  }\n  return this;\n};\n\nEdgeShape.prototype.setPrev = function(v0) {\n  if (v0) {\n    this.m_vertex0.set(v0);\n    this.m_hasVertex0 = true;\n  } else {\n    this.m_vertex0.setZero();\n    this.m_hasVertex0 = false;\n  }\n  return this;\n};\n\n/**\n * Set this as an isolated edge.\n */\nEdgeShape.prototype._set = function(v1, v2) {\n  this.m_vertex1.set(v1);\n  this.m_vertex2.set(v2);\n  this.m_hasVertex0 = false;\n  this.m_hasVertex3 = false;\n  return this;\n}\n\n/**\n * @deprecated\n */\nEdgeShape.prototype._clone = function() {\n  var clone = new EdgeShape();\n  clone.m_type = this.m_type;\n  clone.m_radius = this.m_radius;\n  clone.m_vertex1.set(this.m_vertex1);\n  clone.m_vertex2.set(this.m_vertex2);\n  clone.m_vertex0.set(this.m_vertex0);\n  clone.m_vertex3.set(this.m_vertex3);\n  clone.m_hasVertex0 = this.m_hasVertex0;\n  clone.m_hasVertex3 = this.m_hasVertex3;\n  return clone;\n}\n\nEdgeShape.prototype.getChildCount = function() {\n  return 1;\n}\n\nEdgeShape.prototype.testPoint = function(xf, p) {\n  return false;\n}\n\n// p = p1 + t * d\n// v = v1 + s * e\n// p1 + t * d = v1 + s * e\n// s * e - t * d = p1 - v1\nEdgeShape.prototype.rayCast = function(output, input, xf, childIndex) {\n  // NOT_USED(childIndex);\n\n  // Put the ray into the edge's frame of reference.\n  var p1 = Rot.mulTVec2(xf.q, Vec2.sub(input.p1, xf.p));\n  var p2 = Rot.mulTVec2(xf.q, Vec2.sub(input.p2, xf.p));\n  var d = Vec2.sub(p2, p1);\n\n  var v1 = this.m_vertex1;\n  var v2 = this.m_vertex2;\n  var e = Vec2.sub(v2, v1);\n  var normal = Vec2.neo(e.y, -e.x);\n  normal.normalize();\n\n  // q = p1 + t * d\n  // dot(normal, q - v1) = 0\n  // dot(normal, p1 - v1) + t * dot(normal, d) = 0\n  var numerator = Vec2.dot(normal, Vec2.sub(v1, p1));\n  var denominator = Vec2.dot(normal, d);\n\n  if (denominator == 0.0) {\n    return false;\n  }\n\n  var t = numerator / denominator;\n  if (t < 0.0 || input.maxFraction < t) {\n    return false;\n  }\n\n  var q = Vec2.add(p1, Vec2.mul(t, d));\n\n  // q = v1 + s * r\n  // s = dot(q - v1, r) / dot(r, r)\n  var r = Vec2.sub(v2, v1);\n  var rr = Vec2.dot(r, r);\n  if (rr == 0.0) {\n    return false;\n  }\n\n  var s = Vec2.dot(Vec2.sub(q, v1), r) / rr;\n  if (s < 0.0 || 1.0 < s) {\n    return false;\n  }\n\n  output.fraction = t;\n  if (numerator > 0.0) {\n    output.normal = Rot.mulVec2(xf.q, normal).neg();\n  } else {\n    output.normal = Rot.mulVec2(xf.q, normal);\n  }\n  return true;\n}\n\nEdgeShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n  var v1 = Transform.mulVec2(xf, this.m_vertex1);\n  var v2 = Transform.mulVec2(xf, this.m_vertex2);\n\n  aabb.combinePoints(v1, v2);\n  aabb.extend(this.m_radius)\n}\n\nEdgeShape.prototype.computeMass = function(massData, density) {\n  massData.mass = 0.0;\n  massData.center.setCombine(0.5, this.m_vertex1, 0.5, this.m_vertex2);\n  massData.I = 0.0;\n}\n\nEdgeShape.prototype.computeDistanceProxy = function(proxy) {\n  proxy.m_vertices.push(this.m_vertex1);\n  proxy.m_vertices.push(this.m_vertex2);\n  proxy.m_count = 2;\n  proxy.m_radius = this.m_radius;\n};\n","if (typeof Object.create == 'function') {\n  module.exports = function(proto, props) {\n    return Object.create.call(Object, proto, props);\n  };\n} else {\n  module.exports = function(proto, props) {\n    if (props)\n      throw Error('Second argument is not supported!');\n    if (typeof proto !== 'object' || proto === null)\n      throw Error('Invalid prototype!');\n    noop.prototype = proto;\n    return new noop;\n  };\n  function noop() {\n  }\n}\n","var Class = require('./core');\nvar Matrix = require('./matrix');\n\nvar iid = 0;\n\nClass._init(function() {\n  this._pin = new Pin(this);\n});\n\nClass.prototype.matrix = function(relative) {\n  if (relative === true) {\n    return this._pin.relativeMatrix();\n  }\n  return this._pin.absoluteMatrix();\n};\n\nClass.prototype.pin = function(a, b) {\n  if (typeof a === 'object') {\n    this._pin.set(a);\n    return this;\n\n  } else if (typeof a === 'string') {\n    if (typeof b === 'undefined') {\n      return this._pin.get(a);\n    } else {\n      this._pin.set(a, b);\n      return this;\n    }\n  } else if (typeof a === 'undefined') {\n    return this._pin;\n  }\n};\n\nfunction Pin(owner) {\n\n  this._owner = owner;\n  this._parent = null;\n\n  // relative to parent\n  this._relativeMatrix = new Matrix();\n\n  // relative to stage\n  this._absoluteMatrix = new Matrix();\n\n  this.reset();\n};\n\nPin.prototype.reset = function() {\n\n  this._textureAlpha = 1;\n  this._alpha = 1;\n\n  this._width = 0;\n  this._height = 0;\n\n  this._scaleX = 1;\n  this._scaleY = 1;\n  this._skewX = 0;\n  this._skewY = 0;\n  this._rotation = 0;\n\n  // scale/skew/rotate center\n  this._pivoted = false;\n  this._pivotX = null;\n  this._pivotY = null;\n\n  // self pin point\n  this._handled = false;\n  this._handleX = 0;\n  this._handleY = 0;\n\n  // parent pin point\n  this._aligned = false;\n  this._alignX = 0;\n  this._alignY = 0;\n\n  // as seen by parent px\n  this._offsetX = 0;\n  this._offsetY = 0;\n\n  this._boxX = 0;\n  this._boxY = 0;\n  this._boxWidth = this._width;\n  this._boxHeight = this._height;\n\n  // TODO: also set for owner\n  this._ts_translate = ++iid;\n  this._ts_transform = ++iid;\n  this._ts_matrix = ++iid;\n};\n\nPin.prototype._update = function() {\n  this._parent = this._owner._parent && this._owner._parent._pin;\n\n  // if handled and transformed then be translated\n  if (this._handled && this._mo_handle != this._ts_transform) {\n    this._mo_handle = this._ts_transform;\n    this._ts_translate = ++iid;\n  }\n\n  if (this._aligned && this._parent\n      && this._mo_align != this._parent._ts_transform) {\n    this._mo_align = this._parent._ts_transform;\n    this._ts_translate = ++iid;\n  }\n\n  return this;\n};\n\nPin.prototype.toString = function() {\n  return this._owner + ' (' + (this._parent ? this._parent._owner : null) + ')';\n};\n\n// TODO: ts fields require refactoring\n\nPin.prototype.absoluteMatrix = function() {\n  this._update();\n  var ts = Math.max(this._ts_transform, this._ts_translate,\n      this._parent ? this._parent._ts_matrix : 0);\n  if (this._mo_abs == ts) {\n    return this._absoluteMatrix;\n  }\n  this._mo_abs = ts;\n\n  var abs = this._absoluteMatrix;\n  abs.reset(this.relativeMatrix());\n\n  this._parent && abs.concat(this._parent._absoluteMatrix);\n\n  this._ts_matrix = ++iid;\n\n  return abs;\n};\n\nPin.prototype.relativeMatrix = function() {\n  this._update();\n  var ts = Math.max(this._ts_transform, this._ts_translate,\n      this._parent ? this._parent._ts_transform : 0);\n  if (this._mo_rel == ts) {\n    return this._relativeMatrix;\n  }\n  this._mo_rel = ts;\n\n  var rel = this._relativeMatrix;\n\n  rel.identity();\n  if (this._pivoted) {\n    rel.translate(-this._pivotX * this._width, -this._pivotY * this._height);\n  }\n  rel.scale(this._scaleX, this._scaleY);\n  rel.skew(this._skewX, this._skewY);\n  rel.rotate(this._rotation);\n  if (this._pivoted) {\n    rel.translate(this._pivotX * this._width, this._pivotY * this._height);\n  }\n\n  // calculate effective box\n  if (this._pivoted) {\n    // origin\n    this._boxX = 0;\n    this._boxY = 0;\n    this._boxWidth = this._width;\n    this._boxHeight = this._height;\n\n  } else {\n    // aabb\n    var p, q;\n    if (rel.a > 0 && rel.c > 0 || rel.a < 0 && rel.c < 0) {\n      p = 0, q = rel.a * this._width + rel.c * this._height;\n    } else {\n      p = rel.a * this._width, q = rel.c * this._height;\n    }\n    if (p > q) {\n      this._boxX = q;\n      this._boxWidth = p - q;\n    } else {\n      this._boxX = p;\n      this._boxWidth = q - p;\n    }\n    if (rel.b > 0 && rel.d > 0 || rel.b < 0 && rel.d < 0) {\n      p = 0, q = rel.b * this._width + rel.d * this._height;\n    } else {\n      p = rel.b * this._width, q = rel.d * this._height;\n    }\n    if (p > q) {\n      this._boxY = q;\n      this._boxHeight = p - q;\n    } else {\n      this._boxY = p;\n      this._boxHeight = q - p;\n    }\n  }\n\n  this._x = this._offsetX;\n  this._y = this._offsetY;\n\n  this._x -= this._boxX + this._handleX * this._boxWidth;\n  this._y -= this._boxY + this._handleY * this._boxHeight;\n\n  if (this._aligned && this._parent) {\n    this._parent.relativeMatrix();\n    this._x += this._alignX * this._parent._width;\n    this._y += this._alignY * this._parent._height;\n  }\n\n  rel.translate(this._x, this._y);\n\n  return this._relativeMatrix;\n};\n\nPin.prototype.get = function(key) {\n  if (typeof getters[key] === 'function') {\n    return getters[key](this);\n  }\n};\n\n// TODO: Use defineProperty instead? What about multi-field pinning?\nPin.prototype.set = function(a, b) {\n  if (typeof a === 'string') {\n    if (typeof setters[a] === 'function' && typeof b !== 'undefined') {\n      setters[a](this, b);\n    }\n  } else if (typeof a === 'object') {\n    for (b in a) {\n      if (typeof setters[b] === 'function' && typeof a[b] !== 'undefined') {\n        setters[b](this, a[b], a);\n      }\n    }\n  }\n  if (this._owner) {\n    this._owner._ts_pin = ++iid;\n    this._owner.touch();\n  }\n  return this;\n};\n\nvar getters = {\n  alpha : function(pin) {\n    return pin._alpha;\n  },\n\n  textureAlpha : function(pin) {\n    return pin._textureAlpha;\n  },\n\n  width : function(pin) {\n    return pin._width;\n  },\n\n  height : function(pin) {\n    return pin._height;\n  },\n\n  boxWidth : function(pin) {\n    return pin._boxWidth;\n  },\n\n  boxHeight : function(pin) {\n    return pin._boxHeight;\n  },\n\n  // scale : function(pin) {\n  // },\n\n  scaleX : function(pin) {\n    return pin._scaleX;\n  },\n\n  scaleY : function(pin) {\n    return pin._scaleY;\n  },\n\n  // skew : function(pin) {\n  // },\n\n  skewX : function(pin) {\n    return pin._skewX;\n  },\n\n  skewY : function(pin) {\n    return pin._skewY;\n  },\n\n  rotation : function(pin) {\n    return pin._rotation;\n  },\n\n  // pivot : function(pin) {\n  // },\n\n  pivotX : function(pin) {\n    return pin._pivotX;\n  },\n\n  pivotY : function(pin) {\n    return pin._pivotY;\n  },\n\n  // offset : function(pin) {\n  // },\n\n  offsetX : function(pin) {\n    return pin._offsetX;\n  },\n\n  offsetY : function(pin) {\n    return pin._offsetY;\n  },\n\n  // align : function(pin) {\n  // },\n\n  alignX : function(pin) {\n    return pin._alignX;\n  },\n\n  alignY : function(pin) {\n    return pin._alignY;\n  },\n\n  // handle : function(pin) {\n  // },\n\n  handleX : function(pin) {\n    return pin._handleX;\n  },\n\n  handleY : function(pin) {\n    return pin._handleY;\n  }\n};\n\nvar setters = {\n  alpha : function(pin, value) {\n    pin._alpha = value;\n  },\n\n  textureAlpha : function(pin, value) {\n    pin._textureAlpha = value;\n  },\n\n  width : function(pin, value) {\n    pin._width_ = value;\n    pin._width = value;\n    pin._ts_transform = ++iid;\n  },\n\n  height : function(pin, value) {\n    pin._height_ = value;\n    pin._height = value;\n    pin._ts_transform = ++iid;\n  },\n\n  scale : function(pin, value) {\n    pin._scaleX = value;\n    pin._scaleY = value;\n    pin._ts_transform = ++iid;\n  },\n\n  scaleX : function(pin, value) {\n    pin._scaleX = value;\n    pin._ts_transform = ++iid;\n  },\n\n  scaleY : function(pin, value) {\n    pin._scaleY = value;\n    pin._ts_transform = ++iid;\n  },\n\n  skew : function(pin, value) {\n    pin._skewX = value;\n    pin._skewY = value;\n    pin._ts_transform = ++iid;\n  },\n\n  skewX : function(pin, value) {\n    pin._skewX = value;\n    pin._ts_transform = ++iid;\n  },\n\n  skewY : function(pin, value) {\n    pin._skewY = value;\n    pin._ts_transform = ++iid;\n  },\n\n  rotation : function(pin, value) {\n    pin._rotation = value;\n    pin._ts_transform = ++iid;\n  },\n\n  pivot : function(pin, value) {\n    pin._pivotX = value;\n    pin._pivotY = value;\n    pin._pivoted = true;\n    pin._ts_transform = ++iid;\n  },\n\n  pivotX : function(pin, value) {\n    pin._pivotX = value;\n    pin._pivoted = true;\n    pin._ts_transform = ++iid;\n  },\n\n  pivotY : function(pin, value) {\n    pin._pivotY = value;\n    pin._pivoted = true;\n    pin._ts_transform = ++iid;\n  },\n\n  offset : function(pin, value) {\n    pin._offsetX = value;\n    pin._offsetY = value;\n    pin._ts_translate = ++iid;\n  },\n\n  offsetX : function(pin, value) {\n    pin._offsetX = value;\n    pin._ts_translate = ++iid;\n  },\n\n  offsetY : function(pin, value) {\n    pin._offsetY = value;\n    pin._ts_translate = ++iid;\n  },\n\n  align : function(pin, value) {\n    this.alignX(pin, value);\n    this.alignY(pin, value);\n  },\n\n  alignX : function(pin, value) {\n    pin._alignX = value;\n    pin._aligned = true;\n    pin._ts_translate = ++iid;\n\n    this.handleX(pin, value);\n  },\n\n  alignY : function(pin, value) {\n    pin._alignY = value;\n    pin._aligned = true;\n    pin._ts_translate = ++iid;\n\n    this.handleY(pin, value);\n  },\n\n  handle : function(pin, value) {\n    this.handleX(pin, value);\n    this.handleY(pin, value);\n  },\n\n  handleX : function(pin, value) {\n    pin._handleX = value;\n    pin._handled = true;\n    pin._ts_translate = ++iid;\n  },\n\n  handleY : function(pin, value) {\n    pin._handleY = value;\n    pin._handled = true;\n    pin._ts_translate = ++iid;\n  },\n\n  resizeMode : function(pin, value, all) {\n    if (all) {\n      if (value == 'in') {\n        value = 'in-pad';\n      } else if (value == 'out') {\n        value = 'out-crop';\n      }\n      scaleTo(pin, all.resizeWidth, all.resizeHeight, value);\n    }\n  },\n\n  resizeWidth : function(pin, value, all) {\n    if (!all || !all.resizeMode) {\n      scaleTo(pin, value, null);\n    }\n  },\n\n  resizeHeight : function(pin, value, all) {\n    if (!all || !all.resizeMode) {\n      scaleTo(pin, null, value);\n    }\n  },\n\n  scaleMode : function(pin, value, all) {\n    if (all) {\n      scaleTo(pin, all.scaleWidth, all.scaleHeight, value);\n    }\n  },\n\n  scaleWidth : function(pin, value, all) {\n    if (!all || !all.scaleMode) {\n      scaleTo(pin, value, null);\n    }\n  },\n\n  scaleHeight : function(pin, value, all) {\n    if (!all || !all.scaleMode) {\n      scaleTo(pin, null, value);\n    }\n  },\n\n  matrix : function(pin, value) {\n    this.scaleX(pin, value.a);\n    this.skewX(pin, value.c / value.d);\n    this.skewY(pin, value.b / value.a);\n    this.scaleY(pin, value.d);\n    this.offsetX(pin, value.e);\n    this.offsetY(pin, value.f);\n    this.rotation(pin, 0);\n  }\n};\n\nfunction scaleTo(pin, width, height, mode) {\n  var w = typeof width === 'number';\n  var h = typeof height === 'number';\n  var m = typeof mode === 'string';\n  pin._ts_transform = ++iid;\n  if (w) {\n    pin._scaleX = width / pin._width_;\n    pin._width = pin._width_;\n  }\n  if (h) {\n    pin._scaleY = height / pin._height_;\n    pin._height = pin._height_;\n  }\n  if (w && h && m) {\n    if (mode == 'out' || mode == 'out-crop') {\n      pin._scaleX = pin._scaleY = Math.max(pin._scaleX, pin._scaleY);\n    } else if (mode == 'in' || mode == 'in-pad') {\n      pin._scaleX = pin._scaleY = Math.min(pin._scaleX, pin._scaleY);\n    }\n    if (mode == 'out-crop' || mode == 'in-pad') {\n      pin._width = width / pin._scaleX;\n      pin._height = height / pin._scaleY;\n    }\n  }\n};\n\nClass.prototype.scaleTo = function(a, b, c) {\n  if (typeof a === 'object')\n    c = b, b = a.y, a = a.x;\n  scaleTo(this._pin, a, b, c);\n  return this;\n};\n\n// Used by Tween class\nPin._add_shortcuts = function(Class) {\n  Class.prototype.size = function(w, h) {\n    this.pin('width', w);\n    this.pin('height', h);\n    return this;\n  };\n\n  Class.prototype.width = function(w) {\n    if (typeof w === 'undefined') {\n      return this.pin('width');\n    }\n    this.pin('width', w);\n    return this;\n  };\n\n  Class.prototype.height = function(h) {\n    if (typeof h === 'undefined') {\n      return this.pin('height');\n    }\n    this.pin('height', h);\n    return this;\n  };\n\n  Class.prototype.offset = function(a, b) {\n    if (typeof a === 'object')\n      b = a.y, a = a.x;\n    this.pin('offsetX', a);\n    this.pin('offsetY', b);\n    return this;\n  };\n\n  Class.prototype.rotate = function(a) {\n    this.pin('rotation', a);\n    return this;\n  };\n\n  Class.prototype.skew = function(a, b) {\n    if (typeof a === 'object')\n      b = a.y, a = a.x;\n    else if (typeof b === 'undefined')\n      b = a;\n    this.pin('skewX', a);\n    this.pin('skewY', b);\n    return this;\n  };\n\n  Class.prototype.scale = function(a, b) {\n    if (typeof a === 'object')\n      b = a.y, a = a.x;\n    else if (typeof b === 'undefined')\n      b = a;\n    this.pin('scaleX', a);\n    this.pin('scaleY', b);\n    return this;\n  };\n\n  Class.prototype.alpha = function(a, ta) {\n    this.pin('alpha', a);\n    if (typeof ta !== 'undefined') {\n      this.pin('textureAlpha', ta);\n    }\n    return this;\n  };\n};\n\nPin._add_shortcuts(Class);\n\nmodule.exports = Pin;\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = World;\n\nvar options = require('./util/options');\nvar common = require('./util/common');\nvar Vec2 = require('./common/Vec2');\nvar BroadPhase = require('./collision/BroadPhase');\nvar Solver = require('./Solver');\nvar Body = require('./Body');\nvar Contact = require('./Contact');\n\n/**\n * @typedef {Object} WorldDef\n *\n * @prop {Vec2} [gravity = { x : 0, y : 0}]\n * @prop {boolean} [allowSleep = true]\n * @prop {boolean} [warmStarting = false]\n * @prop {boolean} [continuousPhysics = false]\n * @prop {boolean} [subStepping = false]\n * @prop {boolean} [blockSolve = true]\n * @prop {int} [velocityIterations = 8] For the velocity constraint solver.\n * @prop {int} [positionIterations = 3] For the position constraint solver.\n */\nvar WorldDef = {\n  gravity : Vec2.zero(),\n  allowSleep : true,\n  warmStarting : true,\n  continuousPhysics : true,\n  subStepping : false,\n  blockSolve : true,\n  velocityIterations : 8,\n  positionIterations : 3\n};\n\n/**\n * @param {WordDef|Vec2} def World definition or gravity vector.\n */\nfunction World(def) {\n  if (!(this instanceof World)) {\n    return new World(def);\n  }\n\n  if (def && Vec2.isValid(def)) {\n    def = {gravity : def};\n  }\n\n  def = options(def, WorldDef);\n\n  this.m_solver = new Solver(this);\n\n  this.m_broadPhase = new BroadPhase();\n\n  this.m_contactList = null;\n  this.m_contactCount = 0;\n\n  this.m_bodyList = null;\n  this.m_bodyCount = 0;\n\n  this.m_jointList = null;\n  this.m_jointCount = 0;\n\n  this.m_stepComplete = true;\n\n  this.m_allowSleep = def.allowSleep;\n  this.m_gravity = Vec2.clone(def.gravity);\n\n  this.m_clearForces = true;\n  this.m_newFixture = false;\n  this.m_locked = false;\n\n  // These are for debugging the solver.\n  this.m_warmStarting = def.warmStarting;\n  this.m_continuousPhysics = def.continuousPhysics;\n  this.m_subStepping = def.subStepping;\n\n  this.m_blockSolve = def.blockSolve;\n  this.m_velocityIterations = def.velocityIterations;\n  this.m_positionIterations = def.positionIterations;\n\n  this.m_t = 0;\n\n  this.m_stepCount = 0;\n\n  // Broad-phase callback.\n  this.addPair = this.createContact.bind(this);\n}\n\nWorld.prototype._serialize = function() {\n  var bodies = [];\n  var joints = [];\n\n  for (var b = this.getBodyList(); b; b = b.getNext()) {\n    bodies.push(b);\n  }\n\n  // for (var j = this.getJointList(); j; j = j.getNext()) {\n  //   joints.push(j);\n  // }\n\n  return {\n    gravity: this.m_gravity,\n    bodies: bodies,\n    // joints: joints,\n  };\n};\n\nWorld._deserialize = function(data) {\n  var world = new World(data.gravity);\n  data.bodies && data.bodies.reverse().forEach(function(data) {\n    world._addBody(Body._deserialize(world, data));\n  });\n\n  return world;\n};\n\n/**\n * Get the world body list. With the returned body, use Body.getNext to get the\n * next body in the world list. A null body indicates the end of the list.\n *\n * @return the head of the world body list.\n */\nWorld.prototype.getBodyList = function() {\n  return this.m_bodyList;\n}\n\n/**\n * Get the world joint list. With the returned joint, use Joint.getNext to get\n * the next joint in the world list. A null joint indicates the end of the list.\n *\n * @return the head of the world joint list.\n */\nWorld.prototype.getJointList = function() {\n  return this.m_jointList;\n}\n\n/**\n * Get the world contact list. With the returned contact, use Contact.getNext to\n * get the next contact in the world list. A null contact indicates the end of\n * the list.\n *\n * @return the head of the world contact list. Warning: contacts are created and\n *         destroyed in the middle of a time step. Use ContactListener to avoid\n *         missing contacts.\n */\nWorld.prototype.getContactList = function() {\n  return this.m_contactList;\n}\n\nWorld.prototype.getBodyCount = function() {\n  return this.m_bodyCount;\n}\n\nWorld.prototype.getJointCount = function() {\n  return this.m_jointCount;\n}\n\n/**\n * Get the number of contacts (each may have 0 or more contact points).\n */\nWorld.prototype.getContactCount = function() {\n  return this.m_contactCount;\n}\n\n/**\n * Change the global gravity vector.\n */\nWorld.prototype.setGravity = function(gravity) {\n  this.m_gravity = gravity;\n}\n\n/**\n * Get the global gravity vector.\n */\nWorld.prototype.getGravity = function() {\n  return this.m_gravity;\n}\n\n/**\n * Is the world locked (in the middle of a time step).\n */\nWorld.prototype.isLocked = function() {\n  return this.m_locked;\n}\n\n/**\n * Enable/disable sleep.\n */\nWorld.prototype.setAllowSleeping = function(flag) {\n  if (flag == this.m_allowSleep) {\n    return;\n  }\n\n  this.m_allowSleep = flag;\n  if (this.m_allowSleep == false) {\n    for (var b = this.m_bodyList; b; b = b.m_next) {\n      b.setAwake(true);\n    }\n  }\n}\n\nWorld.prototype.getAllowSleeping = function() {\n  return this.m_allowSleep;\n}\n\n/**\n * Enable/disable warm starting. For testing.\n */\nWorld.prototype.setWarmStarting = function(flag) {\n  this.m_warmStarting = flag;\n}\n\nWorld.prototype.getWarmStarting = function() {\n  return this.m_warmStarting;\n}\n\n/**\n * Enable/disable continuous physics. For testing.\n */\nWorld.prototype.setContinuousPhysics = function(flag) {\n  this.m_continuousPhysics = flag;\n}\n\nWorld.prototype.getContinuousPhysics = function() {\n  return this.m_continuousPhysics;\n}\n\n/**\n * Enable/disable single stepped continuous physics. For testing.\n */\nWorld.prototype.setSubStepping = function(flag) {\n  this.m_subStepping = flag;\n}\n\nWorld.prototype.getSubStepping = function() {\n  return this.m_subStepping;\n}\n\n/**\n * Set flag to control automatic clearing of forces after each time step.\n */\nWorld.prototype.setAutoClearForces = function(flag) {\n  this.m_clearForces = flag;\n}\n\n/**\n * Get the flag that controls automatic clearing of forces after each time step.\n */\nWorld.prototype.getAutoClearForces = function() {\n  return this.m_clearForces;\n}\n\n/**\n * Manually clear the force buffer on all bodies. By default, forces are cleared\n * automatically after each call to step. The default behavior is modified by\n * calling setAutoClearForces. The purpose of this function is to support\n * sub-stepping. Sub-stepping is often used to maintain a fixed sized time step\n * under a variable frame-rate. When you perform sub-stepping you will disable\n * auto clearing of forces and instead call clearForces after all sub-steps are\n * complete in one pass of your game loop.\n *\n * @see setAutoClearForces\n */\nWorld.prototype.clearForces = function() {\n  for (var body = this.m_bodyList; body; body = body.getNext()) {\n    body.m_force.setZero();\n    body.m_torque = 0.0;\n  }\n}\n\n/**\n * @function World~rayCastCallback\n *\n * @param fixture\n */\n\n/**\n * Query the world for all fixtures that potentially overlap the provided AABB.\n *\n * @param {World~queryCallback} queryCallback Called for each fixture\n *          found in the query AABB. It may return `false` to terminate the\n *          query.\n *\n * @param aabb The query box.\n */\nWorld.prototype.queryAABB = function(aabb, queryCallback) {\n  _ASSERT && common.assert(typeof queryCallback === 'function');\n  var broadPhase = this.m_broadPhase;\n  this.m_broadPhase.query(aabb, function(proxyId) { //TODO GC\n    var proxy = broadPhase.getUserData(proxyId); // FixtureProxy\n    return queryCallback(proxy.fixture);\n  });\n}\n\n/**\n * @function World~rayCastCallback\n *\n * Callback class for ray casts. See World.rayCast\n *\n * Called for each fixture found in the query. You control how the ray cast\n * proceeds by returning a float: return -1: ignore this fixture and continue\n * return 0: terminate the ray cast return fraction: clip the ray to this point\n * return 1: don't clip the ray and continue\n *\n * @param fixture The fixture hit by the ray\n * @param point The point of initial intersection\n * @param normal The normal vector at the point of intersection\n * @param fraction\n *\n * @return {float} -1 to filter, 0 to terminate, fraction to clip the ray for\n *         closest hit, 1 to continue\n */\n\n/**\n *\n * Ray-cast the world for all fixtures in the path of the ray. Your callback\n * controls whether you get the closest point, any point, or n-points. The\n * ray-cast ignores shapes that contain the starting point.\n *\n * @param {World~RayCastCallback} reportFixtureCallback A user implemented\n *          callback function.\n * @param point1 The ray starting point\n * @param point2 The ray ending point\n */\nWorld.prototype.rayCast = function(point1, point2, reportFixtureCallback) {\n  _ASSERT && common.assert(typeof reportFixtureCallback === 'function');\n  var broadPhase = this.m_broadPhase;\n\n  this.m_broadPhase.rayCast({\n    maxFraction : 1.0,\n    p1 : point1,\n    p2 : point2\n  }, function(input, proxyId) { // TODO GC\n    var proxy = broadPhase.getUserData(proxyId); // FixtureProxy\n    var fixture = proxy.fixture;\n    var index = proxy.childIndex;\n    var output = {}; // TODO GC\n    var hit = fixture.rayCast(output, input, index);\n    if (hit) {\n      var fraction = output.fraction;\n      var point = Vec2.add(Vec2.mul((1.0 - fraction), input.p1), Vec2.mul(fraction, input.p2));\n      return reportFixtureCallback(fixture, point, output.normal, fraction);\n    }\n    return input.maxFraction;\n  });\n}\n\n/**\n * Get the number of broad-phase proxies.\n */\nWorld.prototype.getProxyCount = function() {\n  return this.m_broadPhase.getProxyCount();\n}\n\n/**\n * Get the height of broad-phase dynamic tree.\n */\nWorld.prototype.getTreeHeight = function() {\n  return this.m_broadPhase.getTreeHeight();\n}\n\n/**\n * Get the balance of broad-phase dynamic tree.\n *\n * @returns {int}\n */\nWorld.prototype.getTreeBalance = function() {\n  return this.m_broadPhase.getTreeBalance();\n}\n\n/**\n * Get the quality metric of broad-phase dynamic tree. The smaller the better.\n * The minimum is 1.\n *\n * @returns {float}\n */\nWorld.prototype.getTreeQuality = function() {\n  return this.m_broadPhase.getTreeQuality();\n}\n\n/**\n * Shift the world origin. Useful for large worlds. The body shift formula is:\n * position -= newOrigin\n *\n * @param {Vec2} newOrigin The new origin with respect to the old origin\n */\nWorld.prototype.shiftOrigin = function(newOrigin) {\n  _ASSERT && common.assert(this.m_locked == false);\n  if (this.m_locked) {\n    return;\n  }\n\n  for (var b = this.m_bodyList; b; b = b.m_next) {\n    b.m_xf.p.sub(newOrigin);\n    b.m_sweep.c0.sub(newOrigin);\n    b.m_sweep.c.sub(newOrigin);\n  }\n\n  for (var j = this.m_jointList; j; j = j.m_next) {\n    j.shiftOrigin(newOrigin);\n  }\n\n  this.m_broadPhase.shiftOrigin(newOrigin);\n}\n\n/**\n * Warning: This function is locked during callbacks.\n *\n * @param {Body} body\n */\nWorld.prototype._addBody = function(body) {\n  _ASSERT && common.assert(this.isLocked() === false);\n  if (this.isLocked()) {\n    return;\n  }\n\n  // Add to world doubly linked list.\n  body.m_prev = null;\n  body.m_next = this.m_bodyList;\n  if (this.m_bodyList) {\n    this.m_bodyList.m_prev = body;\n  }\n  this.m_bodyList = body;\n  ++this.m_bodyCount;\n}\n\n/**\n * Create a rigid body given a definition. No reference to the definition is\n * retained.\n *\n * Warning: This function is locked during callbacks.\n *\n * @param {BodyDef|Vec2} def Body definition or position.\n * @param {float} angle Body angle if def is position.\n */\nWorld.prototype.createBody = function(def, angle) {\n  _ASSERT && common.assert(this.isLocked() == false);\n  if (this.isLocked()) {\n    return null;\n  }\n\n  if (def && Vec2.isValid(def)) {\n    def = {\n      position : def,\n      angle : angle\n    };\n  }\n\n  var body = new Body(this, def);\n\n  this._addBody(body);\n\n  return body;\n}\n\nWorld.prototype.createDynamicBody = function(def, angle) {\n  if (!def) {\n    def = {};\n  } else if (Vec2.isValid(def)) {\n    def = { position : def, angle : angle };\n  }\n  def.type = 'dynamic';\n  return this.createBody(def);\n}\n\nWorld.prototype.createKinematicBody = function(def, angle) {\n  if (!def) {\n    def = {};\n  } else if (Vec2.isValid(def)) {\n    def = { position : def, angle : angle };\n  }\n  def.type = 'kinematic';\n  return this.createBody(def);\n}\n\n/**\n * Destroy a rigid body given a definition. No reference to the definition is\n * retained.\n *\n * Warning: This automatically deletes all associated shapes and joints.\n *\n * Warning: This function is locked during callbacks.\n *\n * @param {Body} b\n */\nWorld.prototype.destroyBody = function(b) {\n  _ASSERT && common.assert(this.m_bodyCount > 0);\n  _ASSERT && common.assert(this.isLocked() == false);\n  if (this.isLocked()) {\n    return;\n  }\n\n  if (b.m_destroyed) {\n    return false;\n  }\n\n  // Delete the attached joints.\n  var je = b.m_jointList;\n  while (je) {\n    var je0 = je;\n    je = je.next;\n\n    this.publish('remove-joint', je0.joint);\n    this.destroyJoint(je0.joint);\n\n    b.m_jointList = je;\n  }\n  b.m_jointList = null;\n\n  // Delete the attached contacts.\n  var ce = b.m_contactList;\n  while (ce) {\n    var ce0 = ce;\n    ce = ce.next;\n\n    this.destroyContact(ce0.contact);\n\n    b.m_contactList = ce;\n  }\n  b.m_contactList = null;\n\n  // Delete the attached fixtures. This destroys broad-phase proxies.\n  var f = b.m_fixtureList;\n  while (f) {\n    var f0 = f;\n    f = f.m_next;\n\n    this.publish('remove-fixture', f0);\n    f0.destroyProxies(this.m_broadPhase);\n\n    b.m_fixtureList = f;\n  }\n  b.m_fixtureList = null;\n\n  // Remove world body list.\n  if (b.m_prev) {\n    b.m_prev.m_next = b.m_next;\n  }\n\n  if (b.m_next) {\n    b.m_next.m_prev = b.m_prev;\n  }\n\n  if (b == this.m_bodyList) {\n    this.m_bodyList = b.m_next;\n  }\n\n  b.m_destroyed = true;\n\n  --this.m_bodyCount;\n\n  this.publish('remove-body', b);\n\n  return true;\n}\n\n/**\n * Create a joint to constrain bodies together. No reference to the definition\n * is retained. This may cause the connected bodies to cease colliding.\n *\n * Warning: This function is locked during callbacks.\n *\n * @param {Joint} join\n * @param {Body} bodyB\n * @param {Body} bodyA\n */\nWorld.prototype.createJoint = function(joint) {\n  _ASSERT && common.assert(!!joint.m_bodyA);\n  _ASSERT && common.assert(!!joint.m_bodyB);\n  _ASSERT && common.assert(this.isLocked() == false);\n  if (this.isLocked()) {\n    return null;\n  }\n\n  // Connect to the world list.\n  joint.m_prev = null;\n  joint.m_next = this.m_jointList;\n  if (this.m_jointList) {\n    this.m_jointList.m_prev = joint;\n  }\n  this.m_jointList = joint;\n  ++this.m_jointCount;\n\n  // Connect to the bodies' doubly linked lists.\n  joint.m_edgeA.joint = joint;\n  joint.m_edgeA.other = joint.m_bodyB;\n  joint.m_edgeA.prev = null;\n  joint.m_edgeA.next = joint.m_bodyA.m_jointList;\n  if (joint.m_bodyA.m_jointList)\n    joint.m_bodyA.m_jointList.prev = joint.m_edgeA;\n  joint.m_bodyA.m_jointList = joint.m_edgeA;\n\n  joint.m_edgeB.joint = joint;\n  joint.m_edgeB.other = joint.m_bodyA;\n  joint.m_edgeB.prev = null;\n  joint.m_edgeB.next = joint.m_bodyB.m_jointList;\n  if (joint.m_bodyB.m_jointList)\n    joint.m_bodyB.m_jointList.prev = joint.m_edgeB;\n  joint.m_bodyB.m_jointList = joint.m_edgeB;\n\n  // If the joint prevents collisions, then flag any contacts for filtering.\n  if (joint.m_collideConnected == false) {\n    for (var edge = joint.m_bodyB.getContactList(); edge; edge = edge.next) {\n      if (edge.other == joint.m_bodyA) {\n        // Flag the contact for filtering at the next time step (where either\n        // body is awake).\n        edge.contact.flagForFiltering();\n      }\n    }\n  }\n\n  // Note: creating a joint doesn't wake the bodies.\n\n  return joint;\n}\n\n/**\n * Destroy a joint. This may cause the connected bodies to begin colliding.\n * Warning: This function is locked during callbacks.\n *\n * @param {Joint} join\n */\nWorld.prototype.destroyJoint = function(joint) {\n  _ASSERT && common.assert(this.isLocked() == false);\n  if (this.isLocked()) {\n    return;\n  }\n\n  // Remove from the doubly linked list.\n  if (joint.m_prev) {\n    joint.m_prev.m_next = joint.m_next;\n  }\n\n  if (joint.m_next) {\n    joint.m_next.m_prev = joint.m_prev;\n  }\n\n  if (joint == this.m_jointList) {\n    this.m_jointList = joint.m_next;\n  }\n\n  // Disconnect from bodies.\n  var bodyA = joint.m_bodyA;\n  var bodyB = joint.m_bodyB;\n\n  // Wake up connected bodies.\n  bodyA.setAwake(true);\n  bodyB.setAwake(true);\n\n  // Remove from body 1.\n  if (joint.m_edgeA.prev) {\n    joint.m_edgeA.prev.next = joint.m_edgeA.next;\n  }\n\n  if (joint.m_edgeA.next) {\n    joint.m_edgeA.next.prev = joint.m_edgeA.prev;\n  }\n\n  if (joint.m_edgeA == bodyA.m_jointList) {\n    bodyA.m_jointList = joint.m_edgeA.next;\n  }\n\n  joint.m_edgeA.prev = null;\n  joint.m_edgeA.next = null;\n\n  // Remove from body 2\n  if (joint.m_edgeB.prev) {\n    joint.m_edgeB.prev.next = joint.m_edgeB.next;\n  }\n\n  if (joint.m_edgeB.next) {\n    joint.m_edgeB.next.prev = joint.m_edgeB.prev;\n  }\n\n  if (joint.m_edgeB == bodyB.m_jointList) {\n    bodyB.m_jointList = joint.m_edgeB.next;\n  }\n\n  joint.m_edgeB.prev = null;\n  joint.m_edgeB.next = null;\n\n  _ASSERT && common.assert(this.m_jointCount > 0);\n  --this.m_jointCount;\n\n  // If the joint prevents collisions, then flag any contacts for filtering.\n  if (joint.m_collideConnected == false) {\n    var edge = bodyB.getContactList();\n    while (edge) {\n      if (edge.other == bodyA) {\n        // Flag the contact for filtering at the next time step (where either\n        // body is awake).\n        edge.contact.flagForFiltering();\n      }\n\n      edge = edge.next;\n    }\n  }\n\n  this.publish('remove-joint', joint);\n}\n\nvar s_step = new Solver.TimeStep(); // reuse\n\n/**\n * Take a time step. This performs collision detection, integration, and\n * constraint solution.\n *\n * Broad-phase, narrow-phase, solve and solve time of impacts.\n *\n * @param {float} timeStep Time step, this should not vary.\n * @param {int} velocityIterations\n * @param {int} positionIterations\n */\nWorld.prototype.step = function(timeStep, velocityIterations, positionIterations) {\n\n  if ((velocityIterations | 0) !== velocityIterations) {\n    // TODO: remove this in future\n    velocityIterations = 0;\n  }\n\n  velocityIterations = velocityIterations || this.m_velocityIterations;\n  positionIterations = positionIterations || this.m_positionIterations;\n\n  // TODO: move this to testbed\n  this.m_stepCount++;\n\n  // If new fixtures were added, we need to find the new contacts.\n  if (this.m_newFixture) {\n    this.findNewContacts();\n    this.m_newFixture = false;\n  }\n\n  this.m_locked = true;\n\n  s_step.reset(timeStep);\n  s_step.velocityIterations = velocityIterations;\n  s_step.positionIterations = positionIterations;\n  s_step.warmStarting = this.m_warmStarting;\n  s_step.blockSolve = this.m_blockSolve;\n\n  // Update contacts. This is where some contacts are destroyed.\n  this.updateContacts();\n\n  // Integrate velocities, solve velocity constraints, and integrate positions.\n  if (this.m_stepComplete && timeStep > 0.0) {\n    this.m_solver.solveWorld(s_step);\n\n    // Synchronize fixtures, check for out of range bodies.\n    for (var b = this.m_bodyList; b; b = b.getNext()) {\n      // If a body was not in an island then it did not move.\n      if (b.m_islandFlag == false) {\n        continue;\n      }\n\n      if (b.isStatic()) {\n        continue;\n      }\n\n      // Update fixtures (for broad-phase).\n      b.synchronizeFixtures();\n    }\n    // Look for new contacts.\n    this.findNewContacts();\n  }\n\n  // Handle TOI events.\n  if (this.m_continuousPhysics && timeStep > 0.0) {\n    this.m_solver.solveWorldTOI(s_step);\n  }\n\n  if (this.m_clearForces) {\n    this.clearForces();\n  }\n\n  this.m_locked = false;\n}\n\n/**\n * Call this method to find new contacts.\n */\nWorld.prototype.findNewContacts = function() {\n  this.m_broadPhase.updatePairs(this.addPair);\n}\n\n/**\n * @private\n *\n * @param {FixtureProxy} proxyA\n * @param {FixtureProxy} proxyB\n */\nWorld.prototype.createContact = function(proxyA, proxyB) {\n  var fixtureA = proxyA.fixture;\n  var fixtureB = proxyB.fixture;\n\n  var indexA = proxyA.childIndex;\n  var indexB = proxyB.childIndex;\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  // Are the fixtures on the same body?\n  if (bodyA == bodyB) {\n    return;\n  }\n\n  // TODO_ERIN use a hash table to remove a potential bottleneck when both\n  // bodies have a lot of contacts.\n  // Does a contact already exist?\n  var edge = bodyB.getContactList(); // ContactEdge\n  while (edge) {\n    if (edge.other == bodyA) {\n      var fA = edge.contact.getFixtureA();\n      var fB = edge.contact.getFixtureB();\n      var iA = edge.contact.getChildIndexA();\n      var iB = edge.contact.getChildIndexB();\n\n      if (fA == fixtureA && fB == fixtureB && iA == indexA && iB == indexB) {\n        // A contact already exists.\n        return;\n      }\n\n      if (fA == fixtureB && fB == fixtureA && iA == indexB && iB == indexA) {\n        // A contact already exists.\n        return;\n      }\n    }\n\n    edge = edge.next;\n  }\n\n  if (bodyB.shouldCollide(bodyA) == false) {\n    return;\n  }\n  if (fixtureB.shouldCollide(fixtureA) == false) {\n    return;\n  }\n\n  // Call the factory.\n  var contact = Contact.create(fixtureA, indexA, fixtureB, indexB);\n  if (contact == null) {\n    return;\n  }\n\n  // Insert into the world.\n  contact.m_prev = null;\n  if (this.m_contactList != null) {\n    contact.m_next = this.m_contactList;\n    this.m_contactList.m_prev = contact;\n  }\n  this.m_contactList = contact;\n\n  ++this.m_contactCount;\n}\n\n/**\n * Removes old non-overlapping contacts, applies filters and updates contacts.\n */\nWorld.prototype.updateContacts = function() {\n  // Update awake contacts.\n  var c, next_c = this.m_contactList;\n  while (c = next_c) {\n    next_c = c.getNext()\n    var fixtureA = c.getFixtureA();\n    var fixtureB = c.getFixtureB();\n    var indexA = c.getChildIndexA();\n    var indexB = c.getChildIndexB();\n    var bodyA = fixtureA.getBody();\n    var bodyB = fixtureB.getBody();\n\n    // Is this contact flagged for filtering?\n    if (c.m_filterFlag) {\n      if (bodyB.shouldCollide(bodyA) == false) {\n        this.destroyContact(c);\n        continue;\n      }\n\n      if (fixtureB.shouldCollide(fixtureA) == false) {\n        this.destroyContact(c);\n        continue;\n      }\n\n      // Clear the filtering flag.\n      c.m_filterFlag = false;\n    }\n\n    var activeA = bodyA.isAwake() && !bodyA.isStatic();\n    var activeB = bodyB.isAwake() && !bodyB.isStatic();\n\n    // At least one body must be awake and it must be dynamic or kinematic.\n    if (activeA == false && activeB == false) {\n      continue;\n    }\n\n    var proxyIdA = fixtureA.m_proxies[indexA].proxyId;\n    var proxyIdB = fixtureB.m_proxies[indexB].proxyId;\n    var overlap = this.m_broadPhase.testOverlap(proxyIdA, proxyIdB);\n\n    // Here we destroy contacts that cease to overlap in the broad-phase.\n    if (overlap == false) {\n      this.destroyContact(c);\n      continue;\n    }\n\n    // The contact persists.\n    c.update(this);\n  }\n}\n\n/**\n * @param {Contact} contact\n */\nWorld.prototype.destroyContact = function(contact) {\n  Contact.destroy(contact, this);\n\n  // Remove from the world.\n  if (contact.m_prev) {\n    contact.m_prev.m_next = contact.m_next;\n  }\n  if (contact.m_next) {\n    contact.m_next.m_prev = contact.m_prev;\n  }\n  if (contact == this.m_contactList) {\n    this.m_contactList = contact.m_next;\n  }\n\n  --this.m_contactCount;\n}\n\nWorld.prototype._listeners = null;\n\n/**\n * Register an event listener.\n *\n * @param {string} name\n * @param {function} listener\n */\nWorld.prototype.on = function(name, listener) {\n  if (typeof name !== 'string' || typeof listener !== 'function') {\n    return this;\n  }\n  if (!this._listeners) {\n    this._listeners = {};\n  }\n  if (!this._listeners[name]) {\n    this._listeners[name] = [];\n  }\n  this._listeners[name].push(listener);\n  return this;\n};\n\n/**\n * Remove an event listener.\n *\n * @param {string} name\n * @param {function} listener\n */\nWorld.prototype.off = function(name, listener) {\n  if (typeof name !== 'string' || typeof listener !== 'function') {\n    return this;\n  }\n  var listeners = this._listeners && this._listeners[name];\n  if (!listeners || !listeners.length) {\n    return this;\n  }\n  var index = listeners.indexOf(listener);\n  if (index >= 0) {\n    listeners.splice(index, 1);\n  }\n  return this;\n};\n\nWorld.prototype.publish = function(name, arg1, arg2, arg3) {\n  var listeners = this._listeners && this._listeners[name];\n  if (!listeners || !listeners.length) {\n    return 0;\n  }\n  for (var l = 0; l < listeners.length; l++) {\n    listeners[l].call(this, arg1, arg2, arg3);\n  }\n  return listeners.length;\n};\n\n/**\n * @event World#remove-body\n * @event World#remove-joint\n * @event World#remove-fixture\n *\n * Joints and fixtures are destroyed when their associated body is destroyed.\n * Register a destruction listener so that you may nullify references to these\n * joints and shapes.\n *\n * `function(object)` is called when any joint or fixture is about to\n * be destroyed due to the destruction of one of its attached or parent bodies.\n */\n\n/**\n * @private\n * @param {Contact} contact\n */\nWorld.prototype.beginContact = function(contact) {\n  this.publish('begin-contact', contact);\n};\n\n/**\n * @event World#begin-contact\n *\n * Called when two fixtures begin to touch.\n *\n * Implement contact callbacks to get contact information. You can use these\n * results for things like sounds and game logic. You can also get contact\n * results by traversing the contact lists after the time step. However, you\n * might miss some contacts because continuous physics leads to sub-stepping.\n * Additionally you may receive multiple callbacks for the same contact in a\n * single time step. You should strive to make your callbacks efficient because\n * there may be many callbacks per time step.\n *\n * Warning: You cannot create/destroy world entities inside these callbacks.\n */\n\n/**\n * @private\n * @param {Contact} contact\n */\nWorld.prototype.endContact = function(contact) {\n  this.publish('end-contact', contact);\n};\n\n/**\n * @event World#end-contact\n *\n * Called when two fixtures cease to touch.\n *\n * Implement contact callbacks to get contact information. You can use these\n * results for things like sounds and game logic. You can also get contact\n * results by traversing the contact lists after the time step. However, you\n * might miss some contacts because continuous physics leads to sub-stepping.\n * Additionally you may receive multiple callbacks for the same contact in a\n * single time step. You should strive to make your callbacks efficient because\n * there may be many callbacks per time step.\n *\n * Warning: You cannot create/destroy world entities inside these callbacks.\n */\n\n/**\n * @private\n * @param {Contact} contact\n * @param {Manifold} oldManifold\n */\nWorld.prototype.preSolve = function(contact, oldManifold) {\n  this.publish('pre-solve', contact, oldManifold);\n};\n\n/**\n * @event World#pre-solve\n *\n * This is called after a contact is updated. This allows you to inspect a\n * contact before it goes to the solver. If you are careful, you can modify the\n * contact manifold (e.g. disable contact). A copy of the old manifold is\n * provided so that you can detect changes. Note: this is called only for awake\n * bodies. Note: this is called even when the number of contact points is zero.\n * Note: this is not called for sensors. Note: if you set the number of contact\n * points to zero, you will not get an endContact callback. However, you may get\n * a beginContact callback the next step.\n *\n * Warning: You cannot create/destroy world entities inside these callbacks.\n */\n\n/**\n * @private\n * @param {Contact} contact\n * @param {ContactImpulse} impulse\n */\nWorld.prototype.postSolve = function(contact, impulse) {\n  this.publish('post-solve', contact, impulse);\n};\n\n/**\n * @event World#post-solve\n *\n * This lets you inspect a contact after the solver is finished. This is useful\n * for inspecting impulses. Note: the contact manifold does not include time of\n * impact impulses, which can be arbitrarily large if the sub-step is small.\n * Hence the impulse is provided explicitly in a separate data structure. Note:\n * this is only called for contacts that are touching, solid, and awake.\n *\n * Warning: You cannot create/destroy world entities inside these callbacks.\n */\n\n/**\n * Register a contact filter to provide specific control over collision.\n * Otherwise the default filter is used (defaultFilter). The listener is owned\n * by you and must remain in scope.\n *\n * Moved to Fixture.\n */\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Body;\n\nvar common = require('./util/common');\nvar options = require('./util/options');\n\nvar Vec2 = require('./common/Vec2');\nvar Rot = require('./common/Rot');\nvar Math = require('./common/Math');\nvar Sweep = require('./common/Sweep');\nvar Transform = require('./common/Transform');\nvar Velocity = require('./common/Velocity');\nvar Position = require('./common/Position');\n\nvar Fixture = require('./Fixture');\nvar Shape = require('./Shape');\nvar World = require('./World');\n\nvar staticBody = Body.STATIC = 'static';\nvar kinematicBody = Body.KINEMATIC = 'kinematic';\nvar dynamicBody = Body.DYNAMIC = 'dynamic';\n\n/**\n * @typedef {Object} BodyDef\n *\n * @prop type Body types are static, kinematic, or dynamic. Note: if a dynamic\n *       body would have zero mass, the mass is set to one.\n *\n * @prop position The world position of the body. Avoid creating bodies at the\n *       origin since this can lead to many overlapping shapes.\n *\n * @prop angle The world angle of the body in radians.\n *\n * @prop linearVelocity The linear velocity of the body's origin in world\n *       co-ordinates.\n *\n * @prop angularVelocity\n *\n * @prop linearDamping Linear damping is use to reduce the linear velocity. The\n *       damping parameter can be larger than 1.0 but the damping effect becomes\n *       sensitive to the time step when the damping parameter is large.\n *\n * @prop angularDamping Angular damping is use to reduce the angular velocity.\n *       The damping parameter can be larger than 1.0 but the damping effect\n *       becomes sensitive to the time step when the damping parameter is large.\n *\n * @prop fixedRotation Should this body be prevented from rotating? Useful for\n *       characters.\n *\n * @prop bullet Is this a fast moving body that should be prevented from\n *       tunneling through other moving bodies? Note that all bodies are\n *       prevented from tunneling through kinematic and static bodies. This\n *       setting is only considered on dynamic bodies. Warning: You should use\n *       this flag sparingly since it increases processing time.\n *\n * @prop active Does this body start out active?\n *\n * @prop awake Is this body initially awake or sleeping?\n *\n * @prop allowSleep Set this flag to false if this body should never fall\n *       asleep. Note that this increases CPU usage.\n */\nvar BodyDef = {\n  type : staticBody,\n  position : Vec2.zero(),\n  angle : 0.0,\n\n  linearVelocity : Vec2.zero(),\n  angularVelocity : 0.0,\n\n  linearDamping : 0.0,\n  angularDamping : 0.0,\n\n  fixedRotation : false,\n  bullet : false,\n  gravityScale : 1.0,\n\n  allowSleep : true,\n  awake : true,\n  active : true,\n\n  userData : null\n};\n\n/**\n * @class\n * \n * A rigid body composed of one or more fixtures.\n * \n * @param {World} world\n * @param {BodyDef} def\n */\nfunction Body(world, def) {\n\n  def = options(def, BodyDef);\n\n  _ASSERT && common.assert(Vec2.isValid(def.position));\n  _ASSERT && common.assert(Vec2.isValid(def.linearVelocity));\n  _ASSERT && common.assert(Math.isFinite(def.angle));\n  _ASSERT && common.assert(Math.isFinite(def.angularVelocity));\n  _ASSERT && common.assert(Math.isFinite(def.angularDamping) && def.angularDamping >= 0.0);\n  _ASSERT && common.assert(Math.isFinite(def.linearDamping) && def.linearDamping >= 0.0);\n\n  this.m_world = world;\n\n  this.m_awakeFlag = def.awake;\n  this.m_autoSleepFlag = def.allowSleep;\n  this.m_bulletFlag = def.bullet;\n  this.m_fixedRotationFlag = def.fixedRotation;\n  this.m_activeFlag = def.active;\n\n  this.m_islandFlag = false;\n  this.m_toiFlag = false;\n\n  this.m_userData = def.userData;\n  this.m_type = def.type;\n\n  if (this.m_type == dynamicBody) {\n    this.m_mass = 1.0;\n    this.m_invMass = 1.0;\n  } else {\n    this.m_mass = 0.0;\n    this.m_invMass = 0.0;\n  }\n\n  // Rotational inertia about the center of mass.\n  this.m_I = 0.0;\n  this.m_invI = 0.0;\n\n  // the body origin transform\n  this.m_xf = Transform.identity();\n  this.m_xf.p = Vec2.clone(def.position);\n  this.m_xf.q.setAngle(def.angle);\n\n  // the swept motion for CCD\n  this.m_sweep = new Sweep();\n  this.m_sweep.setTransform(this.m_xf);\n\n  // position and velocity correction\n  this.c_velocity = new Velocity();\n  this.c_position = new Position();\n\n  this.m_force = Vec2.zero();\n  this.m_torque = 0.0;\n\n  this.m_linearVelocity = Vec2.clone(def.linearVelocity);\n  this.m_angularVelocity = def.angularVelocity;\n\n  this.m_linearDamping = def.linearDamping;\n  this.m_angularDamping = def.angularDamping;\n  this.m_gravityScale = def.gravityScale;\n\n  this.m_sleepTime = 0.0;\n\n  this.m_jointList = null;\n  this.m_contactList = null;\n  this.m_fixtureList = null;\n\n  this.m_prev = null;\n  this.m_next = null;\n\n  this.m_destroyed = false;\n}\n\nBody.prototype._serialize = function() {\n  var fixtures = [];\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    fixtures.push(f);\n  }\n  return {\n    type: this.m_type,\n    position: this.m_xf.p,\n    angle: this.m_xf.q.getAngle(),\n    linearVelocity: this.m_linearVelocity,\n    angularVelocity: this.m_angularVelocity,\n    fixtures: fixtures,\n  };\n};\n\nBody._deserialize = function(world, data) {\n  var body = new Body(world, data);\n\n  data.fixtures.forEach(function(data) {\n    var fixture = Fixture._deserialize(body, data);\n    body._addFixture(fixture);\n  });\n\n  return body;\n};\n\nBody.prototype.isWorldLocked = function() {\n  return this.m_world && this.m_world.isLocked() ? true : false;\n};\n\nBody.prototype.getWorld = function() {\n  return this.m_world;\n};\n\nBody.prototype.getNext = function() {\n  return this.m_next;\n};\n\nBody.prototype.setUserData = function(data) {\n  this.m_userData = data;\n};\n\nBody.prototype.getUserData = function() {\n  return this.m_userData;\n};\n\nBody.prototype.getFixtureList = function() {\n  return this.m_fixtureList;\n};\n\nBody.prototype.getJointList = function() {\n  return this.m_jointList;\n};\n\n/**\n * Warning: this list changes during the time step and you may miss some\n * collisions if you don't use ContactListener.\n */\nBody.prototype.getContactList = function() {\n  return this.m_contactList;\n};\n\nBody.prototype.isStatic = function() {\n  return this.m_type == staticBody;\n};\n\nBody.prototype.isDynamic = function() {\n  return this.m_type == dynamicBody;\n};\n\nBody.prototype.isKinematic = function() {\n  return this.m_type == kinematicBody;\n};\n\n/**\n * This will alter the mass and velocity.\n */\nBody.prototype.setStatic = function() {\n  this.setType(staticBody);\n  return this;\n};\n\nBody.prototype.setDynamic = function() {\n  this.setType(dynamicBody);\n  return this;\n};\n\nBody.prototype.setKinematic = function() {\n  this.setType(kinematicBody);\n  return this;\n};\n\n/**\n * @private\n */\nBody.prototype.getType = function() {\n  return this.m_type;\n};\n\n/**\n * \n * @private\n */\nBody.prototype.setType = function(type) {\n  _ASSERT && common.assert(type === staticBody || type === kinematicBody || type === dynamicBody);\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  if (this.m_type == type) {\n    return;\n  }\n\n  this.m_type = type;\n\n  this.resetMassData();\n\n  if (this.m_type == staticBody) {\n    this.m_linearVelocity.setZero();\n    this.m_angularVelocity = 0.0;\n    this.m_sweep.forward();\n    this.synchronizeFixtures();\n  }\n\n  this.setAwake(true);\n\n  this.m_force.setZero();\n  this.m_torque = 0.0;\n\n  // Delete the attached contacts.\n  var ce = this.m_contactList;\n  while (ce) {\n    var ce0 = ce;\n    ce = ce.next;\n    this.m_world.destroyContact(ce0.contact);\n  }\n  this.m_contactList = null;\n\n  // Touch the proxies so that new contacts will be created (when appropriate)\n  var broadPhase = this.m_world.m_broadPhase;\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    var proxyCount = f.m_proxyCount;\n    for (var i = 0; i < proxyCount; ++i) {\n      broadPhase.touchProxy(f.m_proxies[i].proxyId);\n    }\n  }\n};\n\nBody.prototype.isBullet = function() {\n  return this.m_bulletFlag;\n};\n\n/**\n * Should this body be treated like a bullet for continuous collision detection?\n */\nBody.prototype.setBullet = function(flag) {\n  this.m_bulletFlag = !!flag;\n};\n\nBody.prototype.isSleepingAllowed = function() {\n  return this.m_autoSleepFlag;\n};\n\nBody.prototype.setSleepingAllowed = function(flag) {\n  this.m_autoSleepFlag = !!flag;\n  if (this.m_autoSleepFlag == false) {\n    this.setAwake(true);\n  }\n};\n\nBody.prototype.isAwake = function() {\n  return this.m_awakeFlag;\n};\n\n/**\n * Set the sleep state of the body. A sleeping body has very low CPU cost.\n * \n * @param flag Set to true to wake the body, false to put it to sleep.\n */\nBody.prototype.setAwake = function(flag) {\n  if (flag) {\n    if (this.m_awakeFlag == false) {\n      this.m_awakeFlag = true;\n      this.m_sleepTime = 0.0;\n    }\n  } else {\n    this.m_awakeFlag = false;\n    this.m_sleepTime = 0.0;\n    this.m_linearVelocity.setZero();\n    this.m_angularVelocity = 0.0;\n    this.m_force.setZero();\n    this.m_torque = 0.0;\n  }\n};\n\nBody.prototype.isActive = function() {\n  return this.m_activeFlag;\n};\n\n/**\n * Set the active state of the body. An inactive body is not simulated and\n * cannot be collided with or woken up. If you pass a flag of true, all fixtures\n * will be added to the broad-phase. If you pass a flag of false, all fixtures\n * will be removed from the broad-phase and all contacts will be destroyed.\n * Fixtures and joints are otherwise unaffected.\n * \n * You may continue to create/destroy fixtures and joints on inactive bodies.\n * Fixtures on an inactive body are implicitly inactive and will not participate\n * in collisions, ray-casts, or queries. Joints connected to an inactive body\n * are implicitly inactive. An inactive body is still owned by a World object\n * and remains\n */\nBody.prototype.setActive = function(flag) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (flag == this.m_activeFlag) {\n    return;\n  }\n\n  this.m_activeFlag = !!flag;\n\n  if (this.m_activeFlag) {\n    // Create all proxies.\n    var broadPhase = this.m_world.m_broadPhase;\n    for (var f = this.m_fixtureList; f; f = f.m_next) {\n      f.createProxies(broadPhase, this.m_xf);\n    }\n    // Contacts are created the next time step.\n\n  } else {\n    // Destroy all proxies.\n    var broadPhase = this.m_world.m_broadPhase;\n    for (var f = this.m_fixtureList; f; f = f.m_next) {\n      f.destroyProxies(broadPhase);\n    }\n\n    // Destroy the attached contacts.\n    var ce = this.m_contactList;\n    while (ce) {\n      var ce0 = ce;\n      ce = ce.next;\n      this.m_world.destroyContact(ce0.contact);\n    }\n    this.m_contactList = null;\n  }\n};\n\nBody.prototype.isFixedRotation = function() {\n  return this.m_fixedRotationFlag;\n};\n\n/**\n * Set this body to have fixed rotation. This causes the mass to be reset.\n */\nBody.prototype.setFixedRotation = function(flag) {\n  if (this.m_fixedRotationFlag == flag) {\n    return;\n  }\n\n  this.m_fixedRotationFlag = !!flag;\n\n  this.m_angularVelocity = 0.0;\n\n  this.resetMassData();\n};\n\n/**\n * Get the world transform for the body's origin.\n */\nBody.prototype.getTransform = function() {\n  return this.m_xf;\n};\n\n/**\n * Set the position of the body's origin and rotation. Manipulating a body's\n * transform may cause non-physical behavior. Note: contacts are updated on the\n * next call to World.step.\n * \n * @param position The world position of the body's local origin.\n * @param angle The world rotation in radians.\n */\nBody.prototype.setTransform = function(position, angle) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  this.m_xf.set(position, angle);\n  this.m_sweep.setTransform(this.m_xf);\n\n  var broadPhase = this.m_world.m_broadPhase;\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    f.synchronize(broadPhase, this.m_xf, this.m_xf);\n  }\n};\n\nBody.prototype.synchronizeTransform = function() {\n  this.m_sweep.getTransform(this.m_xf, 1);\n};\n\n/**\n * Update fixtures in broad-phase.\n */\nBody.prototype.synchronizeFixtures = function() {\n  var xf = Transform.identity();\n\n  this.m_sweep.getTransform(xf, 0);\n\n  var broadPhase = this.m_world.m_broadPhase;\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    f.synchronize(broadPhase, xf, this.m_xf);\n  }\n};\n\n/**\n * Used in TOI.\n */\nBody.prototype.advance = function(alpha) {\n  // Advance to the new safe time. This doesn't sync the broad-phase.\n  this.m_sweep.advance(alpha);\n  this.m_sweep.c.set(this.m_sweep.c0);\n  this.m_sweep.a = this.m_sweep.a0;\n  this.m_sweep.getTransform(this.m_xf, 1);\n};\n\n/**\n * Get the world position for the body's origin.\n */\nBody.prototype.getPosition = function() {\n  return this.m_xf.p;\n};\n\nBody.prototype.setPosition = function(p) {\n  this.setTransform(p, this.m_sweep.a);\n};\n\n/**\n * Get the current world rotation angle in radians.\n */\nBody.prototype.getAngle = function() {\n  return this.m_sweep.a;\n};\n\nBody.prototype.setAngle = function(angle) {\n  this.setTransform(this.m_xf.p, angle);\n};\n\n/**\n * Get the world position of the center of mass.\n */\nBody.prototype.getWorldCenter = function() {\n  return this.m_sweep.c;\n};\n\n/**\n * Get the local position of the center of mass.\n */\nBody.prototype.getLocalCenter = function() {\n  return this.m_sweep.localCenter;\n};\n\n/**\n * Get the linear velocity of the center of mass.\n * \n * @return the linear velocity of the center of mass.\n */\nBody.prototype.getLinearVelocity = function() {\n  return this.m_linearVelocity;\n};\n\n/**\n * Get the world linear velocity of a world point attached to this body.\n * \n * @param worldPoint A point in world coordinates.\n */\nBody.prototype.getLinearVelocityFromWorldPoint = function(worldPoint) {\n  var localCenter = Vec2.sub(worldPoint, this.m_sweep.c);\n  return Vec2.add(this.m_linearVelocity, Vec2.cross(this.m_angularVelocity,\n      localCenter));\n};\n\n/**\n * Get the world velocity of a local point.\n * \n * @param localPoint A point in local coordinates.\n */\nBody.prototype.getLinearVelocityFromLocalPoint = function(localPoint) {\n  return this.getLinearVelocityFromWorldPoint(this.getWorldPoint(localPoint));\n};\n\n/**\n * Set the linear velocity of the center of mass.\n * \n * @param v The new linear velocity of the center of mass.\n */\nBody.prototype.setLinearVelocity = function(v) {\n  if (this.m_type == staticBody) {\n    return;\n  }\n  if (Vec2.dot(v, v) > 0.0) {\n    this.setAwake(true);\n  }\n  this.m_linearVelocity.set(v);\n};\n\n/**\n * Get the angular velocity.\n * \n * @returns the angular velocity in radians/second.\n */\nBody.prototype.getAngularVelocity = function() {\n  return this.m_angularVelocity;\n};\n\n/**\n * Set the angular velocity.\n * \n * @param omega The new angular velocity in radians/second.\n */\nBody.prototype.setAngularVelocity = function(w) {\n  if (this.m_type == staticBody) {\n    return;\n  }\n  if (w * w > 0.0) {\n    this.setAwake(true);\n  }\n  this.m_angularVelocity = w;\n};\n\nBody.prototype.getLinearDamping = function() {\n  return this.m_linearDamping;\n};\n\nBody.prototype.setLinearDamping = function(linearDamping) {\n  this.m_linearDamping = linearDamping;\n};\n\nBody.prototype.getAngularDamping = function() {\n  return this.m_angularDamping;\n};\n\nBody.prototype.setAngularDamping = function(angularDamping) {\n  this.m_angularDamping = angularDamping;\n};\n\nBody.prototype.getGravityScale = function() {\n  return this.m_gravityScale;\n};\n\n/**\n * Scale the gravity applied to this body.\n */\nBody.prototype.setGravityScale = function(scale) {\n  this.m_gravityScale = scale;\n};\n\n/**\n * Get the total mass of the body.\n * \n * @returns The mass, usually in kilograms (kg).\n */\nBody.prototype.getMass = function() {\n  return this.m_mass;\n};\n\n/**\n * Get the rotational inertia of the body about the local origin.\n * \n * @return the rotational inertia, usually in kg-m^2.\n */\nBody.prototype.getInertia = function() {\n  return this.m_I + this.m_mass\n      * Vec2.dot(this.m_sweep.localCenter, this.m_sweep.localCenter);\n};\n\n/**\n * @typedef {Object} MassData This holds the mass data computed for a shape.\n * \n * @prop mass The mass of the shape, usually in kilograms.\n * @prop center The position of the shape's centroid relative to the shape's\n *       origin.\n * @prop I The rotational inertia of the shape about the local origin.\n */\nfunction MassData() {\n  this.mass = 0;\n  this.center = Vec2.zero();\n  this.I = 0;\n};\n\n/**\n * Copy the mass data of the body to data.\n */\nBody.prototype.getMassData = function(data) {\n  data.mass = this.m_mass;\n  data.I = this.getInertia();\n  data.center.set(this.m_sweep.localCenter);\n};\n\n/**\n * This resets the mass properties to the sum of the mass properties of the\n * fixtures. This normally does not need to be called unless you called\n * SetMassData to override the mass and you later want to reset the mass.\n */\nBody.prototype.resetMassData = function() {\n  // Compute mass data from shapes. Each shape has its own density.\n  this.m_mass = 0.0;\n  this.m_invMass = 0.0;\n  this.m_I = 0.0;\n  this.m_invI = 0.0;\n  this.m_sweep.localCenter.setZero();\n\n  // Static and kinematic bodies have zero mass.\n  if (this.isStatic() || this.isKinematic()) {\n    this.m_sweep.c0.set(this.m_xf.p);\n    this.m_sweep.c.set(this.m_xf.p);\n    this.m_sweep.a0 = this.m_sweep.a;\n    return;\n  }\n\n  _ASSERT && common.assert(this.isDynamic());\n\n  // Accumulate mass over all fixtures.\n  var localCenter = Vec2.zero();\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    if (f.m_density == 0.0) {\n      continue;\n    }\n\n    var massData = new MassData();\n    f.getMassData(massData);\n    this.m_mass += massData.mass;\n    localCenter.addMul(massData.mass, massData.center);\n    this.m_I += massData.I;\n  }\n\n  // Compute center of mass.\n  if (this.m_mass > 0.0) {\n    this.m_invMass = 1.0 / this.m_mass;\n    localCenter.mul(this.m_invMass);\n\n  } else {\n    // Force all dynamic bodies to have a positive mass.\n    this.m_mass = 1.0;\n    this.m_invMass = 1.0;\n  }\n\n  if (this.m_I > 0.0 && this.m_fixedRotationFlag == false) {\n    // Center the inertia about the center of mass.\n    this.m_I -= this.m_mass * Vec2.dot(localCenter, localCenter);\n    _ASSERT && common.assert(this.m_I > 0.0);\n    this.m_invI = 1.0 / this.m_I;\n\n  } else {\n    this.m_I = 0.0;\n    this.m_invI = 0.0;\n  }\n\n  // Move center of mass.\n  var oldCenter = Vec2.clone(this.m_sweep.c);\n  this.m_sweep.setLocalCenter(localCenter, this.m_xf);\n\n  // Update center of mass velocity.\n  this.m_linearVelocity.add(Vec2.cross(this.m_angularVelocity, Vec2.sub(\n      this.m_sweep.c, oldCenter)));\n};\n\n/**\n * Set the mass properties to override the mass properties of the fixtures. Note\n * that this changes the center of mass position. Note that creating or\n * destroying fixtures can also alter the mass. This function has no effect if\n * the body isn't dynamic.\n * \n * @param massData The mass properties.\n */\nBody.prototype.setMassData = function(massData) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n\n  this.m_invMass = 0.0;\n  this.m_I = 0.0;\n  this.m_invI = 0.0;\n\n  this.m_mass = massData.mass;\n  if (this.m_mass <= 0.0) {\n    this.m_mass = 1.0;\n  }\n\n  this.m_invMass = 1.0 / this.m_mass;\n\n  if (massData.I > 0.0 && this.m_fixedRotationFlag == false) {\n    this.m_I = massData.I - this.m_mass\n        * Vec2.dot(massData.center, massData.center);\n    _ASSERT && common.assert(this.m_I > 0.0);\n    this.m_invI = 1.0 / this.m_I;\n  }\n\n  // Move center of mass.\n  var oldCenter = Vec2.clone(this.m_sweep.c);\n  this.m_sweep.setLocalCenter(massData.center, this.m_xf);\n\n  // Update center of mass velocity.\n  this.m_linearVelocity.add(Vec2.cross(this.m_angularVelocity, Vec2.sub(\n      this.m_sweep.c, oldCenter)));\n};\n\n/**\n * Apply a force at a world point. If the force is not applied at the center of\n * mass, it will generate a torque and affect the angular velocity. This wakes\n * up the body.\n * \n * @param force The world force vector, usually in Newtons (N).\n * @param point The world position of the point of application.\n * @param wake Also wake up the body\n */\nBody.prototype.applyForce = function(force, point, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n  // Don't accumulate a force if the body is sleeping.\n  if (this.m_awakeFlag) {\n    this.m_force.add(force);\n    this.m_torque += Vec2.cross(Vec2.sub(point, this.m_sweep.c), force);\n  }\n};\n\n/**\n * Apply a force to the center of mass. This wakes up the body.\n * \n * @param force The world force vector, usually in Newtons (N).\n * @param wake Also wake up the body\n */\nBody.prototype.applyForceToCenter = function(force, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n  // Don't accumulate a force if the body is sleeping\n  if (this.m_awakeFlag) {\n    this.m_force.add(force);\n  }\n};\n\n/**\n * Apply a torque. This affects the angular velocity without affecting the\n * linear velocity of the center of mass. This wakes up the body.\n * \n * @param torque About the z-axis (out of the screen), usually in N-m.\n * @param wake Also wake up the body\n */\nBody.prototype.applyTorque = function(torque, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n  // Don't accumulate a force if the body is sleeping\n  if (this.m_awakeFlag) {\n    this.m_torque += torque;\n  }\n};\n\n/**\n * Apply an impulse at a point. This immediately modifies the velocity. It also\n * modifies the angular velocity if the point of application is not at the\n * center of mass. This wakes up the body.\n * \n * @param impulse The world impulse vector, usually in N-seconds or kg-m/s.\n * @param point The world position of the point of application.\n * @param wake Also wake up the body\n */\nBody.prototype.applyLinearImpulse = function(impulse, point, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n\n  // Don't accumulate velocity if the body is sleeping\n  if (this.m_awakeFlag) {\n    this.m_linearVelocity.addMul(this.m_invMass, impulse);\n    this.m_angularVelocity += this.m_invI * Vec2.cross(Vec2.sub(point, this.m_sweep.c), impulse);\n  }\n};\n\n/**\n * Apply an angular impulse.\n * \n * @param impulse The angular impulse in units of kg*m*m/s\n * @param wake Also wake up the body\n */\nBody.prototype.applyAngularImpulse = function(impulse, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n  // Don't accumulate velocity if the body is sleeping\n  if (this.m_awakeFlag) {\n    this.m_angularVelocity += this.m_invI * impulse;\n  }\n};\n\n/**\n * This is used to prevent connected bodies (by joints) from colliding,\n * depending on the joint's collideConnected flag.\n */\nBody.prototype.shouldCollide = function(that) {\n  // At least one body should be dynamic.\n  if (this.m_type != dynamicBody && that.m_type != dynamicBody) {\n    return false;\n  }\n  // Does a joint prevent collision?\n  for (var jn = this.m_jointList; jn; jn = jn.next) {\n    if (jn.other == that) {\n      if (jn.joint.m_collideConnected == false) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\n\nBody.prototype._addFixture = function(fixture) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return null;\n  }\n\n  if (this.m_activeFlag) {\n    var broadPhase = this.m_world.m_broadPhase;\n    fixture.createProxies(broadPhase, this.m_xf);\n  }\n\n  fixture.m_next = this.m_fixtureList;\n  this.m_fixtureList = fixture;\n\n  // Adjust mass properties if needed.\n  if (fixture.m_density > 0.0) {\n    this.resetMassData();\n  }\n\n  // Let the world know we have a new fixture. This will cause new contacts\n  // to be created at the beginning of the next time step.\n  this.m_world.m_newFixture = true;\n\n  return fixture\n};\n\n/**\n * Creates a fixture and attach it to this body.\n * \n * If the density is non-zero, this function automatically updates the mass of\n * the body.\n * \n * Contacts are not created until the next time step.\n * \n * Warning: This function is locked during callbacks.\n\n * @param {Shape|FixtureDef} shape Shape or fixture definition.\n * @param {FixtureDef|number} fixdef Fixture definition or just density.\n */\nBody.prototype.createFixture = function(shape, fixdef) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return null;\n  }\n\n  var fixture = new Fixture(this, shape, fixdef);\n  this._addFixture(fixture);\n  return fixture\n};\n\n/**\n * Destroy a fixture. This removes the fixture from the broad-phase and destroys\n * all contacts associated with this fixture. This will automatically adjust the\n * mass of the body if the body is dynamic and the fixture has positive density.\n * All fixtures attached to a body are implicitly destroyed when the body is\n * destroyed.\n * \n * Warning: This function is locked during callbacks.\n * \n * @param fixture The fixture to be removed.\n */\nBody.prototype.destroyFixture = function(fixture) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  _ASSERT && common.assert(fixture.m_body == this);\n\n  // Remove the fixture from this body's singly linked list.\n  var found = false;\n  if (this.m_fixtureList === fixture) {\n    this.m_fixtureList = fixture.m_next;\n    found = true;\n\n  } else {\n    var node = this.m_fixtureList;\n    while (node != null) {\n      if (node.m_next === fixture) {\n        node.m_next = fixture.m_next;\n        found = true;\n        break;\n      }\n      node = node.m_next;\n    }\n  }\n\n  // You tried to remove a shape that is not attached to this body.\n  _ASSERT && common.assert(found);\n\n  // Destroy any contacts associated with the fixture.\n  var edge = this.m_contactList;\n  while (edge) {\n    var c = edge.contact;\n    edge = edge.next;\n\n    var fixtureA = c.getFixtureA();\n    var fixtureB = c.getFixtureB();\n\n    if (fixture == fixtureA || fixture == fixtureB) {\n      // This destroys the contact and removes it from\n      // this body's contact list.\n      this.m_world.destroyContact(c);\n    }\n  }\n\n  if (this.m_activeFlag) {\n    var broadPhase = this.m_world.m_broadPhase;\n    fixture.destroyProxies(broadPhase);\n  }\n\n  fixture.m_body = null;\n  fixture.m_next = null;\n\n  this.m_world.publish('remove-fixture', fixture);\n\n  // Reset the mass data.\n  this.resetMassData();\n};\n\n/**\n * Get the corresponding world point of a local point.\n */\nBody.prototype.getWorldPoint = function(localPoint) {\n  return Transform.mulVec2(this.m_xf, localPoint);\n};\n\n/**\n * Get the corresponding world vector of a local vector.\n */\nBody.prototype.getWorldVector = function(localVector) {\n  return Rot.mulVec2(this.m_xf.q, localVector);\n};\n\n/**\n * Gets the corresponding local point of a world point.\n */\nBody.prototype.getLocalPoint = function(worldPoint) {\n  return Transform.mulTVec2(this.m_xf, worldPoint);\n};\n\n/**\n * \n * Gets the corresponding local vector of a world vector.\n */\nBody.prototype.getLocalVector = function(worldVector) {\n  return Rot.mulTVec2(this.m_xf.q, worldVector);\n};\n","var _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexports.toString = function(newline) {\n  newline = typeof newline === 'string' ? newline : '\\n';\n  var string = \"\";\n  for (var name in this) {\n    if (typeof this[name] !== 'function' && typeof this[name] !== 'object') {\n      string += name + ': ' + this[name] + newline;\n    }\n  }\n  return string;\n};","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = ChainShape;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar options = require('../util/options');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\nvar EdgeShape = require('./EdgeShape');\n\nChainShape._super = Shape;\nChainShape.prototype = create(ChainShape._super.prototype);\n\nChainShape.TYPE = 'chain';\nShape.TYPES[ChainShape.TYPE] = ChainShape;\n\n/**\n * A chain shape is a free form sequence of line segments. The chain has\n * two-sided collision, so you can use inside and outside collision. Therefore,\n * you may use any winding order. Connectivity information is used to create\n * smooth collisions.\n * \n * WARNING: The chain will not collide properly if there are self-intersections.\n */\nfunction ChainShape(vertices, loop) {\n  if (!(this instanceof ChainShape)) {\n    return new ChainShape(vertices, loop);\n  }\n\n  ChainShape._super.call(this);\n\n  this.m_type = ChainShape.TYPE;\n  this.m_radius = Settings.polygonRadius;\n  this.m_vertices = [];\n  this.m_count = 0;\n  this.m_prevVertex = null;\n  this.m_nextVertex = null;\n  this.m_hasPrevVertex = false;\n  this.m_hasNextVertex = false;\n\n  this.m_isLoop = loop;\n\n  if (vertices && vertices.length) {\n    if (loop) {\n      this._createLoop(vertices);\n    } else {\n      this._createChain(vertices);\n    }\n  }\n}\n\nChainShape.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n\n    vertices: this.m_vertices,\n    isLoop: this.m_isLoop,\n    prevVertex: this.m_prevVertex,\n    nextVertex: this.m_nextVertex,\n    hasPrevVertex: this.m_hasPrevVertex,\n    hasNextVertex: this.m_hasNextVertex,\n  };\n};\n\nChainShape._deserialize = function(data) {\n  var shape = new ChainShape(data.vertices.map(Vec2._deserialize), data.isLoop);\n  return shape;\n};\n\n// ChainShape.clear = function() {\n// this.m_vertices.length = 0;\n// this.m_count = 0;\n// }\n\n/**\n * Create a loop. This automatically adjusts connectivity.\n * \n * @param vertices an array of vertices, these are copied\n * @param count the vertex count\n */\nChainShape.prototype._createLoop = function(vertices) {\n  _ASSERT && common.assert(this.m_vertices.length == 0 && this.m_count == 0);\n  _ASSERT && common.assert(vertices.length >= 3);\n  for (var i = 1; i < vertices.length; ++i) {\n    var v1 = vertices[i - 1];\n    var v2 = vertices[i];\n    // If the code crashes here, it means your vertices are too close together.\n    _ASSERT && common.assert(Vec2.distanceSquared(v1, v2) > Settings.linearSlopSquared);\n  }\n\n  this.m_vertices.length = 0;\n  this.m_count = vertices.length + 1;\n  for (var i = 0; i < vertices.length; ++i) {\n    this.m_vertices[i] = vertices[i].clone();\n  }\n  this.m_vertices[vertices.length] = vertices[0].clone();\n\n  this.m_prevVertex = this.m_vertices[this.m_count - 2];\n  this.m_nextVertex = this.m_vertices[1];\n  this.m_hasPrevVertex = true;\n  this.m_hasNextVertex = true;\n  return this;\n}\n\n/**\n * Create a chain with isolated end vertices.\n * \n * @param vertices an array of vertices, these are copied\n * @param count the vertex count\n */\nChainShape.prototype._createChain = function(vertices) {\n  _ASSERT && common.assert(this.m_vertices.length == 0 && this.m_count == 0);\n  _ASSERT && common.assert(vertices.length >= 2);\n  for (var i = 1; i < vertices.length; ++i) {\n    // If the code crashes here, it means your vertices are too close together.\n    var v1 = vertices[i - 1];\n    var v2 = vertices[i];\n    _ASSERT && common.assert(Vec2.distanceSquared(v1, v2) > Settings.linearSlopSquared);\n  }\n\n  this.m_count = vertices.length;\n  for (var i = 0; i < vertices.length; ++i) {\n    this.m_vertices[i] = vertices[i].clone();\n  }\n\n  this.m_hasPrevVertex = false;\n  this.m_hasNextVertex = false;\n  this.m_prevVertex = null;\n  this.m_nextVertex = null;\n  return this;\n}\n\n/**\n * Establish connectivity to a vertex that precedes the first vertex. Don't call\n * this for loops.\n */\nChainShape.prototype._setPrevVertex = function(prevVertex) {\n  this.m_prevVertex = prevVertex;\n  this.m_hasPrevVertex = true;\n}\n\n/**\n * Establish connectivity to a vertex that follows the last vertex. Don't call\n * this for loops.\n */\nChainShape.prototype._setNextVertex = function(nextVertex) {\n  this.m_nextVertex = nextVertex;\n  this.m_hasNextVertex = true;\n}\n\n/**\n * @deprecated\n */\nChainShape.prototype._clone = function() {\n  var clone = new ChainShape();\n  clone.createChain(this.m_vertices);\n  clone.m_type = this.m_type;\n  clone.m_radius = this.m_radius;\n  clone.m_prevVertex = this.m_prevVertex;\n  clone.m_nextVertex = this.m_nextVertex;\n  clone.m_hasPrevVertex = this.m_hasPrevVertex;\n  clone.m_hasNextVertex = this.m_hasNextVertex;\n  return clone;\n}\n\nChainShape.prototype.getChildCount = function() {\n  // edge count = vertex count - 1\n  return this.m_count - 1;\n}\n\n// Get a child edge.\nChainShape.prototype.getChildEdge = function(edge, childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_count - 1);\n  edge.m_type = EdgeShape.TYPE;\n  edge.m_radius = this.m_radius;\n\n  edge.m_vertex1 = this.m_vertices[childIndex];\n  edge.m_vertex2 = this.m_vertices[childIndex + 1];\n\n  if (childIndex > 0) {\n    edge.m_vertex0 = this.m_vertices[childIndex - 1];\n    edge.m_hasVertex0 = true;\n  } else {\n    edge.m_vertex0 = this.m_prevVertex;\n    edge.m_hasVertex0 = this.m_hasPrevVertex;\n  }\n\n  if (childIndex < this.m_count - 2) {\n    edge.m_vertex3 = this.m_vertices[childIndex + 2];\n    edge.m_hasVertex3 = true;\n  } else {\n    edge.m_vertex3 = this.m_nextVertex;\n    edge.m_hasVertex3 = this.m_hasNextVertex;\n  }\n}\n\nChainShape.prototype.getVertex = function(index) {\n  _ASSERT && common.assert(0 <= index && index <= this.m_count);\n  if (index < this.m_count) {\n    return this.m_vertices[index];\n  } else {\n    return this.m_vertices[0];\n  }\n}\n\n/**\n * This always return false.\n */\nChainShape.prototype.testPoint = function(xf, p) {\n  return false;\n}\n\nChainShape.prototype.rayCast = function(output, input, xf, childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_count);\n\n  var edgeShape = new EdgeShape(this.getVertex(childIndex), this.getVertex(childIndex + 1));\n  return edgeShape.rayCast(output, input, xf, 0);\n}\n\nChainShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_count);\n\n  var v1 = Transform.mulVec2(xf, this.getVertex(childIndex));\n  var v2 = Transform.mulVec2(xf, this.getVertex(childIndex + 1));\n\n  aabb.combinePoints(v1, v2);\n}\n\n/**\n * Chains have zero mass.\n */\nChainShape.prototype.computeMass = function(massData, density) {\n  massData.mass = 0.0;\n  massData.center = Vec2.neo();\n  massData.I = 0.0;\n}\n\nChainShape.prototype.computeDistanceProxy = function(proxy, childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_count);\n  proxy.m_buffer[0] = this.getVertex(childIndex);\n  proxy.m_buffer[1] = this.getVertex(childIndex + 1);\n  proxy.m_vertices = proxy.m_buffer;\n  proxy.m_count = 2;\n  proxy.m_radius = this.m_radius;\n};","var Class = require('./core');\nrequire('./pin');\nvar stats = require('./util/stats');\n\nClass.prototype._textures = null;\nClass.prototype._alpha = 1;\n\nClass.prototype.render = function(context) {\n  if (!this._visible) {\n    return;\n  }\n  stats.node++;\n\n  var m = this.matrix();\n  context.setTransform(m.a, m.b, m.c, m.d, m.e, m.f);\n\n  // move this elsewhere!\n  this._alpha = this._pin._alpha * (this._parent ? this._parent._alpha : 1);\n  var alpha = this._pin._textureAlpha * this._alpha;\n\n  if (context.globalAlpha != alpha) {\n    context.globalAlpha = alpha;\n  }\n\n  if (this._textures !== null) {\n    for (var i = 0, n = this._textures.length; i < n; i++) {\n      this._textures[i].draw(context);\n    }\n  }\n\n  if (context.globalAlpha != this._alpha) {\n    context.globalAlpha = this._alpha;\n  }\n\n  var child, next = this._first;\n  while (child = next) {\n    next = child._next;\n    child.render(context);\n  }\n};\n\nClass.prototype._tickBefore = null;\nClass.prototype._tickAfter = null;\nClass.prototype.MAX_ELAPSE = Infinity;\n\nClass.prototype._tick = function(elapsed, now, last) {\n  if (!this._visible) {\n    return;\n  }\n\n  if (elapsed > this.MAX_ELAPSE) {\n    elapsed = this.MAX_ELAPSE;\n  }\n\n  var ticked = false;\n\n  if (this._tickBefore !== null) {\n    for (var i = 0; i < this._tickBefore.length; i++) {\n      stats.tick++;\n      var tickFn = this._tickBefore[i];\n      ticked = tickFn.call(this, elapsed, now, last) === true || ticked;\n    }\n  }\n\n  var child, next = this._first;\n  while (child = next) {\n    next = child._next;\n    if (child._flag('_tick')) {\n      ticked = child._tick(elapsed, now, last) === true ? true : ticked;\n    }\n  }\n\n  if (this._tickAfter !== null) {\n    for (var i = 0; i < this._tickAfter.length; i++) {\n      stats.tick++;\n      var tickFn = this._tickAfter[i];\n      ticked = tickFn.call(this, elapsed, now, last) === true || ticked;\n    }\n  }\n\n  return ticked;\n};\n\nClass.prototype.tick = function(ticker, before) {\n  if (typeof ticker !== 'function') {\n    return;\n  }\n  if (before) {\n    if (this._tickBefore === null) {\n      this._tickBefore = [];\n    }\n    this._tickBefore.push(ticker);\n  } else {\n    if (this._tickAfter === null) {\n      this._tickAfter = [];\n    }\n    this._tickAfter.push(ticker);\n  }\n  this._flag('_tick', this._tickAfter !== null && this._tickAfter.length > 0\n      || this._tickBefore !== null && this._tickBefore.length > 0);\n};\n\nClass.prototype.untick = function(ticker) {\n  if (typeof ticker !== 'function') {\n    return;\n  }\n  var i;\n  if (this._tickBefore !== null && (i = this._tickBefore.indexOf(ticker)) >= 0) {\n    this._tickBefore.splice(i, 1);\n  }\n  if (this._tickAfter !== null && (i = this._tickAfter.indexOf(ticker)) >= 0) {\n    this._tickAfter.splice(i, 1);\n  }\n};\n\nClass.prototype.timeout = function(fn, time) {\n  this.setTimeout(fn, time);\n};\n\nClass.prototype.setTimeout = function(fn, time) {\n  function timer(t) {\n    if ((time -= t) < 0) {\n      this.untick(timer);\n      fn.call(this);\n    } else {\n      return true;\n    }\n  }\n  this.tick(timer);\n  return timer;\n};\n\nClass.prototype.clearTimeout = function(timer) {\n  this.untick(timer);\n};\n\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar Settings = require('../Settings');\nvar common = require('../util/common');\nvar Pool = require('../util/Pool');\nvar Vec2 = require('../common/Vec2');\nvar Math = require('../common/Math');\nvar AABB = require('./AABB');\n\nmodule.exports = DynamicTree;\n\n/**\n * A node in the dynamic tree. The client does not interact with this directly.\n * \n * @prop {AABB} aabb Enlarged AABB\n * @prop {integer} height 0: leaf, -1: free node\n */\nfunction TreeNode(id) {\n  this.id = id;\n  this.aabb = new AABB();\n  this.userData = null;\n  this.parent = null;\n  this.child1 = null;\n  this.child2 = null;\n  this.height = -1;\n\n  this.toString = function() {\n    return this.id + \": \" + this.userData;\n  }\n};\n\nTreeNode.prototype.isLeaf = function() {\n  return this.child1 == null;\n}\n/**\n * A dynamic AABB tree broad-phase, inspired by Nathanael Presson's btDbvt. A\n * dynamic tree arranges data in a binary tree to accelerate queries such as\n * volume queries and ray casts. Leafs are proxies with an AABB. In the tree we\n * expand the proxy AABB by `aabbExtension` so that the proxy AABB is bigger\n * than the client object. This allows the client object to move by small\n * amounts without triggering a tree update.\n * \n * Nodes are pooled and relocatable, so we use node indices rather than\n * pointers.\n */\nfunction DynamicTree() {\n  this.m_root = null;\n  this.m_nodes = {}\n  this.m_lastProxyId = 0;\n\n  this.m_pool = new Pool({\n    create : function() {\n      return new TreeNode();\n    }\n  });\n};\n\n/**\n * Get proxy user data.\n * \n * @return the proxy user data or 0 if the id is invalid.\n */\nDynamicTree.prototype.getUserData = function(id) {\n  var node = this.m_nodes[id];\n  _ASSERT && common.assert(!!node);\n  return node.userData;\n}\n\n/**\n * Get the fat AABB for a node id.\n * \n * @return the proxy user data or 0 if the id is invalid.\n */\nDynamicTree.prototype.getFatAABB = function(id) {\n  var node = this.m_nodes[id];\n  _ASSERT && common.assert(!!node);\n  return node.aabb;\n}\n\nDynamicTree.prototype.allocateNode = function() {\n  var node = this.m_pool.allocate();\n  node.id = ++this.m_lastProxyId;\n  node.userData = null;\n  node.parent = null;\n  node.child1 = null;\n  node.child2 = null;\n  node.height = -1;\n  this.m_nodes[node.id] = node;\n  return node;\n}\n\nDynamicTree.prototype.freeNode = function(node) {\n  this.m_pool.release(node);\n  node.height = -1;\n  delete this.m_nodes[node.id];\n}\n\n/**\n * Create a proxy in the tree as a leaf node. We return the index of the node\n * instead of a pointer so that we can grow the node pool.\n * \n * Create a proxy. Provide a tight fitting AABB and a userData pointer.\n */\nDynamicTree.prototype.createProxy = function(aabb, userData) {\n  _ASSERT && common.assert(AABB.isValid(aabb))\n\n  var node = this.allocateNode()\n\n  node.aabb.set(aabb);\n\n  // Fatten the aabb.\n  AABB.extend(node.aabb, Settings.aabbExtension);\n\n  node.userData = userData;\n  node.height = 0;\n\n  this.insertLeaf(node);\n\n  return node.id;\n}\n\n/**\n * Destroy a proxy. This asserts if the id is invalid.\n */\nDynamicTree.prototype.destroyProxy = function(id) {\n  var node = this.m_nodes[id];\n\n  _ASSERT && common.assert(!!node);\n  _ASSERT && common.assert(node.isLeaf());\n\n  this.removeLeaf(node);\n  this.freeNode(node);\n}\n\n/**\n * Move a proxy with a swepted AABB. If the proxy has moved outside of its\n * fattened AABB, then the proxy is removed from the tree and re-inserted.\n * Otherwise the function returns immediately.\n * \n * @param id\n * @param aabb\n * @param {Vec2} d Displacement\n * \n * @return true if the proxy was re-inserted.\n */\nDynamicTree.prototype.moveProxy = function(id, aabb, d) {\n  _ASSERT && common.assert(AABB.isValid(aabb));\n  _ASSERT && common.assert(!d || Vec2.isValid(d));\n\n  var node = this.m_nodes[id];\n\n  _ASSERT && common.assert(!!node);\n  _ASSERT && common.assert(node.isLeaf());\n\n  if (node.aabb.contains(aabb)) {\n    return false;\n  }\n\n  this.removeLeaf(node);\n\n  node.aabb.set(aabb)\n\n  // Extend AABB.\n  aabb = node.aabb;\n  AABB.extend(aabb, Settings.aabbExtension);\n\n  // Predict AABB displacement.\n  // var d = Vec2.mul(Settings.aabbMultiplier, displacement);\n\n  if (d.x < 0.0) {\n    aabb.lowerBound.x += d.x * Settings.aabbMultiplier;\n  } else {\n    aabb.upperBound.x += d.x * Settings.aabbMultiplier;\n  }\n\n  if (d.y < 0.0) {\n    aabb.lowerBound.y += d.y * Settings.aabbMultiplier;\n  } else {\n    aabb.upperBound.y += d.y * Settings.aabbMultiplier;\n  }\n\n  this.insertLeaf(node);\n\n  return true;\n}\n\nDynamicTree.prototype.insertLeaf = function(leaf) {\n  _ASSERT && common.assert(AABB.isValid(leaf.aabb));\n\n  if (this.m_root == null) {\n    this.m_root = leaf;\n    this.m_root.parent = null;\n    return;\n  }\n\n  // Find the best sibling for this node\n  var leafAABB = leaf.aabb;\n  var index = this.m_root;\n  while (index.isLeaf() == false) {\n    var child1 = index.child1;\n    var child2 = index.child2;\n\n    var area = index.aabb.getPerimeter();\n\n    var combinedAABB = new AABB();\n    combinedAABB.combine(index.aabb, leafAABB);\n    var combinedArea = combinedAABB.getPerimeter();\n\n    // Cost of creating a new parent for this node and the new leaf\n    var cost = 2.0 * combinedArea;\n\n    // Minimum cost of pushing the leaf further down the tree\n    var inheritanceCost = 2.0 * (combinedArea - area);\n\n    // Cost of descending into child1\n    var cost1;\n    if (child1.isLeaf()) {\n      var aabb = new AABB();\n      aabb.combine(leafAABB, child1.aabb);\n      cost1 = aabb.getPerimeter() + inheritanceCost;\n    } else {\n      var aabb = new AABB();\n      aabb.combine(leafAABB, child1.aabb);\n      var oldArea = child1.aabb.getPerimeter();\n      var newArea = aabb.getPerimeter();\n      cost1 = (newArea - oldArea) + inheritanceCost;\n    }\n\n    // Cost of descending into child2\n    var cost2;\n    if (child2.isLeaf()) {\n      var aabb = new AABB();\n      aabb.combine(leafAABB, child2.aabb);\n      cost2 = aabb.getPerimeter() + inheritanceCost;\n    } else {\n      var aabb = new AABB();\n      aabb.combine(leafAABB, child2.aabb);\n      var oldArea = child2.aabb.getPerimeter();\n      var newArea = aabb.getPerimeter();\n      cost2 = newArea - oldArea + inheritanceCost;\n    }\n\n    // Descend according to the minimum cost.\n    if (cost < cost1 && cost < cost2) {\n      break;\n    }\n\n    // Descend\n    if (cost1 < cost2) {\n      index = child1;\n    } else {\n      index = child2;\n    }\n  }\n\n  var sibling = index;\n\n  // Create a new parent.\n  var oldParent = sibling.parent;\n  var newParent = this.allocateNode();\n  newParent.parent = oldParent;\n  newParent.userData = null;\n  newParent.aabb.combine(leafAABB, sibling.aabb);\n  newParent.height = sibling.height + 1;\n\n  if (oldParent != null) {\n    // The sibling was not the root.\n    if (oldParent.child1 == sibling) {\n      oldParent.child1 = newParent;\n    } else {\n      oldParent.child2 = newParent;\n    }\n\n    newParent.child1 = sibling;\n    newParent.child2 = leaf;\n    sibling.parent = newParent;\n    leaf.parent = newParent;\n  } else {\n    // The sibling was the root.\n    newParent.child1 = sibling;\n    newParent.child2 = leaf;\n    sibling.parent = newParent;\n    leaf.parent = newParent;\n    this.m_root = newParent;\n  }\n\n  // Walk back up the tree fixing heights and AABBs\n  index = leaf.parent;\n  while (index != null) {\n    index = this.balance(index);\n\n    var child1 = index.child1;\n    var child2 = index.child2;\n\n    _ASSERT && common.assert(child1 != null);\n    _ASSERT && common.assert(child2 != null);\n\n    index.height = 1 + Math.max(child1.height, child2.height);\n    index.aabb.combine(child1.aabb, child2.aabb);\n\n    index = index.parent;\n  }\n\n  // validate();\n}\n\nDynamicTree.prototype.removeLeaf = function(leaf) {\n  if (leaf == this.m_root) {\n    this.m_root = null;\n    return;\n  }\n\n  var parent = leaf.parent;\n  var grandParent = parent.parent;\n  var sibling;\n  if (parent.child1 == leaf) {\n    sibling = parent.child2;\n  } else {\n    sibling = parent.child1;\n  }\n\n  if (grandParent != null) {\n    // Destroy parent and connect sibling to grandParent.\n    if (grandParent.child1 == parent) {\n      grandParent.child1 = sibling;\n    } else {\n      grandParent.child2 = sibling;\n    }\n    sibling.parent = grandParent;\n    this.freeNode(parent);\n\n    // Adjust ancestor bounds.\n    var index = grandParent;\n    while (index != null) {\n      index = this.balance(index);\n\n      var child1 = index.child1;\n      var child2 = index.child2;\n\n      index.aabb.combine(child1.aabb, child2.aabb);\n      index.height = 1 + Math.max(child1.height, child2.height);\n\n      index = index.parent;\n    }\n  } else {\n    this.m_root = sibling;\n    sibling.parent = null;\n    this.freeNode(parent);\n  }\n\n  // validate();\n}\n\n/**\n * Perform a left or right rotation if node A is imbalanced. Returns the new\n * root index.\n */\nDynamicTree.prototype.balance = function(iA) {\n  _ASSERT && common.assert(iA != null);\n\n  var A = iA;\n  if (A.isLeaf() || A.height < 2) {\n    return iA;\n  }\n\n  var B = A.child1;\n  var C = A.child2;\n\n  var balance = C.height - B.height;\n\n  // Rotate C up\n  if (balance > 1) {\n    var F = C.child1;\n    var G = C.child2;\n\n    // Swap A and C\n    C.child1 = A;\n    C.parent = A.parent;\n    A.parent = C;\n\n    // A's old parent should point to C\n    if (C.parent != null) {\n      if (C.parent.child1 == iA) {\n        C.parent.child1 = C;\n      } else {\n        C.parent.child2 = C;\n      }\n    } else {\n      this.m_root = C;\n    }\n\n    // Rotate\n    if (F.height > G.height) {\n      C.child2 = F;\n      A.child2 = G;\n      G.parent = A;\n      A.aabb.combine(B.aabb, G.aabb);\n      C.aabb.combine(A.aabb, F.aabb);\n\n      A.height = 1 + Math.max(B.height, G.height);\n      C.height = 1 + Math.max(A.height, F.height);\n    } else {\n      C.child2 = G;\n      A.child2 = F;\n      F.parent = A;\n      A.aabb.combine(B.aabb, F.aabb);\n      C.aabb.combine(A.aabb, G.aabb);\n\n      A.height = 1 + Math.max(B.height, F.height);\n      C.height = 1 + Math.max(A.height, G.height);\n    }\n\n    return C;\n  }\n\n  // Rotate B up\n  if (balance < -1) {\n    var D = B.child1;\n    var E = B.child2;\n\n    // Swap A and B\n    B.child1 = A;\n    B.parent = A.parent;\n    A.parent = B;\n\n    // A's old parent should point to B\n    if (B.parent != null) {\n      if (B.parent.child1 == A) {\n        B.parent.child1 = B;\n      } else {\n        B.parent.child2 = B;\n      }\n    } else {\n      this.m_root = B;\n    }\n\n    // Rotate\n    if (D.height > E.height) {\n      B.child2 = D;\n      A.child1 = E;\n      E.parent = A;\n      A.aabb.combine(C.aabb, E.aabb);\n      B.aabb.combine(A.aabb, D.aabb);\n\n      A.height = 1 + Math.max(C.height, E.height);\n      B.height = 1 + Math.max(A.height, D.height);\n    } else {\n      B.child2 = E;\n      A.child1 = D;\n      D.parent = A;\n      A.aabb.combine(C.aabb, D.aabb);\n      B.aabb.combine(A.aabb, E.aabb);\n\n      A.height = 1 + Math.max(C.height, D.height);\n      B.height = 1 + Math.max(A.height, E.height);\n    }\n\n    return B;\n  }\n\n  return A;\n}\n\n/**\n * Compute the height of the binary tree in O(N) time. Should not be called\n * often.\n */\nDynamicTree.prototype.getHeight = function() {\n  if (this.m_root == null) {\n    return 0;\n  }\n\n  return this.m_root.height;\n}\n\n/**\n * Get the ratio of the sum of the node areas to the root area.\n */\nDynamicTree.prototype.getAreaRatio = function() {\n  if (this.m_root == null) {\n    return 0.0;\n  }\n\n  var root = this.m_root;\n  var rootArea = root.aabb.getPerimeter();\n\n  var totalArea = 0.0;\n  var node, it = iteratorPool.allocate().preorder();\n  while (node = it.next()) {\n    if (node.height < 0) {\n      // Free node in pool\n      continue;\n    }\n\n    totalArea += node.aabb.getPerimeter();\n  }\n\n  iteratorPool.release(it);\n\n  return totalArea / rootArea;\n}\n\n/**\n * Compute the height of a sub-tree.\n */\nDynamicTree.prototype.computeHeight = function(id) {\n  var node;\n  if (typeof id !== 'undefined') {\n    node = this.m_nodes[id];\n  } else {\n    node = this.m_root;\n  }\n\n  // _ASSERT && common.assert(0 <= id && id < this.m_nodeCapacity);\n\n  if (node.isLeaf()) {\n    return 0;\n  }\n\n  var height1 = ComputeHeight(node.child1);\n  var height2 = ComputeHeight(node.child2);\n  return 1 + Math.max(height1, height2);\n}\n\nDynamicTree.prototype.validateStructure = function(node) {\n  if (node == null) {\n    return;\n  }\n\n  if (node == this.m_root) {\n    _ASSERT && common.assert(node.parent == null);\n  }\n\n  var child1 = node.child1;\n  var child2 = node.child2;\n\n  if (node.isLeaf()) {\n    _ASSERT && common.assert(child1 == null);\n    _ASSERT && common.assert(child2 == null);\n    _ASSERT && common.assert(node.height == 0);\n    return;\n  }\n\n  // _ASSERT && common.assert(0 <= child1 && child1 < this.m_nodeCapacity);\n  // _ASSERT && common.assert(0 <= child2 && child2 < this.m_nodeCapacity);\n\n  _ASSERT && common.assert(child1.parent == node);\n  _ASSERT && common.assert(child2.parent == node);\n\n  this.validateStructure(child1);\n  this.validateStructure(child2);\n}\n\nDynamicTree.prototype.validateMetrics = function(node) {\n  if (node == null) {\n    return;\n  }\n\n  var child1 = node.child1;\n  var child2 = node.child2;\n\n  if (node.isLeaf()) {\n    _ASSERT && common.assert(child1 == null);\n    _ASSERT && common.assert(child2 == null);\n    _ASSERT && common.assert(node.height == 0);\n    return;\n  }\n\n  // _ASSERT && common.assert(0 <= child1 && child1 < this.m_nodeCapacity);\n  // _ASSERT && common.assert(0 <= child2 && child2 < this.m_nodeCapacity);\n\n  var height1 = this.m_nodes[child1].height;\n  var height2 = this.m_nodes[child2].height;\n  var height = 1 + Math.max(height1, height2);\n  _ASSERT && common.assert(node.height == height);\n\n  var aabb = new AABB();\n  aabb.combine(child1.aabb, child2.aabb);\n\n  _ASSERT && common.assert(AABB.areEqual(aabb, node.aabb));\n\n  this.validateMetrics(child1);\n  this.validateMetrics(child2);\n}\n\n// Validate this tree. For testing.\nDynamicTree.prototype.validate = function() {\n  ValidateStructure(this.m_root);\n  ValidateMetrics(this.m_root);\n\n  _ASSERT && common.assert(this.getHeight() == this.computeHeight());\n}\n\n/**\n * Get the maximum balance of an node in the tree. The balance is the difference\n * in height of the two children of a node.\n */\nDynamicTree.prototype.getMaxBalance = function() {\n  var maxBalance = 0;\n  var node, it = iteratorPool.allocate().preorder();\n  while (node = it.next()) {\n    if (node.height <= 1) {\n      continue;\n    }\n\n    _ASSERT && common.assert(node.isLeaf() == false);\n\n    var balance = Math.abs(node.child2.height - node.child1.height);\n    maxBalance = Math.max(maxBalance, balance);\n  }\n  iteratorPool.release(it);\n\n  return maxBalance;\n}\n\n/**\n * Build an optimal tree. Very expensive. For testing.\n */\nDynamicTree.prototype.rebuildBottomUp = function() {\n  var nodes = [];\n  var count = 0;\n\n  // Build array of leaves. Free the rest.\n  var node, it = iteratorPool.allocate().preorder();\n  while (node = it.next()) {\n    if (node.height < 0) {\n      // free node in pool\n      continue;\n    }\n\n    if (node.isLeaf()) {\n      node.parent = null;\n      nodes[count] = node;\n      ++count;\n    } else {\n      this.freeNode(node);\n    }\n  }\n  iteratorPool.release(it);\n\n  while (count > 1) {\n    var minCost = Infinity;\n    var iMin = -1, jMin = -1;\n    for (var i = 0; i < count; ++i) {\n      var aabbi = nodes[i].aabb;\n      for (var j = i + 1; j < count; ++j) {\n        var aabbj = nodes[j].aabb;\n        var b = new AABB();\n        b.combine(aabbi, aabbj);\n        var cost = b.getPerimeter();\n        if (cost < minCost) {\n          iMin = i;\n          jMin = j;\n          minCost = cost;\n        }\n      }\n    }\n\n    var child1 = nodes[iMin];\n    var child2 = nodes[jMin];\n\n    var parent = this.allocateNode();\n    parent.child1 = child1;\n    parent.child2 = child2;\n    parent.height = 1 + Math.max(child1.height, child2.height);\n    parent.aabb.combine(child1.aabb, child2.aabb);\n    parent.parent = null;\n\n    child1.parent = parent;\n    child2.parent = parent;\n\n    nodes[jMin] = nodes[count - 1];\n    nodes[iMin] = parent;\n    --count;\n  }\n\n  this.m_root = nodes[0];\n\n  this.validate();\n}\n\n/**\n * Shift the world origin. Useful for large worlds. The shift formula is:\n * position -= newOrigin\n * \n * @param newOrigin The new origin with respect to the old origin\n */\nDynamicTree.prototype.shiftOrigin = function(newOrigin) {\n  // Build array of leaves. Free the rest.\n  var node, it = iteratorPool.allocate().preorder();\n  while (node = it.next()) {\n    var aabb = node.aabb;\n    aabb.lowerBound.x -= newOrigin.x;\n    aabb.lowerBound.y -= newOrigin.y;\n    aabb.upperBound.x -= newOrigin.x;\n    aabb.upperBound.y -= newOrigin.y;\n  }\n  iteratorPool.release(it);\n}\n\n/**\n * @function {DynamicTree~queryCallback}\n * \n * @param id Node id.\n */\n\n/**\n * Query an AABB for overlapping proxies. The callback class is called for each\n * proxy that overlaps the supplied AABB.\n * \n * @param {DynamicTree~queryCallback} queryCallback\n */\nDynamicTree.prototype.query = function(aabb, queryCallback) {\n  _ASSERT && common.assert(typeof queryCallback === 'function')\n  var stack = stackPool.allocate();\n\n  stack.push(this.m_root);\n  while (stack.length > 0) {\n    var node = stack.pop();\n    if (node == null) {\n      continue;\n    }\n\n    if (AABB.testOverlap(node.aabb, aabb)) {\n      if (node.isLeaf()) {\n        var proceed = queryCallback(node.id);\n        if (proceed == false) {\n          return;\n        }\n      } else {\n        stack.push(node.child1);\n        stack.push(node.child2);\n      }\n    }\n  }\n\n  stackPool.release(stack);\n}\n\n/**\n * Ray-cast against the proxies in the tree. This relies on the callback to\n * perform a exact ray-cast in the case were the proxy contains a shape. The\n * callback also performs the any collision filtering. This has performance\n * roughly equal to k * log(n), where k is the number of collisions and n is the\n * number of proxies in the tree.\n * \n * @param input The ray-cast input data. The ray extends from p1 to p1 +\n *          maxFraction * (p2 - p1).\n * @param rayCastCallback A function that is called for each proxy that is hit by\n *          the ray.\n */\nDynamicTree.prototype.rayCast = function(input, rayCastCallback) { // TODO GC\n  _ASSERT && common.assert(typeof rayCastCallback === 'function')\n  var p1 = input.p1;\n  var p2 = input.p2;\n  var r = Vec2.sub(p2, p1);\n  _ASSERT && common.assert(r.lengthSquared() > 0.0);\n  r.normalize();\n\n  // v is perpendicular to the segment.\n  var v = Vec2.cross(1.0, r);\n  var abs_v = Vec2.abs(v);\n\n  // Separating axis for segment (Gino, p80).\n  // |dot(v, p1 - c)| > dot(|v|, h)\n\n  var maxFraction = input.maxFraction;\n\n  // Build a bounding box for the segment.\n  var segmentAABB = new AABB();\n  var t = Vec2.combine((1 - maxFraction), p1, maxFraction, p2);\n  segmentAABB.combinePoints(p1, t);\n\n  var stack = stackPool.allocate();\n  var subInput = inputPool.allocate();\n\n  stack.push(this.m_root);\n  while (stack.length > 0) {\n    var node = stack.pop();\n    if (node == null) {\n      continue;\n    }\n\n    if (AABB.testOverlap(node.aabb, segmentAABB) == false) {\n      continue;\n    }\n\n    // Separating axis for segment (Gino, p80).\n    // |dot(v, p1 - c)| > dot(|v|, h)\n    var c = node.aabb.getCenter();\n    var h = node.aabb.getExtents();\n    var separation = Math.abs(Vec2.dot(v, Vec2.sub(p1, c)))\n        - Vec2.dot(abs_v, h);\n    if (separation > 0.0) {\n      continue;\n    }\n\n    if (node.isLeaf()) {\n      subInput.p1 = Vec2.clone(input.p1);\n      subInput.p2 = Vec2.clone(input.p2);\n      subInput.maxFraction = maxFraction;\n\n      var value = rayCastCallback(subInput, node.id);\n\n      if (value == 0.0) {\n        // The client has terminated the ray cast.\n        return;\n      }\n\n      if (value > 0.0) {\n        // update segment bounding box.\n        maxFraction = value;\n        t = Vec2.combine((1 - maxFraction), p1, maxFraction, p2);\n        segmentAABB.combinePoints(p1, t);\n      }\n    } else {\n      stack.push(node.child1);\n      stack.push(node.child2);\n    }\n  }\n\n  stackPool.release(stack);\n  inputPool.release(subInput);\n}\n\nvar inputPool = new Pool({\n  create : function() {\n    return {};\n  },\n  release : function(stack) {\n  }\n});\n\nvar stackPool = new Pool({\n  create : function() {\n    return [];\n  },\n  release : function(stack) {\n    stack.length = 0;\n  }\n});\n\nvar iteratorPool = new Pool({\n  create : function() {\n    return new Iterator();\n  },\n  release : function(iterator) {\n    iterator.close();\n  }\n});\n\nfunction Iterator() {\n  var parents = [];\n  var states = [];\n  return {\n    preorder : function(root) {\n      parents.length = 0;\n      parents.push(root);\n      states.length = 0;\n      states.push(0);\n      return this;\n    },\n    next : function() {\n      while (parents.length > 0) {\n        var i = parents.length - 1;\n        var node = parents[i];\n        if (states[i] === 0) {\n          states[i] = 1;\n          return node;\n        }\n        if (states[i] === 1) {\n          states[i] = 2;\n          if (node.child1) {\n            parents.push(node.child1);\n            states.push(1);\n            return node.child1;\n          }\n        }\n        if (states[i] === 2) {\n          states[i] = 3;\n          if (node.child2) {\n            parents.push(node.child2);\n            states.push(1);\n            return node.child2;\n          }\n        }\n        parents.pop();\n        states.pop();\n      }\n    },\n    close : function() {\n      parents.length = 0;\n    }\n  };\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Fixture;\n\nvar common = require('./util/common');\nvar options = require('./util/options');\n\nvar Math = require('./common/Math');\nvar Vec2 = require('./common/Vec2');\n\nvar AABB = require('./collision/AABB');\n\nvar Shape = require('./Shape');\n\n/**\n * @typedef {Object} FixtureDef\n *\n * A fixture definition is used to create a fixture. This class defines an\n * abstract fixture definition. You can reuse fixture definitions safely.\n * \n * @prop friction The friction coefficient, usually in the range [0,1]\n * @prop restitution The restitution (elasticity) usually in the range [0,1]\n * @prop density The density, usually in kg/m^2\n * @prop isSensor A sensor shape collects contact information but never\n *       generates a collision response\n * @prop userData\n * @prop filterGroupIndex Zero, positive or negative collision group. Fixtures with same positive groupIndex always collide and fixtures with same\n * negative groupIndex never collide.\n * @prop filterCategoryBits Collision category bit or bits that this fixture belongs\n *       to. If groupIndex is zero or not matching, then at least one bit in this fixture\n * categoryBits should match other fixture maskBits and vice versa.\n * @prop filterMaskBits Collision category bit or bits that this fixture accept for\n *       collision.\n */\nvar FixtureDef = {\n  userData : null,\n  friction : 0.2,\n  restitution : 0.0,\n  density : 0.0,\n  isSensor : false,\n\n  filterGroupIndex : 0,\n  filterCategoryBits : 0x0001,\n  filterMaskBits : 0xFFFF\n};\n\n/**\n * This proxy is used internally to connect shape children to the broad-phase.\n */\nfunction FixtureProxy(fixture, childIndex) {\n  this.aabb = new AABB();\n  this.fixture = fixture;\n  this.childIndex = childIndex;\n  this.proxyId;\n};\n\n/**\n * A fixture is used to attach a shape to a body for collision detection. A\n * fixture inherits its transform from its parent. Fixtures hold additional\n * non-geometric data such as friction, collision filters, etc. Fixtures are\n * created via Body.createFixture.\n * \n * @param {Body} body\n * @param {Shape|FixtureDef} shape Shape of fixture definition.\n * @param {FixtureDef|number} def Fixture definition or number.\n */\nfunction Fixture(body, shape, def) {\n  if (shape.shape) {\n    def = shape;\n    shape = shape.shape;\n\n  } else if (typeof def === 'number') {\n    def = {density : def};\n  }\n\n  def = options(def, FixtureDef);\n\n  this.m_body = body;\n\n  this.m_friction = def.friction;\n  this.m_restitution = def.restitution;\n  this.m_density = def.density;\n  this.m_isSensor = def.isSensor;\n\n  this.m_filterGroupIndex = def.filterGroupIndex;\n  this.m_filterCategoryBits = def.filterCategoryBits;\n  this.m_filterMaskBits = def.filterMaskBits;\n\n  // TODO validate shape\n  this.m_shape = shape; //.clone();\n\n  this.m_next = null;\n\n  this.m_proxies = [];\n  this.m_proxyCount = 0;\n\n  var childCount = this.m_shape.getChildCount();\n  for (var i = 0; i < childCount; ++i) {\n    this.m_proxies[i] = new FixtureProxy(this, i);\n  }\n\n  this.m_userData = def.userData;\n};\n\n/**\n * Re-setup fixture.\n * @private\n */\nFixture.prototype._reset = function() {\n  var body = this.getBody();\n  var broadPhase = body.m_world.m_broadPhase;\n  this.destroyProxies(broadPhase);\n  if (this.m_shape._reset) {\n    this.m_shape._reset();\n  }\n  var childCount = this.m_shape.getChildCount();\n  for (var i = 0; i < childCount; ++i) {\n    this.m_proxies[i] = new FixtureProxy(this, i);\n  }\n  this.createProxies(broadPhase, body.m_xf);\n  body.resetMassData();\n};\n\nFixture.prototype._serialize = function() {\n  return {\n    friction: this.m_friction,\n    restitution: this.m_restitution,\n    density: this.m_density,\n    isSensor: this.m_isSensor,\n\n    filterGroupIndex: this.m_filterGroupIndex,\n    filterCategoryBits: this.m_filterCategoryBits,\n    filterMaskBits: this.m_filterMaskBits,\n\n    shape: this.m_shape,\n\n    userData: this.m_userData,\n  };\n};\n\nFixture._deserialize = function(body, data) {\n  var shape = Shape._deserialize(data.shape);\n  var fixture = shape && new Fixture(body, shape, data);\n  return fixture;\n};\n\n/**\n * Get the type of the child shape. You can use this to down cast to the\n * concrete shape.\n */\nFixture.prototype.getType = function() {\n  return this.m_shape.getType();\n}\n\n/**\n * Get the child shape. You can modify the child shape, however you should not\n * change the number of vertices because this will crash some collision caching\n * mechanisms. Manipulating the shape may lead to non-physical behavior.\n */\nFixture.prototype.getShape = function() {\n  return this.m_shape;\n}\n/**\n * A sensor shape collects contact information but never generates a collision\n * response.\n */\nFixture.prototype.isSensor = function() {\n  return this.m_isSensor;\n}\n\n/**\n * Set if this fixture is a sensor.\n */\nFixture.prototype.setSensor = function(sensor) {\n  if (sensor != this.m_isSensor) {\n    this.m_body.setAwake(true);\n    this.m_isSensor = sensor;\n  }\n}\n\n/**\n * Get the contact filtering data.\n */\n// Fixture.prototype.getFilterData = function() {\n//   return this.m_filter;\n// }\n\n/**\n * Get the user data that was assigned in the fixture definition. Use this to\n * store your application specific data.\n */\nFixture.prototype.getUserData = function() {\n  return this.m_userData;\n}\n\n/**\n * Set the user data. Use this to store your application specific data.\n */\nFixture.prototype.setUserData = function(data) {\n  this.m_userData = data;\n}\n\n/**\n * Get the parent body of this fixture. This is null if the fixture is not\n * attached.\n */\nFixture.prototype.getBody = function() {\n  return this.m_body;\n}\n\n/**\n * Get the next fixture in the parent body's fixture list.\n */\nFixture.prototype.getNext = function() {\n  return this.m_next;\n}\n\n/**\n * Get the density of this fixture.\n */\nFixture.prototype.getDensity = function() {\n  return this.m_density;\n}\n\n/**\n * Set the density of this fixture. This will _not_ automatically adjust the\n * mass of the body. You must call Body.resetMassData to update the body's mass.\n */\nFixture.prototype.setDensity = function(density) {\n  _ASSERT && common.assert(Math.isFinite(density) && density >= 0.0);\n  this.m_density = density;\n}\n\n/**\n * Get the coefficient of friction, usually in the range [0,1].\n */\nFixture.prototype.getFriction = function() {\n  return this.m_friction;\n}\n\n/**\n * Set the coefficient of friction. This will not change the friction of\n * existing contacts.\n */\nFixture.prototype.setFriction = function(friction) {\n  this.m_friction = friction;\n}\n\n/**\n * Get the coefficient of restitution.\n */\nFixture.prototype.getRestitution = function() {\n  return this.m_restitution;\n}\n\n/**\n * Set the coefficient of restitution. This will not change the restitution of\n * existing contacts.\n */\nFixture.prototype.setRestitution = function(restitution) {\n  this.m_restitution = restitution;\n}\n\n/**\n * Test a point in world coordinates for containment in this fixture.\n */\nFixture.prototype.testPoint = function(p) {\n  return this.m_shape.testPoint(this.m_body.getTransform(), p);\n}\n\n/**\n * Cast a ray against this shape.\n */\nFixture.prototype.rayCast = function(output, input, childIndex) {\n  return this.m_shape.rayCast(output, input, this.m_body.getTransform(), childIndex);\n}\n\n/**\n * Get the mass data for this fixture. The mass data is based on the density and\n * the shape. The rotational inertia is about the shape's origin. This operation\n * may be expensive.\n */\nFixture.prototype.getMassData = function(massData) {\n  this.m_shape.computeMass(massData, this.m_density);\n}\n\n/**\n * Get the fixture's AABB. This AABB may be enlarge and/or stale. If you need a\n * more accurate AABB, compute it using the shape and the body transform.\n */\nFixture.prototype.getAABB = function(childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_proxyCount);\n  return this.m_proxies[childIndex].aabb;\n}\n\n/**\n * These support body activation/deactivation.\n */\nFixture.prototype.createProxies = function(broadPhase, xf) {\n  _ASSERT && common.assert(this.m_proxyCount == 0);\n\n  // Create proxies in the broad-phase.\n  this.m_proxyCount = this.m_shape.getChildCount();\n\n  for (var i = 0; i < this.m_proxyCount; ++i) {\n    var proxy = this.m_proxies[i];\n    this.m_shape.computeAABB(proxy.aabb, xf, i);\n    proxy.proxyId = broadPhase.createProxy(proxy.aabb, proxy);\n  }\n}\n\nFixture.prototype.destroyProxies = function(broadPhase) {\n  // Destroy proxies in the broad-phase.\n  for (var i = 0; i < this.m_proxyCount; ++i) {\n    var proxy = this.m_proxies[i];\n    broadPhase.destroyProxy(proxy.proxyId);\n    proxy.proxyId = null;\n  }\n\n  this.m_proxyCount = 0;\n}\n\n/**\n * Updates this fixture proxy in broad-phase (with combined AABB of current and\n * next transformation).\n */\nFixture.prototype.synchronize = function(broadPhase, xf1, xf2) {\n  for (var i = 0; i < this.m_proxyCount; ++i) {\n    var proxy = this.m_proxies[i];\n    // Compute an AABB that covers the swept shape (may miss some rotation\n    // effect).\n    var aabb1 = new AABB();\n    var aabb2 = new AABB();\n    this.m_shape.computeAABB(aabb1, xf1, proxy.childIndex);\n    this.m_shape.computeAABB(aabb2, xf2, proxy.childIndex);\n\n    proxy.aabb.combine(aabb1, aabb2);\n\n    var displacement = Vec2.sub(xf2.p, xf1.p);\n\n    broadPhase.moveProxy(proxy.proxyId, proxy.aabb, displacement);\n  }\n}\n\n/**\n * Set the contact filtering data. This will not update contacts until the next\n * time step when either parent body is active and awake. This automatically\n * calls refilter.\n */\nFixture.prototype.setFilterData = function(filter) {\n  this.m_filterGroupIndex = filter.groupIndex;\n  this.m_filterCategoryBits = filter.categoryBits;\n  this.m_filterMaskBits = filter.maskBits;\n  this.refilter();\n}\n\nFixture.prototype.getFilterGroupIndex = function() {\n  return this.m_filterGroupIndex;\n}\n\nFixture.prototype.getFilterCategoryBits = function() {\n  return this.m_filterCategoryBits;\n}\n\nFixture.prototype.getFilterMaskBits = function() {\n  return this.m_filterMaskBits;\n}\n\n/**\n * Call this if you want to establish collision that was previously disabled by\n * ContactFilter.\n */\nFixture.prototype.refilter = function() {\n  if (this.m_body == null) {\n    return;\n  }\n\n  // Flag associated contacts for filtering.\n  var edge = this.m_body.getContactList();\n  while (edge) {\n    var contact = edge.contact;\n    var fixtureA = contact.getFixtureA();\n    var fixtureB = contact.getFixtureB();\n    if (fixtureA == this || fixtureB == this) {\n      contact.flagForFiltering();\n    }\n\n    edge = edge.next;\n  }\n\n  var world = this.m_body.getWorld();\n\n  if (world == null) {\n    return;\n  }\n\n  // Touch each proxy so that new pairs may be created\n  var broadPhase = world.m_broadPhase;\n  for (var i = 0; i < this.m_proxyCount; ++i) {\n    broadPhase.touchProxy(this.m_proxies[i].proxyId);\n  }\n}\n\n/**\n * Implement this method to provide collision filtering, if you want finer\n * control over contact creation.\n * \n * Return true if contact calculations should be performed between these two\n * fixtures.\n * \n * Warning: for performance reasons this is only called when the AABBs begin to\n * overlap.\n * \n * @param {Fixture} fixtureA\n * @param {Fixture} fixtureB\n */\nFixture.prototype.shouldCollide = function(that) {\n\n  if (that.m_filterGroupIndex == this.m_filterGroupIndex && that.m_filterGroupIndex != 0) {\n    return that.m_filterGroupIndex > 0;\n  }\n\n  var collide = (that.m_filterMaskBits & this.m_filterCategoryBits) != 0\n      && (that.m_filterCategoryBits & this.m_filterMaskBits) != 0;\n  return collide;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = TimeOfImpact;\nmodule.exports.Input = TOIInput;\nmodule.exports.Output = TOIOutput;\n\nvar Settings = require('../Settings');\n\nvar common = require('../util/common');\nvar Timer = require('../util/Timer');\n\nvar stats = require('../common/stats');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Distance = require('./Distance');\nvar DistanceInput = Distance.Input;\nvar DistanceOutput = Distance.Output;\nvar DistanceProxy = Distance.Proxy;\nvar SimplexCache = Distance.Cache;\n\n/**\n * Input parameters for TimeOfImpact.\n * \n * @prop {DistanceProxy} proxyA\n * @prop {DistanceProxy} proxyB\n * @prop {Sweep} sweepA\n * @prop {Sweep} sweepB\n * @prop tMax defines sweep interval [0, tMax]\n */\nfunction TOIInput() {\n  this.proxyA = new DistanceProxy();\n  this.proxyB = new DistanceProxy();\n  this.sweepA = new Sweep();\n  this.sweepB = new Sweep();\n  this.tMax;\n};\n\n// TOIOutput State\nTOIOutput.e_unknown = 0;\nTOIOutput.e_failed = 1;\nTOIOutput.e_overlapped = 2;\nTOIOutput.e_touching = 3;\nTOIOutput.e_separated = 4;\n\n/**\n * Output parameters for TimeOfImpact.\n * \n * @prop state\n * @prop t\n */\nfunction TOIOutput() {\n  this.state;\n  this.t;\n};\n\nstats.toiTime = 0;\nstats.toiMaxTime = 0;\nstats.toiCalls = 0;\nstats.toiIters = 0;\nstats.toiMaxIters = 0;\nstats.toiRootIters = 0;\nstats.toiMaxRootIters = 0;\n\n/**\n * Compute the upper bound on time before two shapes penetrate. Time is\n * represented as a fraction between [0,tMax]. This uses a swept separating axis\n * and may miss some intermediate, non-tunneling collision. If you change the\n * time interval, you should call this function again.\n * \n * Note: use Distance to compute the contact point and normal at the time of\n * impact.\n * \n * CCD via the local separating axis method. This seeks progression by computing\n * the largest time at which separation is maintained.\n */\nfunction TimeOfImpact(output, input) {\n  var timer = Timer.now();\n\n  ++stats.toiCalls;\n\n  output.state = TOIOutput.e_unknown;\n  output.t = input.tMax;\n\n  var proxyA = input.proxyA; // DistanceProxy\n  var proxyB = input.proxyB; // DistanceProxy\n\n  var sweepA = input.sweepA; // Sweep\n  var sweepB = input.sweepB; // Sweep\n\n  // Large rotations can make the root finder fail, so we normalize the\n  // sweep angles.\n  sweepA.normalize();\n  sweepB.normalize();\n\n  var tMax = input.tMax;\n\n  var totalRadius = proxyA.m_radius + proxyB.m_radius;\n  var target = Math.max(Settings.linearSlop, totalRadius - 3.0 * Settings.linearSlop);\n  var tolerance = 0.25 * Settings.linearSlop;\n  _ASSERT && common.assert(target > tolerance);\n\n  var t1 = 0.0;\n  var k_maxIterations = Settings.maxTOIIterations;\n  var iter = 0;\n\n  // Prepare input for distance query.\n  var cache = new SimplexCache();\n\n  var distanceInput = new DistanceInput();\n  distanceInput.proxyA = input.proxyA;\n  distanceInput.proxyB = input.proxyB;\n  distanceInput.useRadii = false;\n\n  // The outer loop progressively attempts to compute new separating axes.\n  // This loop terminates when an axis is repeated (no progress is made).\n  for (;;) {\n    var xfA = Transform.identity();\n    var xfB = Transform.identity();\n    sweepA.getTransform(xfA, t1);\n    sweepB.getTransform(xfB, t1);\n\n    // Get the distance between shapes. We can also use the results\n    // to get a separating axis.\n    distanceInput.transformA = xfA;\n    distanceInput.transformB = xfB;\n    var distanceOutput = new DistanceOutput();\n    Distance(distanceOutput, cache, distanceInput);\n\n    // If the shapes are overlapped, we give up on continuous collision.\n    if (distanceOutput.distance <= 0.0) {\n      // Failure!\n      output.state = TOIOutput.e_overlapped;\n      output.t = 0.0;\n      break;\n    }\n\n    if (distanceOutput.distance < target + tolerance) {\n      // Victory!\n      output.state = TOIOutput.e_touching;\n      output.t = t1;\n      break;\n    }\n\n    // Initialize the separating axis.\n    var fcn = new SeparationFunction();\n    fcn.initialize(cache, proxyA, sweepA, proxyB, sweepB, t1);\n\n    if (false) {\n      // Dump the curve seen by the root finder\n      var N = 100;\n      var dx = 1.0 / N;\n      var xs = []; // [ N + 1 ];\n      var fs = []; // [ N + 1 ];\n      var x = 0.0;\n      for (var i = 0; i <= N; ++i) {\n        sweepA.getTransform(xfA, x);\n        sweepB.getTransform(xfB, x);\n        var f = fcn.evaluate(xfA, xfB) - target;\n        printf(\"%g %g\\n\", x, f);\n        xs[i] = x;\n        fs[i] = f;\n        x += dx;\n      }\n    }\n\n    // Compute the TOI on the separating axis. We do this by successively\n    // resolving the deepest point. This loop is bounded by the number of\n    // vertices.\n    var done = false;\n    var t2 = tMax;\n    var pushBackIter = 0;\n    for (;;) {\n      // Find the deepest point at t2. Store the witness point indices.\n      var s2 = fcn.findMinSeparation(t2);\n      var indexA = fcn.indexA;\n      var indexB = fcn.indexB;\n\n      // Is the final configuration separated?\n      if (s2 > target + tolerance) {\n        // Victory!\n        output.state = TOIOutput.e_separated;\n        output.t = tMax;\n        done = true;\n        break;\n      }\n\n      // Has the separation reached tolerance?\n      if (s2 > target - tolerance) {\n        // Advance the sweeps\n        t1 = t2;\n        break;\n      }\n\n      // Compute the initial separation of the witness points.\n      var s1 = fcn.evaluate(t1);\n      var indexA = fcn.indexA;\n      var indexB = fcn.indexB;\n\n      // Check for initial overlap. This might happen if the root finder\n      // runs out of iterations.\n      if (s1 < target - tolerance) {\n        output.state = TOIOutput.e_failed;\n        output.t = t1;\n        done = true;\n        break;\n      }\n\n      // Check for touching\n      if (s1 <= target + tolerance) {\n        // Victory! t1 should hold the TOI (could be 0.0).\n        output.state = TOIOutput.e_touching;\n        output.t = t1;\n        done = true;\n        break;\n      }\n\n      // Compute 1D root of: f(x) - target = 0\n      var rootIterCount = 0;\n      var a1 = t1, a2 = t2;\n      for (;;) {\n        // Use a mix of the secant rule and bisection.\n        var t;\n        if (rootIterCount & 1) {\n          // Secant rule to improve convergence.\n          t = a1 + (target - s1) * (a2 - a1) / (s2 - s1);\n        } else {\n          // Bisection to guarantee progress.\n          t = 0.5 * (a1 + a2);\n        }\n\n        ++rootIterCount;\n        ++stats.toiRootIters;\n\n        var s = fcn.evaluate(t);\n        var indexA = fcn.indexA;\n        var indexB = fcn.indexB;\n\n        if (Math.abs(s - target) < tolerance) {\n          // t2 holds a tentative value for t1\n          t2 = t;\n          break;\n        }\n\n        // Ensure we continue to bracket the root.\n        if (s > target) {\n          a1 = t;\n          s1 = s;\n        } else {\n          a2 = t;\n          s2 = s;\n        }\n\n        if (rootIterCount == 50) {\n          break;\n        }\n      }\n\n      stats.toiMaxRootIters = Math.max(stats.toiMaxRootIters, rootIterCount);\n\n      ++pushBackIter;\n\n      if (pushBackIter == Settings.maxPolygonVertices) {\n        break;\n      }\n    }\n\n    ++iter;\n    ++stats.toiIters;\n\n    if (done) {\n      break;\n    }\n\n    if (iter == k_maxIterations) {\n      // Root finder got stuck. Semi-victory.\n      output.state = TOIOutput.e_failed;\n      output.t = t1;\n      break;\n    }\n  }\n\n  stats.toiMaxIters = Math.max(stats.toiMaxIters, iter);\n\n  var time = Timer.diff(timer);\n  stats.toiMaxTime = Math.max(stats.toiMaxTime, time);\n  stats.toiTime += time;\n}\n\n// SeparationFunction Type\nvar e_points = 1;\nvar e_faceA = 2;\nvar e_faceB = 3;\n\nfunction SeparationFunction() {\n  this.m_proxyA = new DistanceProxy();\n  this.m_proxyB = new DistanceProxy();\n  this.m_sweepA;// Sweep\n  this.m_sweepB;// Sweep\n  this.m_type;\n  this.m_localPoint = Vec2.zero();\n  this.m_axis = Vec2.zero();\n};\n\n// TODO_ERIN might not need to return the separation\n\n/**\n * @param {SimplexCache} cache\n * @param {DistanceProxy} proxyA\n * @param {Sweep} sweepA\n * @param {DistanceProxy} proxyB\n * @param {Sweep} sweepB\n * @param {float} t1\n */\nSeparationFunction.prototype.initialize = function(cache, proxyA, sweepA, proxyB, sweepB, t1) {\n  this.m_proxyA = proxyA;\n  this.m_proxyB = proxyB;\n  var count = cache.count;\n  _ASSERT && common.assert(0 < count && count < 3);\n\n  this.m_sweepA = sweepA;\n  this.m_sweepB = sweepB;\n\n  var xfA = Transform.identity();\n  var xfB = Transform.identity();\n  this.m_sweepA.getTransform(xfA, t1);\n  this.m_sweepB.getTransform(xfB, t1);\n\n  if (count == 1) {\n    this.m_type = e_points;\n    var localPointA = this.m_proxyA.getVertex(cache.indexA[0]);\n    var localPointB = this.m_proxyB.getVertex(cache.indexB[0]);\n    var pointA = Transform.mulVec2(xfA, localPointA);\n    var pointB = Transform.mulVec2(xfB, localPointB);\n    this.m_axis.setCombine(1, pointB, -1, pointA);\n    var s = this.m_axis.normalize();\n    return s;\n\n  } else if (cache.indexA[0] == cache.indexA[1]) {\n    // Two points on B and one on A.\n    this.m_type = e_faceB;\n    var localPointB1 = proxyB.getVertex(cache.indexB[0]);\n    var localPointB2 = proxyB.getVertex(cache.indexB[1]);\n\n    this.m_axis = Vec2.cross(Vec2.sub(localPointB2, localPointB1), 1.0);\n    this.m_axis.normalize();\n    var normal = Rot.mulVec2(xfB.q, this.m_axis);\n\n    this.m_localPoint = Vec2.mid(localPointB1, localPointB2);\n    var pointB = Transform.mulVec2(xfB, this.m_localPoint);\n\n    var localPointA = proxyA.getVertex(cache.indexA[0]);\n    var pointA = Transform.mulVec2(xfA, localPointA);\n\n    var s = Vec2.dot(pointA, normal) - Vec2.dot(pointB, normal);\n    if (s < 0.0) {\n      this.m_axis = Vec2.neg(this.m_axis);\n      s = -s;\n    }\n    return s;\n\n  } else {\n    // Two points on A and one or two points on B.\n    this.m_type = e_faceA;\n    var localPointA1 = this.m_proxyA.getVertex(cache.indexA[0]);\n    var localPointA2 = this.m_proxyA.getVertex(cache.indexA[1]);\n\n    this.m_axis = Vec2.cross(Vec2.sub(localPointA2, localPointA1), 1.0);\n    this.m_axis.normalize();\n    var normal = Rot.mulVec2(xfA.q, this.m_axis);\n\n    this.m_localPoint = Vec2.mid(localPointA1, localPointA2);\n    var pointA = Transform.mulVec2(xfA, this.m_localPoint);\n\n    var localPointB = this.m_proxyB.getVertex(cache.indexB[0]);\n    var pointB = Transform.mulVec2(xfB, localPointB);\n\n    var s = Vec2.dot(pointB, normal) - Vec2.dot(pointA, normal);\n    if (s < 0.0) {\n      this.m_axis = Vec2.neg(this.m_axis);\n      s = -s;\n    }\n    return s;\n  }\n};\n\nSeparationFunction.prototype.compute = function(find, t) {\n  // It was findMinSeparation and evaluate\n  var xfA = Transform.identity();\n  var xfB = Transform.identity();\n  this.m_sweepA.getTransform(xfA, t);\n  this.m_sweepB.getTransform(xfB, t);\n\n  switch (this.m_type) {\n  case e_points: {\n    if (find) {\n      var axisA = Rot.mulTVec2(xfA.q, this.m_axis);\n      var axisB = Rot.mulTVec2(xfB.q, Vec2.neg(this.m_axis));\n\n      this.indexA = this.m_proxyA.getSupport(axisA);\n      this.indexB = this.m_proxyB.getSupport(axisB);\n    }\n\n    var localPointA = this.m_proxyA.getVertex(this.indexA);\n    var localPointB = this.m_proxyB.getVertex(this.indexB);\n\n    var pointA = Transform.mulVec2(xfA, localPointA);\n    var pointB = Transform.mulVec2(xfB, localPointB);\n\n    var sep = Vec2.dot(pointB, this.m_axis) - Vec2.dot(pointA, this.m_axis);\n    return sep;\n  }\n\n  case e_faceA: {\n    var normal = Rot.mulVec2(xfA.q, this.m_axis);\n    var pointA = Transform.mulVec2(xfA, this.m_localPoint);\n\n    if (find) {\n      var axisB = Rot.mulTVec2(xfB.q, Vec2.neg(normal));\n\n      this.indexA = -1;\n      this.indexB = this.m_proxyB.getSupport(axisB);\n    }\n\n    var localPointB = this.m_proxyB.getVertex(this.indexB);\n    var pointB = Transform.mulVec2(xfB, localPointB);\n\n    var sep = Vec2.dot(pointB, normal) - Vec2.dot(pointA, normal);\n    return sep;\n  }\n\n  case e_faceB: {\n    var normal = Rot.mulVec2(xfB.q, this.m_axis);\n    var pointB = Transform.mulVec2(xfB, this.m_localPoint);\n\n    if (find) {\n      var axisA = Rot.mulTVec2(xfA.q, Vec2.neg(normal));\n\n      this.indexB = -1;\n      this.indexA = this.m_proxyA.getSupport(axisA);\n    }\n\n    var localPointA = this.m_proxyA.getVertex(this.indexA);\n    var pointA = Transform.mulVec2(xfA, localPointA);\n\n    var sep = Vec2.dot(pointA, normal) - Vec2.dot(pointB, normal);\n    return sep;\n  }\n\n  default:\n    _ASSERT && common.assert(false);\n    if (find) {\n      this.indexA = -1;\n      this.indexB = -1;\n    }\n    return 0.0;\n  }\n};\n\nSeparationFunction.prototype.findMinSeparation = function(t) {\n  return this.compute(true, t);\n};\n\nSeparationFunction.prototype.evaluate = function(t) {\n  return this.compute(false, t);\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = RevoluteJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nvar inactiveLimit = 0;\nvar atLowerLimit = 1;\nvar atUpperLimit = 2;\nvar equalLimits = 3;\n\nRevoluteJoint.TYPE = 'revolute-joint';\n\nRevoluteJoint._super = Joint;\nRevoluteJoint.prototype = create(RevoluteJoint._super.prototype);\n\n/**\n * @typedef {Object} RevoluteJointDef\n *\n * Revolute joint definition. This requires defining an anchor point where the\n * bodies are joined. The definition uses local anchor points so that the\n * initial configuration can violate the constraint slightly. You also need to\n * specify the initial relative angle for joint limits. This helps when saving\n * and loading a game.\n * \n * The local anchor points are measured from the body's origin rather than the\n * center of mass because: 1. you might not know where the center of mass will\n * be. 2. if you add/remove shapes from a body and recompute the mass, the\n * joints will be broken.\n * \n * @prop {bool} enableLimit A flag to enable joint limits.\n * @prop {bool} enableMotor A flag to enable the joint motor.\n * @prop {float} lowerAngle The lower angle for the joint limit (radians).\n * @prop {float} upperAngle The upper angle for the joint limit (radians).\n * @prop {float} motorSpeed The desired motor speed. Usually in radians per\n *       second.\n * @prop {float} maxMotorTorque The maximum motor torque used to achieve the\n *       desired motor speed. Usually in N-m.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {float} referenceAngle The bodyB angle minus bodyA angle in the\n *       reference state (radians).\n */\n\nvar DEFAULTS = {\n  lowerAngle : 0.0,\n  upperAngle : 0.0,\n  maxMotorTorque : 0.0,\n  motorSpeed : 0.0,\n  enableLimit : false,\n  enableMotor : false\n};\n\n/**\n * A revolute joint constrains two bodies to share a common point while they are\n * free to rotate about the point. The relative rotation about the shared point\n * is the joint angle. You can limit the relative rotation with a joint limit\n * that specifies a lower and upper angle. You can use a motor to drive the\n * relative rotation about the shared point. A maximum motor torque is provided\n * so that infinite forces are not generated.\n *\n * @param {RevoluteJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction RevoluteJoint(def, bodyA, bodyB, anchor) {\n  if (!(this instanceof RevoluteJoint)) {\n    return new RevoluteJoint(def, bodyA, bodyB, anchor);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = RevoluteJoint.TYPE;\n\n  this.m_localAnchorA =  anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.zero();\n  this.m_localAnchorB =  anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.zero();\n  this.m_referenceAngle = Math.isFinite(def.referenceAngle) ? def.referenceAngle : bodyB.getAngle() - bodyA.getAngle();\n\n  this.m_impulse = Vec3();\n  this.m_motorImpulse = 0.0;\n\n  this.m_lowerAngle = def.lowerAngle;\n  this.m_upperAngle = def.upperAngle;\n  this.m_maxMotorTorque = def.maxMotorTorque;\n  this.m_motorSpeed = def.motorSpeed;\n  this.m_enableLimit = def.enableLimit;\n  this.m_enableMotor = def.enableMotor;\n\n  // Solver temp\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  // effective mass for point-to-point constraint.\n  this.m_mass = new Mat33();\n  // effective mass for motor/limit angular constraint.\n  this.m_motorMass; // float\n  this.m_limitState = inactiveLimit;\n\n  // Point-to-point constraint\n  // C = p2 - p1\n  // Cdot = v2 - v1\n  // = v2 + cross(w2, r2) - v1 - cross(w1, r1)\n  // J = [-I -r1_skew I r2_skew ]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n\n  // Motor constraint\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  // K = invI1 + invI2\n}\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nRevoluteJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nRevoluteJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * Get the reference angle.\n */\nRevoluteJoint.prototype.getReferenceAngle = function() {\n  return this.m_referenceAngle;\n}\n\n/**\n * Get the current joint angle in radians.\n */\nRevoluteJoint.prototype.getJointAngle = function() {\n  var bA = this.m_bodyA;\n  var bB = this.m_bodyB;\n  return bB.m_sweep.a - bA.m_sweep.a - this.m_referenceAngle;\n}\n\n/**\n * Get the current joint angle speed in radians per second.\n */\nRevoluteJoint.prototype.getJointSpeed = function() {\n  var bA = this.m_bodyA;\n  var bB = this.m_bodyB;\n  return bB.m_angularVelocity - bA.m_angularVelocity;\n}\n\n/**\n * Is the joint motor enabled?\n */\nRevoluteJoint.prototype.isMotorEnabled = function() {\n  return this.m_enableMotor;\n}\n\n/**\n * Enable/disable the joint motor.\n */\nRevoluteJoint.prototype.enableMotor = function(flag) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_enableMotor = flag;\n}\n\n/**\n * Get the current motor torque given the inverse time step. Unit is N*m.\n */\nRevoluteJoint.prototype.getMotorTorque = function(inv_dt) {\n  return inv_dt * this.m_motorImpulse;\n}\n\n/**\n * Set the motor speed in radians per second.\n */\nRevoluteJoint.prototype.setMotorSpeed = function(speed) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_motorSpeed = speed;\n}\n\n/**\n * Get the motor speed in radians per second.\n */\nRevoluteJoint.prototype.getMotorSpeed = function() {\n  return this.m_motorSpeed;\n}\n\n/**\n * Set the maximum motor torque, usually in N-m.\n */\nRevoluteJoint.prototype.setMaxMotorTorque = function(torque) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_maxMotorTorque = torque;\n}\n\n/**\n * Is the joint limit enabled?\n */\nRevoluteJoint.prototype.isLimitEnabled = function() {\n  return this.m_enableLimit;\n}\n\n/**\n * Enable/disable the joint limit.\n */\nRevoluteJoint.prototype.enableLimit = function(flag) {\n  if (flag != this.m_enableLimit) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_enableLimit = flag;\n    this.m_impulse.z = 0.0;\n  }\n}\n\n/**\n * Get the lower joint limit in radians.\n */\nRevoluteJoint.prototype.getLowerLimit = function() {\n  return this.m_lowerAngle;\n}\n\n/**\n * Get the upper joint limit in radians.\n */\nRevoluteJoint.prototype.getUpperLimit = function() {\n  return this.m_upperAngle;\n}\n\n/**\n * Set the joint limits in radians.\n */\nRevoluteJoint.prototype.setLimits = function(lower, upper) {\n  _ASSERT && common.assert(lower <= upper);\n\n  if (lower != this.m_lowerAngle || upper != this.m_upperAngle) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_impulse.z = 0.0;\n    this.m_lowerAngle = lower;\n    this.m_upperAngle = upper;\n  }\n}\n\nRevoluteJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nRevoluteJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\n/**\n * Get the reaction force given the inverse time step. Unit is N.\n */\nRevoluteJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.neo(this.m_impulse.x, this.m_impulse.y).mul(inv_dt);\n}\n\n/**\n * Get the reaction torque due to the joint limit given the inverse time step.\n * Unit is N*m.\n */\nRevoluteJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_impulse.z;\n}\n\nRevoluteJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  this.m_rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // J = [-I -r1_skew I r2_skew]\n  // [ 0 -1 0 1]\n  // r_skew = [-ry; rx]\n\n  // Matlab\n  // K = [ mA+r1y^2*iA+mB+r2y^2*iB, -r1y*iA*r1x-r2y*iB*r2x, -r1y*iA-r2y*iB]\n  // [ -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB, r1x*iA+r2x*iB]\n  // [ -r1y*iA-r2y*iB, r1x*iA+r2x*iB, iA+iB]\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var fixedRotation = (iA + iB === 0.0); // bool\n\n  this.m_mass.ex.x = mA + mB + this.m_rA.y * this.m_rA.y * iA + this.m_rB.y\n      * this.m_rB.y * iB;\n  this.m_mass.ey.x = -this.m_rA.y * this.m_rA.x * iA - this.m_rB.y\n      * this.m_rB.x * iB;\n  this.m_mass.ez.x = -this.m_rA.y * iA - this.m_rB.y * iB;\n  this.m_mass.ex.y = this.m_mass.ey.x;\n  this.m_mass.ey.y = mA + mB + this.m_rA.x * this.m_rA.x * iA + this.m_rB.x\n      * this.m_rB.x * iB;\n  this.m_mass.ez.y = this.m_rA.x * iA + this.m_rB.x * iB;\n  this.m_mass.ex.z = this.m_mass.ez.x;\n  this.m_mass.ey.z = this.m_mass.ez.y;\n  this.m_mass.ez.z = iA + iB;\n\n  this.m_motorMass = iA + iB;\n  if (this.m_motorMass > 0.0) {\n    this.m_motorMass = 1.0 / this.m_motorMass;\n  }\n\n  if (this.m_enableMotor == false || fixedRotation) {\n    this.m_motorImpulse = 0.0;\n  }\n\n  if (this.m_enableLimit && fixedRotation == false) {\n    var jointAngle = aB - aA - this.m_referenceAngle; // float\n\n    if (Math.abs(this.m_upperAngle - this.m_lowerAngle) < 2.0 * Settings.angularSlop) {\n      this.m_limitState = equalLimits;\n\n    } else if (jointAngle <= this.m_lowerAngle) {\n      if (this.m_limitState != atLowerLimit) {\n        this.m_impulse.z = 0.0;\n      }\n      this.m_limitState = atLowerLimit;\n\n    } else if (jointAngle >= this.m_upperAngle) {\n      if (this.m_limitState != atUpperLimit) {\n        this.m_impulse.z = 0.0;\n      }\n      this.m_limitState = atUpperLimit;\n\n    } else {\n      this.m_limitState = inactiveLimit;\n      this.m_impulse.z = 0.0;\n    }\n\n  } else {\n    this.m_limitState = inactiveLimit;\n  }\n\n  if (step.warmStarting) {\n    // Scale impulses to support a variable time step.\n    this.m_impulse.mul(step.dtRatio);\n    this.m_motorImpulse *= step.dtRatio;\n\n    var P = Vec2.neo(this.m_impulse.x, this.m_impulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + this.m_motorImpulse + this.m_impulse.z);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + this.m_motorImpulse + this.m_impulse.z);\n\n  } else {\n    this.m_impulse.setZero();\n    this.m_motorImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nRevoluteJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var fixedRotation = (iA + iB === 0.0); // bool\n\n  // Solve motor constraint.\n  if (this.m_enableMotor && this.m_limitState != equalLimits\n      && fixedRotation == false) {\n    var Cdot = wB - wA - this.m_motorSpeed; // float\n    var impulse = -this.m_motorMass * Cdot; // float\n    var oldImpulse = this.m_motorImpulse; // float\n    var maxImpulse = step.dt * this.m_maxMotorTorque; // float\n    this.m_motorImpulse = Math.clamp(this.m_motorImpulse + impulse,\n        -maxImpulse, maxImpulse);\n    impulse = this.m_motorImpulse - oldImpulse;\n\n    wA -= iA * impulse;\n    wB += iB * impulse;\n  }\n\n  // Solve limit constraint.\n  if (this.m_enableLimit && this.m_limitState != inactiveLimit\n      && fixedRotation == false) {\n    var Cdot1 = Vec2.zero();\n    Cdot1.addCombine(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot1.subCombine(1, vA, 1, Vec2.cross(wA, this.m_rA));\n    var Cdot2 = wB - wA; // float\n    var Cdot = Vec3(Cdot1.x, Cdot1.y, Cdot2);\n\n    var impulse = Vec3.neg(this.m_mass.solve33(Cdot)); // Vec3\n\n    if (this.m_limitState == equalLimits) {\n      this.m_impulse.add(impulse);\n\n    } else if (this.m_limitState == atLowerLimit) {\n      var newImpulse = this.m_impulse.z + impulse.z; // float\n\n      if (newImpulse < 0.0) {\n        var rhs = Vec2.combine(-1, Cdot1, this.m_impulse.z, Vec2.neo(this.m_mass.ez.x, this.m_mass.ez.y)); // Vec2\n        var reduced = this.m_mass.solve22(rhs); // Vec2\n        impulse.x = reduced.x;\n        impulse.y = reduced.y;\n        impulse.z = -this.m_impulse.z;\n        this.m_impulse.x += reduced.x;\n        this.m_impulse.y += reduced.y;\n        this.m_impulse.z = 0.0;\n\n      } else {\n        this.m_impulse.add(impulse);\n      }\n\n    } else if (this.m_limitState == atUpperLimit) {\n      var newImpulse = this.m_impulse.z + impulse.z; // float\n\n      if (newImpulse > 0.0) {\n        var rhs = Vec2.combine(-1, Cdot1, this.m_impulse.z, Vec2.neo(this.m_mass.ez.x, this.m_mass.ez.y)); // Vec2\n        var reduced = this.m_mass.solve22(rhs); // Vec2\n        impulse.x = reduced.x;\n        impulse.y = reduced.y;\n        impulse.z = -this.m_impulse.z;\n        this.m_impulse.x += reduced.x;\n        this.m_impulse.y += reduced.y;\n        this.m_impulse.z = 0.0;\n\n      } else {\n        this.m_impulse.add(impulse);\n      }\n    }\n\n    var P = Vec2.neo(impulse.x, impulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + impulse.z);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + impulse.z);\n\n  } else {\n    // Solve point-to-point constraint\n    var Cdot = Vec2.zero();\n    Cdot.addCombine(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot.subCombine(1, vA, 1, Vec2.cross(wA, this.m_rA));\n    var impulse = this.m_mass.solve22(Vec2.neg(Cdot)); // Vec2\n\n    this.m_impulse.x += impulse.x;\n    this.m_impulse.y += impulse.y;\n\n    vA.subMul(mA, impulse);\n    wA -= iA * Vec2.cross(this.m_rA, impulse);\n\n    vB.addMul(mB, impulse);\n    wB += iB * Vec2.cross(this.m_rB, impulse);\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nRevoluteJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  var angularError = 0.0; // float\n  var positionError = 0.0; // float\n\n  var fixedRotation = (this.m_invIA + this.m_invIB == 0.0); // bool\n\n  // Solve angular limit constraint.\n  if (this.m_enableLimit && this.m_limitState != inactiveLimit\n      && fixedRotation == false) {\n    var angle = aB - aA - this.m_referenceAngle; // float\n    var limitImpulse = 0.0; // float\n\n    if (this.m_limitState == equalLimits) {\n      // Prevent large angular corrections\n      var C = Math.clamp(angle - this.m_lowerAngle,\n          -Settings.maxAngularCorrection, Settings.maxAngularCorrection); // float\n      limitImpulse = -this.m_motorMass * C;\n      angularError = Math.abs(C);\n\n    } else if (this.m_limitState == atLowerLimit) {\n      var C = angle - this.m_lowerAngle; // float\n      angularError = -C;\n\n      // Prevent large angular corrections and allow some slop.\n      C = Math.clamp(C + Settings.angularSlop, -Settings.maxAngularCorrection,\n          0.0);\n      limitImpulse = -this.m_motorMass * C;\n\n    } else if (this.m_limitState == atUpperLimit) {\n      var C = angle - this.m_upperAngle; // float\n      angularError = C;\n\n      // Prevent large angular corrections and allow some slop.\n      C = Math.clamp(C - Settings.angularSlop, 0.0,\n          Settings.maxAngularCorrection);\n      limitImpulse = -this.m_motorMass * C;\n    }\n\n    aA -= this.m_invIA * limitImpulse;\n    aB += this.m_invIB * limitImpulse;\n  }\n\n  // Solve point-to-point constraint.\n  {\n    qA.set(aA);\n    qB.set(aB);\n    var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA)); // Vec2\n    var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB)); // Vec2\n\n    var C = Vec2.zero();\n    C.addCombine(1, cB, 1, rB);\n    C.subCombine(1, cA, 1, rA);\n    positionError = C.length();\n\n    var mA = this.m_invMassA;\n    var mB = this.m_invMassB; // float\n    var iA = this.m_invIA;\n    var iB = this.m_invIB; // float\n\n    var K = new Mat22();\n    K.ex.x = mA + mB + iA * rA.y * rA.y + iB * rB.y * rB.y;\n    K.ex.y = -iA * rA.x * rA.y - iB * rB.x * rB.y;\n    K.ey.x = K.ex.y;\n    K.ey.y = mA + mB + iA * rA.x * rA.x + iB * rB.x * rB.x;\n\n    var impulse = Vec2.neg(K.solve(C)); // Vec2\n\n    cA.subMul(mA, impulse);\n    aA -= iA * Vec2.cross(rA, impulse);\n\n    cB.addMul(mB, impulse);\n    aB += iB * Vec2.cross(rB, impulse);\n  }\n\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n\n  return positionError <= Settings.linearSlop\n      && angularError <= Settings.angularSlop;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = PrismaticJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nvar inactiveLimit = 0;\nvar atLowerLimit = 1;\nvar atUpperLimit = 2;\nvar equalLimits = 3;\n\nPrismaticJoint.TYPE = 'prismatic-joint';\n\nPrismaticJoint._super = Joint;\nPrismaticJoint.prototype = create(PrismaticJoint._super.prototype);\n\n/**\n * @typedef {Object} PrismaticJointDef\n *\n * Prismatic joint definition. This requires defining a line of motion using an\n * axis and an anchor point. The definition uses local anchor points and a local\n * axis so that the initial configuration can violate the constraint slightly.\n * The joint translation is zero when the local anchor points coincide in world\n * space. Using local anchors and a local axis helps when saving and loading a\n * game.\n * \n * @prop {boolean} enableLimit Enable/disable the joint limit.\n * @prop {float} lowerTranslation The lower translation limit, usually in\n *       meters.\n * @prop {float} upperTranslation The upper translation limit, usually in\n *       meters.\n * @prop {boolean} enableMotor Enable/disable the joint motor.\n * @prop {float} maxMotorForce The maximum motor torque, usually in N-m.\n * @prop {float} motorSpeed The desired motor speed in radians per second.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {Vec2} localAxisA The local translation unit axis in bodyA.\n * @prop {float} referenceAngle The constrained angle between the bodies:\n *       bodyB_angle - bodyA_angle.\n */\n\nvar DEFAULTS = {\n  enableLimit : false,\n  lowerTranslation : 0.0,\n  upperTranslation : 0.0,\n  enableMotor : false,\n  maxMotorForce : 0.0,\n  motorSpeed : 0.0\n};\n\n/**\n * A prismatic joint. This joint provides one degree of freedom: translation\n * along an axis fixed in bodyA. Relative rotation is prevented. You can use a\n * joint limit to restrict the range of motion and a joint motor to drive the\n * motion or to model joint friction.\n *\n * @param {PrismaticJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction PrismaticJoint(def, bodyA, bodyB, anchor, axis) {\n  if (!(this instanceof PrismaticJoint)) {\n    return new PrismaticJoint(def, bodyA, bodyB, anchor, axis);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = PrismaticJoint.TYPE;\n\n  this.m_localAnchorA = anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.zero();\n  this.m_localAnchorB = anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.zero();\n  this.m_localXAxisA = axis ? bodyA.getLocalVector(axis) : def.localAxisA || Vec2.neo(1.0, 0.0);\n  this.m_localXAxisA.normalize();\n  this.m_localYAxisA = Vec2.cross(1.0, this.m_localXAxisA);\n  this.m_referenceAngle = Math.isFinite(def.referenceAngle) ? def.referenceAngle : bodyB.getAngle() - bodyA.getAngle();\n\n  this.m_impulse = Vec3();\n  this.m_motorMass = 0.0;\n  this.m_motorImpulse = 0.0;\n\n  this.m_lowerTranslation = def.lowerTranslation;\n  this.m_upperTranslation = def.upperTranslation;\n  this.m_maxMotorForce = def.maxMotorForce;\n  this.m_motorSpeed = def.motorSpeed;\n  this.m_enableLimit = def.enableLimit;\n  this.m_enableMotor = def.enableMotor;\n  this.m_limitState = inactiveLimit;\n\n  this.m_axis = Vec2.zero();\n  this.m_perp = Vec2.zero();\n\n  // Solver temp\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_axis, this.m_perp; // Vec2\n  this.m_s1, this.m_s2; // float\n  this.m_a1, this.m_a2; // float\n  this.m_K = new Mat33();\n  this.m_motorMass; // float\n\n  // Linear constraint (point-to-line)\n  // d = p2 - p1 = x2 + r2 - x1 - r1\n  // C = dot(perp, d)\n  // Cdot = dot(d, cross(w1, perp)) + dot(perp, v2 + cross(w2, r2) - v1 -\n  // cross(w1, r1))\n  // = -dot(perp, v1) - dot(cross(d + r1, perp), w1) + dot(perp, v2) +\n  // dot(cross(r2, perp), v2)\n  // J = [-perp, -cross(d + r1, perp), perp, cross(r2,perp)]\n  //\n  // Angular constraint\n  // C = a2 - a1 + a_initial\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  //\n  // K = J * invM * JT\n  //\n  // J = [-a -s1 a s2]\n  // [0 -1 0 1]\n  // a = perp\n  // s1 = cross(d + r1, a) = cross(p2 - x1, a)\n  // s2 = cross(r2, a) = cross(p2 - x2, a)\n\n  // Motor/Limit linear constraint\n  // C = dot(ax1, d)\n  // Cdot = = -dot(ax1, v1) - dot(cross(d + r1, ax1), w1) + dot(ax1, v2) +\n  // dot(cross(r2, ax1), v2)\n  // J = [-ax1 -cross(d+r1,ax1) ax1 cross(r2,ax1)]\n\n  // Block Solver\n  // We develop a block solver that includes the joint limit. This makes the\n  // limit stiff (inelastic) even\n  // when the mass has poor distribution (leading to large torques about the\n  // joint anchor points).\n  //\n  // The Jacobian has 3 rows:\n  // J = [-uT -s1 uT s2] // linear\n  // [0 -1 0 1] // angular\n  // [-vT -a1 vT a2] // limit\n  //\n  // u = perp\n  // v = axis\n  // s1 = cross(d + r1, u), s2 = cross(r2, u)\n  // a1 = cross(d + r1, v), a2 = cross(r2, v)\n\n  // M * (v2 - v1) = JT * df\n  // J * v2 = bias\n  //\n  // v2 = v1 + invM * JT * df\n  // J * (v1 + invM * JT * df) = bias\n  // K * df = bias - J * v1 = -Cdot\n  // K = J * invM * JT\n  // Cdot = J * v1 - bias\n  //\n  // Now solve for f2.\n  // df = f2 - f1\n  // K * (f2 - f1) = -Cdot\n  // f2 = invK * (-Cdot) + f1\n  //\n  // Clamp accumulated limit impulse.\n  // lower: f2(3) = max(f2(3), 0)\n  // upper: f2(3) = min(f2(3), 0)\n  //\n  // Solve for correct f2(1:2)\n  // K(1:2, 1:2) * f2(1:2) = -Cdot(1:2) - K(1:2,3) * f2(3) + K(1:2,1:3) * f1\n  // = -Cdot(1:2) - K(1:2,3) * f2(3) + K(1:2,1:2) * f1(1:2) + K(1:2,3) * f1(3)\n  // K(1:2, 1:2) * f2(1:2) = -Cdot(1:2) - K(1:2,3) * (f2(3) - f1(3)) +\n  // K(1:2,1:2) * f1(1:2)\n  // f2(1:2) = invK(1:2,1:2) * (-Cdot(1:2) - K(1:2,3) * (f2(3) - f1(3))) +\n  // f1(1:2)\n  //\n  // Now compute impulse to be applied:\n  // df = f2 - f1\n}\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nPrismaticJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nPrismaticJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * The local joint axis relative to bodyA.\n */\nPrismaticJoint.prototype.getLocalAxisA = function() {\n  return this.m_localXAxisA;\n}\n\n/**\n * Get the reference angle.\n */\nPrismaticJoint.prototype.getReferenceAngle = function() {\n  return this.m_referenceAngle;\n}\n\n/**\n * Get the current joint translation, usually in meters.\n */\nPrismaticJoint.prototype.getJointTranslation = function() {\n  var pA = this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n  var pB = this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n  var d = Vec2.sub(pB, pA);\n  var axis = this.m_bodyA.getWorldVector(this.m_localXAxisA);\n\n  var translation = Vec2.dot(d, axis);\n  return translation;\n}\n\n/**\n * Get the current joint translation speed, usually in meters per second.\n */\nPrismaticJoint.prototype.getJointSpeed = function() {\n  var bA = this.m_bodyA;\n  var bB = this.m_bodyB;\n\n  var rA = Rot.mulVec2(bA.m_xf.q, Vec2.sub(this.m_localAnchorA, bA.m_sweep.localCenter)); // Vec2\n  var rB = Rot.mulVec2(bB.m_xf.q, Vec2.sub(this.m_localAnchorB, bB.m_sweep.localCenter)); // Vec2\n  var p1 = Vec2.add(bA.m_sweep.c, rA); // Vec2\n  var p2 = Vec2.add(bB.m_sweep.c, rB); // Vec2\n  var d = Vec2.sub(p2, p1); // Vec2\n  var axis = Rot.mulVec2(bA.m_xf.q, this.m_localXAxisA); // Vec2\n\n  var vA = bA.m_linearVelocity; // Vec2\n  var vB = bB.m_linearVelocity; // Vec2\n  var wA = bA.m_angularVelocity; // float\n  var wB = bB.m_angularVelocity; // float\n\n  var speed = Vec2.dot(d, Vec2.cross(wA, axis))\n      + Vec2.dot(axis, Vec2.sub(Vec2.addCross(vB, wB, rB), Vec2.addCross(vA, wA, rA))); // float\n  return speed;\n}\n\n/**\n * Is the joint limit enabled?\n */\nPrismaticJoint.prototype.isLimitEnabled = function() {\n  return this.m_enableLimit;\n}\n\n/**\n * Enable/disable the joint limit.\n */\nPrismaticJoint.prototype.enableLimit = function(flag) {\n  if (flag != this.m_enableLimit) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_enableLimit = flag;\n    this.m_impulse.z = 0.0;\n  }\n}\n\n/**\n * Get the lower joint limit, usually in meters.\n */\nPrismaticJoint.prototype.getLowerLimit = function() {\n  return this.m_lowerTranslation;\n}\n\n/**\n * Get the upper joint limit, usually in meters.\n */\nPrismaticJoint.prototype.getUpperLimit = function() {\n  return this.m_upperTranslation;\n}\n\n/**\n * Set the joint limits, usually in meters.\n */\nPrismaticJoint.prototype.setLimits = function(lower, upper) {\n  _ASSERT && common.assert(lower <= upper);\n  if (lower != this.m_lowerTranslation || upper != this.m_upperTranslation) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_lowerTranslation = lower;\n    this.m_upperTranslation = upper;\n    this.m_impulse.z = 0.0;\n  }\n}\n\n/**\n * Is the joint motor enabled?\n */\nPrismaticJoint.prototype.isMotorEnabled = function() {\n  return this.m_enableMotor;\n}\n\n/**\n * Enable/disable the joint motor.\n */\nPrismaticJoint.prototype.enableMotor = function(flag) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_enableMotor = flag;\n}\n\n/**\n * Set the motor speed, usually in meters per second.\n */\nPrismaticJoint.prototype.setMotorSpeed = function(speed) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_motorSpeed = speed;\n}\n\n/**\n * Set the maximum motor force, usually in N.\n */\nPrismaticJoint.prototype.setMaxMotorForce = function(force) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_maxMotorForce = force;\n}\n\n/**\n * Get the motor speed, usually in meters per second.\n */\nPrismaticJoint.prototype.getMotorSpeed = function() {\n  return this.m_motorSpeed;\n}\n\n/**\n * Get the current motor force given the inverse time step, usually in N.\n */\nPrismaticJoint.prototype.getMotorForce = function(inv_dt) {\n  return inv_dt * this.m_motorImpulse;\n}\n\nPrismaticJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nPrismaticJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nPrismaticJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.combine(this.m_impulse.x, this.m_perp, this.m_motorImpulse + this.m_impulse.z, this.m_axis).mul(inv_dt);\n}\n\nPrismaticJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_impulse.y;\n}\n\nPrismaticJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  // Compute the effective masses.\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n  var d = Vec2.zero();\n  d.addCombine(1, cB, 1, rB);\n  d.subCombine(1, cA, 1, rA);\n\n  var mA = this.m_invMassA, mB = this.m_invMassB;\n  var iA = this.m_invIA, iB = this.m_invIB;\n\n  // Compute motor Jacobian and effective mass.\n  {\n    this.m_axis = Rot.mulVec2(qA, this.m_localXAxisA);\n    this.m_a1 = Vec2.cross(Vec2.add(d, rA), this.m_axis);\n    this.m_a2 = Vec2.cross(rB, this.m_axis);\n\n    this.m_motorMass = mA + mB + iA * this.m_a1 * this.m_a1 + iB * this.m_a2\n        * this.m_a2;\n    if (this.m_motorMass > 0.0) {\n      this.m_motorMass = 1.0 / this.m_motorMass;\n    }\n  }\n\n  // Prismatic constraint.\n  {\n    this.m_perp = Rot.mulVec2(qA, this.m_localYAxisA);\n\n    this.m_s1 = Vec2.cross(Vec2.add(d, rA), this.m_perp);\n    this.m_s2 = Vec2.cross(rB, this.m_perp);\n\n    var s1test = Vec2.cross(rA, this.m_perp);\n\n    var k11 = mA + mB + iA * this.m_s1 * this.m_s1 + iB * this.m_s2 * this.m_s2;\n    var k12 = iA * this.m_s1 + iB * this.m_s2;\n    var k13 = iA * this.m_s1 * this.m_a1 + iB * this.m_s2 * this.m_a2;\n    var k22 = iA + iB;\n    if (k22 == 0.0) {\n      // For bodies with fixed rotation.\n      k22 = 1.0;\n    }\n    var k23 = iA * this.m_a1 + iB * this.m_a2;\n    var k33 = mA + mB + iA * this.m_a1 * this.m_a1 + iB * this.m_a2 * this.m_a2;\n\n    this.m_K.ex.set(k11, k12, k13);\n    this.m_K.ey.set(k12, k22, k23);\n    this.m_K.ez.set(k13, k23, k33);\n  }\n\n  // Compute motor and limit terms.\n  if (this.m_enableLimit) {\n\n    var jointTranslation = Vec2.dot(this.m_axis, d); // float\n    if (Math.abs(this.m_upperTranslation - this.m_lowerTranslation) < 2.0 * Settings.linearSlop) {\n      this.m_limitState = equalLimits;\n\n    } else if (jointTranslation <= this.m_lowerTranslation) {\n      if (this.m_limitState != atLowerLimit) {\n        this.m_limitState = atLowerLimit;\n        this.m_impulse.z = 0.0;\n      }\n\n    } else if (jointTranslation >= this.m_upperTranslation) {\n      if (this.m_limitState != atUpperLimit) {\n        this.m_limitState = atUpperLimit;\n        this.m_impulse.z = 0.0;\n      }\n\n    } else {\n      this.m_limitState = inactiveLimit;\n      this.m_impulse.z = 0.0;\n    }\n\n  } else {\n    this.m_limitState = inactiveLimit;\n    this.m_impulse.z = 0.0;\n  }\n\n  if (this.m_enableMotor == false) {\n    this.m_motorImpulse = 0.0;\n  }\n\n  if (step.warmStarting) {\n    // Account for variable time step.\n    this.m_impulse.mul(step.dtRatio);\n    this.m_motorImpulse *= step.dtRatio;\n\n    var P = Vec2.combine(this.m_impulse.x, this.m_perp, this.m_motorImpulse\n        + this.m_impulse.z, this.m_axis);\n    var LA = this.m_impulse.x * this.m_s1 + this.m_impulse.y\n        + (this.m_motorImpulse + this.m_impulse.z) * this.m_a1;\n    var LB = this.m_impulse.x * this.m_s2 + this.m_impulse.y\n        + (this.m_motorImpulse + this.m_impulse.z) * this.m_a2;\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  } else {\n    this.m_impulse.setZero();\n    this.m_motorImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nPrismaticJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB;\n  var iA = this.m_invIA;\n  var iB = this.m_invIB;\n\n  // Solve linear motor constraint.\n  if (this.m_enableMotor && this.m_limitState != equalLimits) {\n    var Cdot = Vec2.dot(this.m_axis, Vec2.sub(vB, vA)) + this.m_a2 * wB\n        - this.m_a1 * wA;\n    var impulse = this.m_motorMass * (this.m_motorSpeed - Cdot);\n    var oldImpulse = this.m_motorImpulse;\n    var maxImpulse = step.dt * this.m_maxMotorForce;\n    this.m_motorImpulse = Math.clamp(this.m_motorImpulse + impulse,\n        -maxImpulse, maxImpulse);\n    impulse = this.m_motorImpulse - oldImpulse;\n\n    var P = Vec2.mul(impulse, this.m_axis);\n    var LA = impulse * this.m_a1;\n    var LB = impulse * this.m_a2;\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  }\n\n  var Cdot1 = Vec2.zero();\n  Cdot1.x += Vec2.dot(this.m_perp, vB) + this.m_s2 * wB;\n  Cdot1.x -= Vec2.dot(this.m_perp, vA) + this.m_s1 * wA;\n  Cdot1.y = wB - wA;\n\n  if (this.m_enableLimit && this.m_limitState != inactiveLimit) {\n    // Solve prismatic and limit constraint in block form.\n    var Cdot2 = 0;\n    Cdot2 += Vec2.dot(this.m_axis, vB) + this.m_a2 * wB;\n    Cdot2 -= Vec2.dot(this.m_axis, vA) + this.m_a1 * wA;\n\n    var Cdot = Vec3(Cdot1.x, Cdot1.y, Cdot2);\n\n    var f1 = Vec3(this.m_impulse);\n    var df = this.m_K.solve33(Vec3.neg(Cdot)); // Vec3\n    this.m_impulse.add(df);\n\n    if (this.m_limitState == atLowerLimit) {\n      this.m_impulse.z = Math.max(this.m_impulse.z, 0.0);\n    } else if (this.m_limitState == atUpperLimit) {\n      this.m_impulse.z = Math.min(this.m_impulse.z, 0.0);\n    }\n\n    // f2(1:2) = invK(1:2,1:2) * (-Cdot(1:2) - K(1:2,3) * (f2(3) - f1(3))) +\n    // f1(1:2)\n    var b = Vec2.combine(-1, Cdot1, -(this.m_impulse.z - f1.z), Vec2.neo(this.m_K.ez.x, this.m_K.ez.y)); // Vec2\n    var f2r = Vec2.add(this.m_K.solve22(b), Vec2.neo(f1.x, f1.y)); // Vec2\n    this.m_impulse.x = f2r.x;\n    this.m_impulse.y = f2r.y;\n\n    df = Vec3.sub(this.m_impulse, f1);\n\n    var P = Vec2.combine(df.x, this.m_perp, df.z, this.m_axis); // Vec2\n    var LA = df.x * this.m_s1 + df.y + df.z * this.m_a1; // float\n    var LB = df.x * this.m_s2 + df.y + df.z * this.m_a2; // float\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  } else {\n    // Limit is inactive, just solve the prismatic constraint in block form.\n    var df = this.m_K.solve22(Vec2.neg(Cdot1)); // Vec2\n    this.m_impulse.x += df.x;\n    this.m_impulse.y += df.y;\n\n    var P = Vec2.mul(df.x, this.m_perp); // Vec2\n    var LA = df.x * this.m_s1 + df.y; // float\n    var LB = df.x * this.m_s2 + df.y; // float\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nPrismaticJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB;\n  var iA = this.m_invIA;\n  var iB = this.m_invIB;\n\n  // Compute fresh Jacobians\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA)); // Vec2\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB)); // Vec2\n  var d = Vec2.sub(Vec2.add(cB, rB), Vec2.add(cA, rA)); // Vec2\n\n  var axis = Rot.mulVec2(qA, this.m_localXAxisA); // Vec2\n  var a1 = Vec2.cross(Vec2.add(d, rA), axis); // float\n  var a2 = Vec2.cross(rB, axis); // float\n  var perp = Rot.mulVec2(qA, this.m_localYAxisA); // Vec2\n\n  var s1 = Vec2.cross(Vec2.add(d, rA), perp); // float\n  var s2 = Vec2.cross(rB, perp); // float\n\n  var impulse = Vec3();\n  var C1 = Vec2.zero(); // Vec2\n  C1.x = Vec2.dot(perp, d);\n  C1.y = aB - aA - this.m_referenceAngle;\n\n  var linearError = Math.abs(C1.x); // float\n  var angularError = Math.abs(C1.y); // float\n\n  var linearSlop = Settings.linearSlop;\n  var maxLinearCorrection = Settings.maxLinearCorrection;\n\n  var active = false; // bool\n  var C2 = 0.0; // float\n  if (this.m_enableLimit) {\n\n    var translation = Vec2.dot(axis, d); // float\n    if (Math.abs(this.m_upperTranslation - this.m_lowerTranslation) < 2.0 * linearSlop) {\n      // Prevent large angular corrections\n      C2 = Math.clamp(translation, -maxLinearCorrection, maxLinearCorrection);\n      linearError = Math.max(linearError, Math.abs(translation));\n      active = true;\n\n    } else if (translation <= this.m_lowerTranslation) {\n      // Prevent large linear corrections and allow some slop.\n      C2 = Math.clamp(translation - this.m_lowerTranslation + linearSlop,\n          -maxLinearCorrection, 0.0);\n      linearError = Math\n          .max(linearError, this.m_lowerTranslation - translation);\n      active = true;\n\n    } else if (translation >= this.m_upperTranslation) {\n      // Prevent large linear corrections and allow some slop.\n      C2 = Math.clamp(translation - this.m_upperTranslation - linearSlop, 0.0,\n          maxLinearCorrection);\n      linearError = Math\n          .max(linearError, translation - this.m_upperTranslation);\n      active = true;\n    }\n  }\n\n  if (active) {\n    var k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2; // float\n    var k12 = iA * s1 + iB * s2; // float\n    var k13 = iA * s1 * a1 + iB * s2 * a2; // float\n    var k22 = iA + iB; // float\n    if (k22 == 0.0) {\n      // For fixed rotation\n      k22 = 1.0;\n    }\n    var k23 = iA * a1 + iB * a2; // float\n    var k33 = mA + mB + iA * a1 * a1 + iB * a2 * a2; // float\n\n    var K = new Mat33()\n    K.ex.set(k11, k12, k13);\n    K.ey.set(k12, k22, k23);\n    K.ez.set(k13, k23, k33);\n\n    var C = Vec3();\n    C.x = C1.x;\n    C.y = C1.y;\n    C.z = C2;\n\n    impulse = K.solve33(Vec3.neg(C));\n  } else {\n    var k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2; // float\n    var k12 = iA * s1 + iB * s2; // float\n    var k22 = iA + iB; // float\n    if (k22 == 0.0) {\n      k22 = 1.0;\n    }\n\n    var K = new Mat22();\n    K.ex.set(k11, k12);\n    K.ey.set(k12, k22);\n\n    var impulse1 = K.solve(Vec2.neg(C1)); // Vec2\n    impulse.x = impulse1.x;\n    impulse.y = impulse1.y;\n    impulse.z = 0.0;\n  }\n\n  var P = Vec2.combine(impulse.x, perp, impulse.z, axis); // Vec2\n  var LA = impulse.x * s1 + impulse.y + impulse.z * a1; // float\n  var LB = impulse.x * s2 + impulse.y + impulse.z * a2; // float\n\n  cA.subMul(mA, P);\n  aA -= iA * LA;\n  cB.addMul(mB, P);\n  aB += iB * LB;\n\n  this.m_bodyA.c_position.c = cA;\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c = cB;\n  this.m_bodyB.c_position.a = aB;\n\n  return linearError <= Settings.linearSlop\n      && angularError <= Settings.angularSlop;\n}\n","module.exports = {};\n","module.exports = function(base) {\n  for (var i = 1; i < arguments.length; i++) {\n    var obj = arguments[i];\n    for ( var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        base[key] = obj[key];\n      }\n    }\n  }\n  return base;\n};\n","/**\n * ! is the definitive JavaScript type testing library\n * \n * @copyright 2013-2014 Enrico Marino / Jordan Harband\n * @license MIT\n */\n\nvar objProto = Object.prototype;\nvar owns = objProto.hasOwnProperty;\nvar toStr = objProto.toString;\n\nvar NON_HOST_TYPES = {\n  'boolean' : 1,\n  'number' : 1,\n  'string' : 1,\n  'undefined' : 1\n};\n\nvar hexRegex = /^[A-Fa-f0-9]+$/;\n\nvar is = module.exports = {};\n\nis.a = is.an = is.type = function(value, type) {\n  return typeof value === type;\n};\n\nis.defined = function(value) {\n  return typeof value !== 'undefined';\n};\n\nis.empty = function(value) {\n  var type = toStr.call(value);\n  var key;\n\n  if ('[object Array]' === type || '[object Arguments]' === type\n      || '[object String]' === type) {\n    return value.length === 0;\n  }\n\n  if ('[object Object]' === type) {\n    for (key in value) {\n      if (owns.call(value, key)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  return !value;\n};\n\nis.equal = function(value, other) {\n  if (value === other) {\n    return true;\n  }\n\n  var type = toStr.call(value);\n  var key;\n\n  if (type !== toStr.call(other)) {\n    return false;\n  }\n\n  if ('[object Object]' === type) {\n    for (key in value) {\n      if (!is.equal(value[key], other[key]) || !(key in other)) {\n        return false;\n      }\n    }\n    for (key in other) {\n      if (!is.equal(value[key], other[key]) || !(key in value)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  if ('[object Array]' === type) {\n    key = value.length;\n    if (key !== other.length) {\n      return false;\n    }\n    while (--key) {\n      if (!is.equal(value[key], other[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  if ('[object Function]' === type) {\n    return value.prototype === other.prototype;\n  }\n\n  if ('[object Date]' === type) {\n    return value.getTime() === other.getTime();\n  }\n\n  return false;\n};\n\nis.instance = function(value, constructor) {\n  return value instanceof constructor;\n};\n\nis.nil = function(value) {\n  return value === null;\n};\n\nis.undef = function(value) {\n  return typeof value === 'undefined';\n};\n\nis.array = function(value) {\n  return '[object Array]' === toStr.call(value);\n};\n\nis.emptyarray = function(value) {\n  return is.array(value) && value.length === 0;\n};\n\nis.arraylike = function(value) {\n  return !!value && !is.boolean(value) && owns.call(value, 'length')\n      && isFinite(value.length) && is.number(value.length) && value.length >= 0;\n};\n\nis.boolean = function(value) {\n  return '[object Boolean]' === toStr.call(value);\n};\n\nis.element = function(value) {\n  return value !== undefined && typeof HTMLElement !== 'undefined'\n      && value instanceof HTMLElement && value.nodeType === 1;\n};\n\nis.fn = function(value) {\n  return '[object Function]' === toStr.call(value);\n};\n\nis.number = function(value) {\n  return '[object Number]' === toStr.call(value);\n};\n\nis.nan = function(value) {\n  return !is.number(value) || value !== value;\n};\n\nis.object = function(value) {\n  return '[object Object]' === toStr.call(value);\n};\n\nis.hash = function(value) {\n  return is.object(value) && value.constructor === Object && !value.nodeType\n      && !value.setInterval;\n};\n\nis.regexp = function(value) {\n  return '[object RegExp]' === toStr.call(value);\n};\n\nis.string = function(value) {\n  return '[object String]' === toStr.call(value);\n};\n\nis.hex = function(value) {\n  return is.string(value) && (!value.length || hexRegex.test(value));\n};\n","exports.internal = {};\n\nexports.Serializer = require('./Serializer');\n\nexports.Math = require('./common/Math');\nexports.Vec2 = require('./common/Vec2');\nexports.Vec3 = require('./common/Vec3');\nexports.Mat22 = require('./common/Mat22');\nexports.Mat33 = require('./common/Mat33');\nexports.Transform = require('./common/Transform');\nexports.Rot = require('./common/Rot');\n\nexports.AABB = require('./collision/AABB');\n\nexports.Shape = require('./Shape');\nexports.Fixture = require('./Fixture');\nexports.Body = require('./Body');\nexports.Contact = require('./Contact');\nexports.Joint = require('./Joint');\nexports.World = require('./World');\n\nexports.Circle = require('./shape/CircleShape');\nexports.Edge = require('./shape/EdgeShape');\nexports.Polygon = require('./shape/PolygonShape');\nexports.Chain = require('./shape/ChainShape');\nexports.Box = require('./shape/BoxShape');\n\nrequire('./shape/CollideCircle');\nrequire('./shape/CollideEdgeCircle');\nexports.internal.CollidePolygons = require('./shape/CollidePolygon');\nrequire('./shape/CollideCirclePolygone');\nrequire('./shape/CollideEdgePolygon');\n\nexports.DistanceJoint = require('./joint/DistanceJoint');\nexports.FrictionJoint = require('./joint/FrictionJoint');\nexports.GearJoint = require('./joint/GearJoint');\nexports.MotorJoint = require('./joint/MotorJoint');\nexports.MouseJoint = require('./joint/MouseJoint');\nexports.PrismaticJoint = require('./joint/PrismaticJoint');\nexports.PulleyJoint = require('./joint/PulleyJoint');\nexports.RevoluteJoint = require('./joint/RevoluteJoint');\nexports.RopeJoint = require('./joint/RopeJoint');\nexports.WeldJoint = require('./joint/WeldJoint');\nexports.WheelJoint = require('./joint/WheelJoint');\n\nexports.internal.Sweep= require('./common/Sweep');\nexports.internal.stats = require('./common/stats');\nexports.internal.Manifold = require('./Manifold');\nexports.internal.Distance = require('./collision/Distance');\nexports.internal.TimeOfImpact = require('./collision/TimeOfImpact');\nexports.internal.DynamicTree = require('./collision/DynamicTree');\nexports.internal.Settings = require('./Settings');\n","var World = require('./World');\n\nexports.toJson = function(world) {\n  return JSON.stringify(world._serialize(), function(key, value) {\n    if (typeof value === 'object') {\n      if (value !== null) {\n        if (typeof value._serialize === 'function') {\n          value = value._serialize();\n        }\n      }\n    }\n    return value;\n  }, '  ');\n};\n\nexports.fromJson = function(string) {\n  return World._deserialize(JSON.parse(string));\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar Settings = require('../Settings');\nvar common = require('../util/common');\nvar Math = require('../common/Math');\nvar AABB = require('./AABB');\nvar DynamicTree = require('./DynamicTree');\n\nmodule.exports = BroadPhase;\n\n/**\n * The broad-phase wraps and extends a dynamic-tree to keep track of moved\n * objects and query them on update.\n */\nfunction BroadPhase() {\n  this.m_tree = new DynamicTree();\n  this.m_proxyCount = 0;\n  this.m_moveBuffer = [];\n  this.queryCallback = this.queryCallback.bind(this);\n};\n\n/**\n * Get user data from a proxy. Returns null if the id is invalid.\n */\nBroadPhase.prototype.getUserData = function(proxyId) {\n  return this.m_tree.getUserData(proxyId);\n}\n\n/**\n * Test overlap of fat AABBs.\n */\nBroadPhase.prototype.testOverlap = function(proxyIdA, proxyIdB) {\n  var aabbA = this.m_tree.getFatAABB(proxyIdA);\n  var aabbB = this.m_tree.getFatAABB(proxyIdB);\n  return AABB.testOverlap(aabbA, aabbB);\n}\n\n/**\n * Get the fat AABB for a proxy.\n */\nBroadPhase.prototype.getFatAABB = function(proxyId) {\n  return this.m_tree.getFatAABB(proxyId);\n}\n\n/**\n * Get the number of proxies.\n */\nBroadPhase.prototype.getProxyCount = function() {\n  return this.m_proxyCount;\n}\n\n/**\n * Get the height of the embedded tree.\n */\nBroadPhase.prototype.getTreeHeight = function() {\n  return this.m_tree.getHeight();\n}\n\n/**\n * Get the balance (integer) of the embedded tree.\n */\nBroadPhase.prototype.getTreeBalance = function() {\n  return this.m_tree.getMaxBalance();\n}\n\n/**\n * Get the quality metric of the embedded tree.\n */\nBroadPhase.prototype.getTreeQuality = function() {\n  return this.m_tree.getAreaRatio();\n}\n\n/**\n * Query an AABB for overlapping proxies. The callback class is called for each\n * proxy that overlaps the supplied AABB.\n */\nBroadPhase.prototype.query = function(aabb, queryCallback) {\n  this.m_tree.query(aabb, queryCallback);\n}\n\n/**\n * Ray-cast against the proxies in the tree. This relies on the callback to\n * perform a exact ray-cast in the case were the proxy contains a shape. The\n * callback also performs the any collision filtering. This has performance\n * roughly equal to k * log(n), where k is the number of collisions and n is the\n * number of proxies in the tree.\n * \n * @param input The ray-cast input data. The ray extends from p1 to p1 +\n *          maxFraction * (p2 - p1).\n * @param rayCastCallback A function that is called for each proxy that is hit by\n *          the ray.\n */\nBroadPhase.prototype.rayCast = function(input, rayCastCallback) {\n  this.m_tree.rayCast(input, rayCastCallback);\n}\n\n/**\n * Shift the world origin. Useful for large worlds. The shift formula is:\n * position -= newOrigin\n * \n * @param newOrigin The new origin with respect to the old origin\n */\nBroadPhase.prototype.shiftOrigin = function(newOrigin) {\n  this.m_tree.shiftOrigin(newOrigin);\n}\n\n/**\n * Create a proxy with an initial AABB. Pairs are not reported until UpdatePairs\n * is called.\n */\nBroadPhase.prototype.createProxy = function(aabb, userData) {\n  _ASSERT && common.assert(AABB.isValid(aabb));\n  var proxyId = this.m_tree.createProxy(aabb, userData);\n  this.m_proxyCount++;\n  this.bufferMove(proxyId);\n  return proxyId;\n}\n\n/**\n * Destroy a proxy. It is up to the client to remove any pairs.\n */\nBroadPhase.prototype.destroyProxy = function(proxyId) {\n  this.unbufferMove(proxyId);\n  this.m_proxyCount--;\n  this.m_tree.destroyProxy(proxyId);\n}\n\n/**\n * Call moveProxy as many times as you like, then when you are done call\n * UpdatePairs to finalized the proxy pairs (for your time step).\n */\nBroadPhase.prototype.moveProxy = function(proxyId, aabb, displacement) {\n  _ASSERT && common.assert(AABB.isValid(aabb));\n  var changed = this.m_tree.moveProxy(proxyId, aabb, displacement);\n  if (changed) {\n    this.bufferMove(proxyId);\n  }\n}\n\n/**\n * Call to trigger a re-processing of it's pairs on the next call to\n * UpdatePairs.\n */\nBroadPhase.prototype.touchProxy = function(proxyId) {\n  this.bufferMove(proxyId);\n}\n\nBroadPhase.prototype.bufferMove = function(proxyId) {\n  this.m_moveBuffer.push(proxyId);\n}\n\nBroadPhase.prototype.unbufferMove = function(proxyId) {\n  for (var i = 0; i < this.m_moveBuffer.length; ++i) {\n    if (this.m_moveBuffer[i] == proxyId) {\n      this.m_moveBuffer[i] = null;\n    }\n  }\n}\n\n/**\n * @function BroadPhase~addPair\n * @param {Object} userDataA\n * @param {Object} userDataB\n */\n\n/**\n * Update the pairs. This results in pair callbacks. This can only add pairs.\n * \n * @param {BroadPhase~AddPair} addPairCallback\n */\nBroadPhase.prototype.updatePairs = function(addPairCallback) {\n  _ASSERT && common.assert(typeof addPairCallback === 'function');\n  this.m_callback = addPairCallback;\n\n  // Perform tree queries for all moving proxies.\n  while (this.m_moveBuffer.length > 0) {\n    this.m_queryProxyId = this.m_moveBuffer.pop();\n    if (this.m_queryProxyId === null) {\n      continue;\n    }\n\n    // We have to query the tree with the fat AABB so that\n    // we don't fail to create a pair that may touch later.\n    var fatAABB = this.m_tree.getFatAABB(this.m_queryProxyId);\n\n    // Query tree, create pairs and add them pair buffer.\n    this.m_tree.query(fatAABB, this.queryCallback);\n  }\n\n  // Try to keep the tree balanced.\n  // this.m_tree.rebalance(4);\n}\n\nBroadPhase.prototype.queryCallback = function(proxyId) {\n  // A proxy cannot form a pair with itself.\n  if (proxyId == this.m_queryProxyId) {\n    return true;\n  }\n\n  var proxyIdA = Math.min(proxyId, this.m_queryProxyId);\n  var proxyIdB = Math.max(proxyId, this.m_queryProxyId);\n\n  // TODO: Skip any duplicate pairs.\n\n  var userDataA = this.m_tree.getUserData(proxyIdA);\n  var userDataB = this.m_tree.getUserData(proxyIdB);\n\n  // Send the pairs back to the client.\n  this.m_callback(userDataA, userDataB);\n\n  return true;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Pool;\n\nfunction Pool(opts) {\n  var _list = [];\n  var _max = opts.max || Infinity;\n\n  var _createFn = opts.create;\n  var _outFn = opts.allocate;\n  var _inFn = opts.release;\n  var _discardFn = opts.discard;\n\n  var _createCount = 0;\n  var _outCount = 0;\n  var _inCount = 0;\n  var _discardCount = 0;\n\n  this.max = function(n) {\n    if (typeof n === 'number') {\n      _max = n;\n      return this;\n    }\n    return _max;\n  };\n\n  this.size = function() {\n    return _list.length;\n  };\n\n  this.allocate = function() {\n    var item;\n    if (_list.length > 0) {\n      item = _list.shift();\n    } else {\n      _createCount++;\n      if (typeof _createFn === 'function') {\n        item = _createFn();\n      } else {\n        item = {};\n      }\n    }\n    _outCount++;\n    if (typeof _outFn === 'function') {\n      _outFn(item);\n    }\n    return item;\n  };\n\n  this.release = function(item) {\n    if (_list.length < _max) {\n      _inCount++;\n      if (typeof _inFn === 'function') {\n        _inFn(item);\n      }\n      _list.push(item);\n    } else {\n      _discardCount++;\n      if (typeof _discardFn === 'function') {\n        item = _discardFn(item);\n      }\n    }\n  };\n\n  this.toString = function() {\n    return \" +\" + _createCount + \" >\" + _outCount + \" <\" + _inCount + \" -\"\n        + _discardCount + \" =\" + _list.length + \"/\" + _max;\n  };\n}","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Solver;\nmodule.exports.TimeStep = TimeStep;\n\nvar Settings = require('./Settings');\nvar common = require('./util/common');\n\nvar Vec2 = require('./common/Vec2');\nvar Math = require('./common/Math');\n\nvar Body = require('./Body');\nvar Contact = require('./Contact');\nvar Joint = require('./Joint');\n\nvar TimeOfImpact = require('./collision/TimeOfImpact');\nvar TOIInput = TimeOfImpact.Input;\nvar TOIOutput = TimeOfImpact.Output;\n\nvar Distance = require('./collision/Distance');\nvar DistanceInput = Distance.Input;\nvar DistanceOutput = Distance.Output;\nvar DistanceProxy = Distance.Proxy;\nvar SimplexCache = Distance.Cache;\n\nfunction TimeStep(dt) {\n  this.dt = 0; // time step\n  this.inv_dt = 0; // inverse time step (0 if dt == 0)\n  this.velocityIterations = 0;\n  this.positionIterations = 0;\n  this.warmStarting = false;\n  this.blockSolve = true;\n\n  // timestep ratio for variable timestep\n  this.inv_dt0 = 0.0;\n  this.dtRatio = 1; // dt * inv_dt0\n}\n\nTimeStep.prototype.reset = function(dt) {\n  if (this.dt > 0.0) {\n    this.inv_dt0 = this.inv_dt;\n  }\n  this.dt = dt;\n  this.inv_dt = dt == 0 ? 0 : 1 / dt;\n  this.dtRatio = dt * this.inv_dt0;\n}\n\n/**\n * Finds and solves islands. An island is a connected subset of the world.\n * \n * @param {World} world\n */\nfunction Solver(world) {\n  this.m_world = world;\n  this.m_stack = [];\n  this.m_bodies = [];\n  this.m_contacts = [];\n  this.m_joints = [];\n}\n\nSolver.prototype.clear = function() {\n  this.m_stack.length = 0;\n  this.m_bodies.length = 0;\n  this.m_contacts.length = 0;\n  this.m_joints.length = 0;\n}\n\nSolver.prototype.addBody = function(body) {\n  _ASSERT && common.assert(body instanceof Body, 'Not a Body!', body);\n  this.m_bodies.push(body);\n  // why?\n//  body.c_position.c.setZero();\n//  body.c_position.a = 0;\n//  body.c_velocity.v.setZero();\n//  body.c_velocity.w = 0;\n};\n\nSolver.prototype.addContact = function(contact) {\n  _ASSERT && common.assert(contact instanceof Contact, 'Not a Contact!', contact);\n  this.m_contacts.push(contact);\n};\n\nSolver.prototype.addJoint = function(joint) {\n  _ASSERT && common.assert(joint instanceof Joint, 'Not a Joint!', joint);\n  this.m_joints.push(joint);\n};\n\n/**\n * @param {TimeStep} step\n */\nSolver.prototype.solveWorld = function(step) {\n  var world = this.m_world;\n\n  // Clear all the island flags.\n  for (var b = world.m_bodyList; b; b = b.m_next) {\n    b.m_islandFlag = false;\n  }\n  for (var c = world.m_contactList; c; c = c.m_next) {\n    c.m_islandFlag = false;\n  }\n  for (var j = world.m_jointList; j; j = j.m_next) {\n    j.m_islandFlag = false;\n  }\n\n  // Build and simulate all awake islands.\n  var stack = this.m_stack;\n  var loop = -1;\n  for (var seed = world.m_bodyList; seed; seed = seed.m_next) {\n    loop++;\n    if (seed.m_islandFlag) {\n      continue;\n    }\n\n    if (seed.isAwake() == false || seed.isActive() == false) {\n      continue;\n    }\n\n    // The seed can be dynamic or kinematic.\n    if (seed.isStatic()) {\n      continue;\n    }\n\n    // Reset island and stack.\n    this.clear();\n\n    stack.push(seed);\n\n    seed.m_islandFlag = true;\n\n    // Perform a depth first search (DFS) on the constraint graph.\n    while (stack.length > 0) {\n      // Grab the next body off the stack and add it to the island.\n      var b = stack.pop();\n      _ASSERT && common.assert(b.isActive() == true);\n      this.addBody(b);\n\n      // Make sure the body is awake.\n      b.setAwake(true);\n\n      // To keep islands as small as possible, we don't\n      // propagate islands across static bodies.\n      if (b.isStatic()) {\n        continue;\n      }\n      \n      // Search all contacts connected to this body.\n      for (var ce = b.m_contactList; ce; ce = ce.next) {\n        var contact = ce.contact;\n\n        // Has this contact already been added to an island?\n        if (contact.m_islandFlag) {\n          continue;\n        }\n\n        // Is this contact solid and touching?\n        if (contact.isEnabled() == false || contact.isTouching() == false) {\n          continue;\n        }\n\n        // Skip sensors.\n        var sensorA = contact.m_fixtureA.m_isSensor;\n        var sensorB = contact.m_fixtureB.m_isSensor;\n        if (sensorA || sensorB) {\n          continue;\n        }\n\n        this.addContact(contact);\n        contact.m_islandFlag = true;\n\n        var other = ce.other;\n\n        // Was the other body already added to this island?\n        if (other.m_islandFlag) {\n          continue;\n        }\n\n        // _ASSERT && common.assert(stack.length < world.m_bodyCount);\n        stack.push(other);\n        other.m_islandFlag = true;\n      }\n\n      // Search all joints connect to this body.\n      for (var je = b.m_jointList; je; je = je.next) {\n        if (je.joint.m_islandFlag == true) {\n          continue;\n        }\n\n        var other = je.other;\n\n        // Don't simulate joints connected to inactive bodies.\n        if (other.isActive() == false) {\n          continue;\n        }\n\n        this.addJoint(je.joint);\n        je.joint.m_islandFlag = true;\n\n        if (other.m_islandFlag) {\n          continue;\n        }\n\n        // _ASSERT && common.assert(stack.length < world.m_bodyCount);\n        stack.push(other);\n        other.m_islandFlag = true;\n      }\n    }\n\n    this.solveIsland(step);\n\n    // Post solve cleanup.\n    for (var i = 0; i < this.m_bodies.length; ++i) {\n      // Allow static bodies to participate in other islands.\n      // TODO: are they added at all?\n      var b = this.m_bodies[i];\n      if (b.isStatic()) {\n        b.m_islandFlag = false;\n      }\n    }\n  }\n}\n\n/**\n * @param {TimeStep} step\n */\nSolver.prototype.solveIsland = function(step) {\n  // B2: Island Solve\n  var world = this.m_world;\n  var gravity = world.m_gravity;\n  var allowSleep = world.m_allowSleep;\n\n  var h = step.dt;\n\n  // Integrate velocities and apply damping. Initialize the body state.\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n\n    var c = Vec2.clone(body.m_sweep.c);\n    var a = body.m_sweep.a;\n    var v = Vec2.clone(body.m_linearVelocity);\n    var w = body.m_angularVelocity;\n\n    // Store positions for continuous collision.\n    body.m_sweep.c0.set(body.m_sweep.c);\n    body.m_sweep.a0 = body.m_sweep.a;\n\n    if (body.isDynamic()) {\n      // Integrate velocities.\n      v.addMul(h * body.m_gravityScale, gravity);\n      v.addMul(h * body.m_invMass, body.m_force);\n      w += h * body.m_invI * body.m_torque;\n      /**\n       * <pre>\n       * Apply damping.\n       * ODE: dv/dt + c * v = 0\n       * Solution: v(t) = v0 * exp(-c * t)\n       * Time step: v(t + dt) = v0 * exp(-c * (t + dt)) = v0 * exp(-c * t) * exp(-c * dt) = v * exp(-c * dt)\n       * v2 = exp(-c * dt) * v1\n       * Pade approximation:\n       * v2 = v1 * 1 / (1 + c * dt)\n       * </pre>\n       */\n      v.mul(1.0 / (1.0 + h * body.m_linearDamping));\n      w *= 1.0 / (1.0 + h * body.m_angularDamping);\n    }\n\n    body.c_position.c = c;\n    body.c_position.a = a;\n    body.c_velocity.v = v;\n    body.c_velocity.w = w;\n  }\n\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.initConstraint(step);\n  }\n\n  _DEBUG && this.printBodies('M: ');\n\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.initVelocityConstraint(step);\n  }\n\n  _DEBUG && this.printBodies('R: ');\n\n  if (step.warmStarting) {\n    // Warm start.\n    for (var i = 0; i < this.m_contacts.length; ++i) {\n      var contact = this.m_contacts[i];\n      contact.warmStartConstraint(step);\n    }\n  }\n\n  _DEBUG && this.printBodies('Q: ');\n  \n  for (var i = 0; i < this.m_joints.length; ++i) {\n    var joint = this.m_joints[i];\n    joint.initVelocityConstraints(step);\n  }\n\n  _DEBUG && this.printBodies('E: ');\n\n  // Solve velocity constraints\n  for (var i = 0; i < step.velocityIterations; ++i) {\n    for (var j = 0; j < this.m_joints.length; ++j) {\n      var joint = this.m_joints[j];\n      joint.solveVelocityConstraints(step);\n    }\n\n    for (var j = 0; j < this.m_contacts.length; ++j) {\n      var contact = this.m_contacts[j];\n      contact.solveVelocityConstraint(step);\n    }\n  }\n\n  _DEBUG && this.printBodies('D: ');\n\n  // Store impulses for warm starting\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.storeConstraintImpulses(step);\n  }\n\n  _DEBUG && this.printBodies('C: ');\n\n  // Integrate positions\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n\n    var c = Vec2.clone(body.c_position.c);\n    var a = body.c_position.a;\n    var v = Vec2.clone(body.c_velocity.v);\n    var w = body.c_velocity.w;\n\n    // Check for large velocities\n    var translation = Vec2.mul(h, v);\n    if (Vec2.lengthSquared(translation) > Settings.maxTranslationSquared) {\n      var ratio = Settings.maxTranslation / translation.length();\n      v.mul(ratio);\n    }\n\n    var rotation = h * w;\n    if (rotation * rotation > Settings.maxRotationSquared) {\n      var ratio = Settings.maxRotation / Math.abs(rotation);\n      w *= ratio;\n    }\n\n    // Integrate\n    c.addMul(h, v);\n    a += h * w;\n\n    body.c_position.c.set(c);\n    body.c_position.a = a;\n    body.c_velocity.v.set(v);\n    body.c_velocity.w = w;\n  }\n\n  _DEBUG && this.printBodies('B: ');\n\n  // Solve position constraints\n  var positionSolved = false;\n  for (var i = 0; i < step.positionIterations; ++i) {\n    var minSeparation = 0.0;\n    for (var j = 0; j < this.m_contacts.length; ++j) {\n      var contact = this.m_contacts[j];\n      var separation = contact.solvePositionConstraint(step);\n      minSeparation = Math.min(minSeparation, separation);\n    }\n    // We can't expect minSpeparation >= -Settings.linearSlop because we don't\n    // push the separation above -Settings.linearSlop.\n    var contactsOkay = minSeparation >= -3.0 * Settings.linearSlop;\n\n    var jointsOkay = true;\n    for (var j = 0; j < this.m_joints.length; ++j) {\n      var joint = this.m_joints[j];\n      var jointOkay = joint.solvePositionConstraints(step);\n      jointsOkay = jointsOkay && jointOkay;\n    }\n\n    if (contactsOkay && jointsOkay) {\n      // Exit early if the position errors are small.\n      positionSolved = true;\n      break;\n    }\n  }\n\n  _DEBUG && this.printBodies('L: ');\n\n  // Copy state buffers back to the bodies\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n\n    body.m_sweep.c.set(body.c_position.c);\n    body.m_sweep.a = body.c_position.a;\n    body.m_linearVelocity.set(body.c_velocity.v);\n    body.m_angularVelocity = body.c_velocity.w;\n    body.synchronizeTransform();\n  }\n\n  this.postSolveIsland();\n\n  if (allowSleep) {\n    var minSleepTime = Infinity;\n\n    var linTolSqr = Settings.linearSleepToleranceSqr;\n    var angTolSqr = Settings.angularSleepToleranceSqr;\n\n    for (var i = 0; i < this.m_bodies.length; ++i) {\n      var body = this.m_bodies[i];\n      if (body.isStatic()) {\n        continue;\n      }\n\n      if ((body.m_autoSleepFlag == false)\n          || (body.m_angularVelocity * body.m_angularVelocity > angTolSqr)\n          || (Vec2.lengthSquared(body.m_linearVelocity) > linTolSqr)) {\n        body.m_sleepTime = 0.0;\n        minSleepTime = 0.0;\n      } else {\n        body.m_sleepTime += h;\n        minSleepTime = Math.min(minSleepTime, body.m_sleepTime);\n      }\n    }\n\n    if (minSleepTime >= Settings.timeToSleep && positionSolved) {\n      for (var i = 0; i < this.m_bodies.length; ++i) {\n        var body = this.m_bodies[i];\n        body.setAwake(false);\n      }\n    }\n  }\n};\n\nSolver.prototype.printBodies = function(tag) {\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var b = this.m_bodies[i];\n    common.debug(tag, b.c_position.a, b.c_position.c.x, b.c_position.c.y, b.c_velocity.w, b.c_velocity.v.x, b.c_velocity.v.y);\n  }\n};\n\nvar s_subStep = new TimeStep(); // reuse\n\n/**\n * Find TOI contacts and solve them.\n *\n * @param {TimeStep} step\n */\nSolver.prototype.solveWorldTOI = function(step) {\n  var world = this.m_world;\n\n  if (world.m_stepComplete) {\n    for (var b = world.m_bodyList; b; b = b.m_next) {\n      b.m_islandFlag = false;\n      b.m_sweep.alpha0 = 0.0;\n    }\n\n    for (var c = world.m_contactList; c; c = c.m_next) {\n      // Invalidate TOI\n      c.m_toiFlag = false;\n      c.m_islandFlag = false;\n      c.m_toiCount = 0;\n      c.m_toi = 1.0;\n    }\n  }\n\n  // Find TOI events and solve them.\n  for (;;) {\n    // Find the first TOI.\n    var minContact = null; // Contact\n    var minAlpha = 1.0;\n\n    for (var c = world.m_contactList; c; c = c.m_next) {\n      // Is this contact disabled?\n      if (c.isEnabled() == false) {\n        continue;\n      }\n\n      // Prevent excessive sub-stepping.\n      if (c.m_toiCount > Settings.maxSubSteps) {\n        continue;\n      }\n\n      var alpha = 1.0;\n      if (c.m_toiFlag) {\n        // This contact has a valid cached TOI.\n        alpha = c.m_toi;\n      } else {\n        var fA = c.getFixtureA();\n        var fB = c.getFixtureB();\n\n        // Is there a sensor?\n        if (fA.isSensor() || fB.isSensor()) {\n          continue;\n        }\n\n        var bA = fA.getBody();\n        var bB = fB.getBody();\n\n        _ASSERT && common.assert(bA.isDynamic() || bB.isDynamic());\n\n        var activeA = bA.isAwake() && !bA.isStatic();\n        var activeB = bB.isAwake() && !bB.isStatic();\n\n        // Is at least one body active (awake and dynamic or kinematic)?\n        if (activeA == false && activeB == false) {\n          continue;\n        }\n\n        var collideA = bA.isBullet() || !bA.isDynamic();\n        var collideB = bB.isBullet() || !bB.isDynamic();\n\n        // Are these two non-bullet dynamic bodies?\n        if (collideA == false && collideB == false) {\n          continue;\n        }\n\n        // Compute the TOI for this contact.\n        // Put the sweeps onto the same time interval.\n        var alpha0 = bA.m_sweep.alpha0;\n\n        if (bA.m_sweep.alpha0 < bB.m_sweep.alpha0) {\n          alpha0 = bB.m_sweep.alpha0;\n          bA.m_sweep.advance(alpha0);\n        } else if (bB.m_sweep.alpha0 < bA.m_sweep.alpha0) {\n          alpha0 = bA.m_sweep.alpha0;\n          bB.m_sweep.advance(alpha0);\n        }\n\n        _ASSERT && common.assert(alpha0 < 1.0);\n\n        var indexA = c.getChildIndexA();\n        var indexB = c.getChildIndexB();\n\n        var sweepA = bA.m_sweep;\n        var sweepB = bB.m_sweep;\n\n        // Compute the time of impact in interval [0, minTOI]\n        var input = new TOIInput(); // TODO: reuse\n        input.proxyA.set(fA.getShape(), indexA);\n        input.proxyB.set(fB.getShape(), indexB);\n        input.sweepA.set(bA.m_sweep);\n        input.sweepB.set(bB.m_sweep);\n        input.tMax = 1.0;\n\n        var output = new TOIOutput(); // TODO: reuse\n        TimeOfImpact(output, input);\n\n        // Beta is the fraction of the remaining portion of the [time?].\n        var beta = output.t;\n        if (output.state == TOIOutput.e_touching) {\n          alpha = Math.min(alpha0 + (1.0 - alpha0) * beta, 1.0);\n        } else {\n          alpha = 1.0;\n        }\n\n        c.m_toi = alpha;\n        c.m_toiFlag = true;\n      }\n\n      if (alpha < minAlpha) {\n        // This is the minimum TOI found so far.\n        minContact = c;\n        minAlpha = alpha;\n      }\n    }\n\n    if (minContact == null || 1.0 - 10.0 * Math.EPSILON < minAlpha) {\n      // No more TOI events. Done!\n      world.m_stepComplete = true;\n      break;\n    }\n\n    // Advance the bodies to the TOI.\n    var fA = minContact.getFixtureA();\n    var fB = minContact.getFixtureB();\n    var bA = fA.getBody();\n    var bB = fB.getBody();\n\n    var backup1 = bA.m_sweep.clone();\n    var backup2 = bB.m_sweep.clone();\n\n    bA.advance(minAlpha);\n    bB.advance(minAlpha);\n\n    // The TOI contact likely has some new contact points.\n    minContact.update(world);\n    minContact.m_toiFlag = false;\n    ++minContact.m_toiCount;\n\n    // Is the contact solid?\n    if (minContact.isEnabled() == false || minContact.isTouching() == false) {\n      // Restore the sweeps.\n      minContact.setEnabled(false);\n      bA.m_sweep.set(backup1);\n      bB.m_sweep.set(backup2);\n      bA.synchronizeTransform();\n      bB.synchronizeTransform();\n      continue;\n    }\n\n    bA.setAwake(true);\n    bB.setAwake(true);\n\n    // Build the island\n    this.clear();\n    this.addBody(bA);\n    this.addBody(bB);\n    this.addContact(minContact);\n\n    bA.m_islandFlag = true;\n    bB.m_islandFlag = true;\n    minContact.m_islandFlag = true;\n\n    // Get contacts on bodyA and bodyB.\n    var bodies = [ bA, bB ];\n    for (var i = 0; i < bodies.length; ++i) {\n      var body = bodies[i];\n      if (body.isDynamic()) {\n        for (var ce = body.m_contactList; ce; ce = ce.next) {\n          // if (this.m_bodyCount == this.m_bodyCapacity) { break; }\n          // if (this.m_contactCount == this.m_contactCapacity) { break; }\n\n          var contact = ce.contact;\n\n          // Has this contact already been added to the island?\n          if (contact.m_islandFlag) {\n            continue;\n          }\n\n          // Only add if either is static, kinematic or bullet.\n          var other = ce.other;\n          if (other.isDynamic() && !body.isBullet() && !other.isBullet()) {\n            continue;\n          }\n\n          // Skip sensors.\n          var sensorA = contact.m_fixtureA.m_isSensor;\n          var sensorB = contact.m_fixtureB.m_isSensor;\n          if (sensorA || sensorB) {\n            continue;\n          }\n\n          // Tentatively advance the body to the TOI.\n          var backup = other.m_sweep.clone();\n          if (other.m_islandFlag == false) {\n            other.advance(minAlpha);\n          }\n\n          // Update the contact points\n          contact.update(world);\n\n          // Was the contact disabled by the user?\n          // Are there contact points?\n          if (contact.isEnabled() == false || contact.isTouching() == false) {\n            other.m_sweep.set(backup);\n            other.synchronizeTransform();\n            continue;\n          }\n\n          // Add the contact to the island\n          contact.m_islandFlag = true;\n          this.addContact(contact);\n\n          // Has the other body already been added to the island?\n          if (other.m_islandFlag) {\n            continue;\n          }\n\n          // Add the other body to the island.\n          other.m_islandFlag = true;\n\n          if (!other.isStatic()) {\n            other.setAwake(true);\n          }\n\n          this.addBody(other);\n        }\n      }\n    }\n\n    s_subStep.reset((1.0 - minAlpha) * step.dt);\n    s_subStep.dtRatio = 1.0;\n    s_subStep.positionIterations = 20;\n    s_subStep.velocityIterations = step.velocityIterations;\n    s_subStep.warmStarting = false;\n\n    this.solveIslandTOI(s_subStep, bA, bB);\n\n    // Reset island flags and synchronize broad-phase proxies.\n    for (var i = 0; i < this.m_bodies.length; ++i) {\n      var body = this.m_bodies[i];\n      body.m_islandFlag = false;\n\n      if (!body.isDynamic()) {\n        continue;\n      }\n\n      body.synchronizeFixtures();\n\n      // Invalidate all contact TOIs on this displaced body.\n      for (var ce = body.m_contactList; ce; ce = ce.next) {\n        ce.contact.m_toiFlag = false;\n        ce.contact.m_islandFlag = false;\n      }\n    }\n\n    // Commit fixture proxy movements to the broad-phase so that new contacts\n    // are created.\n    // Also, some contacts can be destroyed.\n    world.findNewContacts();\n\n    if (world.m_subStepping) {\n      world.m_stepComplete = false;\n      break;\n    }\n  }\n\n  if (_DEBUG) for (var b = world.m_bodyList; b; b = b.m_next) {\n    var c = b.m_sweep.c;\n    var a = b.m_sweep.a;\n    var v = b.m_linearVelocity;\n    var w = b.m_angularVelocity;\n  }\n}\n\n/**\n * @param {TimeStep} subStep\n * @param toiA\n * @param toiB\n */\nSolver.prototype.solveIslandTOI = function(subStep, toiA, toiB) {\n  var world = this.m_world;\n\n  // Initialize the body state.\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n    body.c_position.c.set(body.m_sweep.c);\n    body.c_position.a = body.m_sweep.a;\n    body.c_velocity.v.set(body.m_linearVelocity);\n    body.c_velocity.w = body.m_angularVelocity;\n  }\n\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.initConstraint(subStep);\n  }\n\n  // Solve position constraints.\n  for (var i = 0; i < subStep.positionIterations; ++i) {\n    var minSeparation = 0.0;\n    for (var j = 0; j < this.m_contacts.length; ++j) {\n      var contact = this.m_contacts[j];\n      var separation = contact.solvePositionConstraintTOI(subStep, toiA, toiB);\n      minSeparation = Math.min(minSeparation, separation);\n    }\n    // We can't expect minSpeparation >= -Settings.linearSlop because we don't\n    // push the separation above -Settings.linearSlop.\n    var contactsOkay = minSeparation >= -1.5 * Settings.linearSlop;\n    if (contactsOkay) {\n      break;\n    }\n  }\n\n  if (false) {\n    // Is the new position really safe?\n    for (var i = 0; i < this.m_contacts.length; ++i) {\n      var c = this.m_contacts[i];\n      var fA = c.getFixtureA();\n      var fB = c.getFixtureB();\n\n      var bA = fA.getBody();\n      var bB = fB.getBody();\n\n      var indexA = c.getChildIndexA();\n      var indexB = c.getChildIndexB();\n\n      var input = new DistanceInput();\n      input.proxyA.set(fA.getShape(), indexA);\n      input.proxyB.set(fB.getShape(), indexB);\n      input.transformA = bA.getTransform();\n      input.transformB = bB.getTransform();\n      input.useRadii = false;\n\n      var output = new DistanceOutput();\n      var cache = new SimplexCache();\n      Distance(output, cache, input);\n\n      if (output.distance == 0 || cache.count == 3) {\n        cache.count += 0;\n      }\n    }\n  }\n\n  // Leap of faith to new safe state.\n  toiA.m_sweep.c0.set(toiA.c_position.c);\n  toiA.m_sweep.a0 = toiA.c_position.a;\n  toiB.m_sweep.c0.set(toiB.c_position.c);\n  toiB.m_sweep.a0 = toiB.c_position.a;\n\n  // No warm starting is needed for TOI events because warm\n  // starting impulses were applied in the discrete solver.\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.initVelocityConstraint(subStep);\n  }\n\n  // Solve velocity constraints.\n  for (var i = 0; i < subStep.velocityIterations; ++i) {\n    for (var j = 0; j < this.m_contacts.length; ++j) {\n      var contact = this.m_contacts[j];\n      contact.solveVelocityConstraint(subStep);\n    }\n  }\n\n  // Don't store the TOI contact forces for warm starting\n  // because they can be quite large.\n\n  var h = subStep.dt;\n\n  // Integrate positions\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n\n    var c = Vec2.clone(body.c_position.c);\n    var a = body.c_position.a;\n    var v = Vec2.clone(body.c_velocity.v);\n    var w = body.c_velocity.w;\n\n    // Check for large velocities\n    var translation = Vec2.mul(h, v);\n    if (Vec2.dot(translation, translation) > Settings.maxTranslationSquared) {\n      var ratio = Settings.maxTranslation / translation.length();\n      v.mul(ratio);\n    }\n\n    var rotation = h * w;\n    if (rotation * rotation > Settings.maxRotationSquared) {\n      var ratio = Settings.maxRotation / Math.abs(rotation);\n      w *= ratio;\n    }\n\n    // Integrate\n    c.addMul(h, v);\n    a += h * w;\n\n    body.c_position.c = c;\n    body.c_position.a = a;\n    body.c_velocity.v = v;\n    body.c_velocity.w = w;\n\n    // Sync bodies\n    body.m_sweep.c = c;\n    body.m_sweep.a = a;\n    body.m_linearVelocity = v;\n    body.m_angularVelocity = w;\n    body.synchronizeTransform();\n  }\n\n  this.postSolveIsland();\n};\n\n/**\n * Contact impulses for reporting. Impulses are used instead of forces because\n * sub-step forces may approach infinity for rigid body collisions. These match\n * up one-to-one with the contact points in Manifold.\n */\nfunction ContactImpulse() {\n  this.normalImpulses = [];\n  this.tangentImpulses = [];\n};\n\nSolver.prototype.postSolveIsland = function() {\n  // TODO: report contact.v_points instead of new object?\n  var impulse = new ContactImpulse();\n  for (var c = 0; c < this.m_contacts.length; ++c) {\n    var contact = this.m_contacts[c];\n    for (var p = 0; p < contact.v_points.length; ++p) {\n      impulse.normalImpulses.push(contact.v_points[p].normalImpulse);\n      impulse.tangentImpulses.push(contact.v_points[p].tangentImpulse);\n    }\n    this.m_world.postSolve(contact, impulse);\n  }\n};\n","var _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports.now = function() {\n  return Date.now();\n}\n\nmodule.exports.diff = function(time) {\n  return Date.now() - time;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = BoxShape;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar PolygonShape = require('./PolygonShape');\n\nBoxShape._super = PolygonShape;\nBoxShape.prototype = create(BoxShape._super.prototype);\n\nBoxShape.TYPE = 'polygon';\n\n/**\n * A rectangle polygon which extend PolygonShape.\n */\nfunction BoxShape(hx, hy, center, angle) {\n  if (!(this instanceof BoxShape)) {\n    return new BoxShape(hx, hy, center, angle);\n  }\n\n  BoxShape._super.call(this);\n\n  this._setAsBox(hx, hy, center, angle);\n}\n\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Vec2 = require('../common/Vec2');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\nvar Contact = require('../Contact');\nvar Manifold = require('../Manifold');\nvar CircleShape = require('./CircleShape');\n\nContact.addType(CircleShape.TYPE, CircleShape.TYPE, CircleCircleContact);\n\nfunction CircleCircleContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB, indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == CircleShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == CircleShape.TYPE);\n  CollideCircles(manifold, fixtureA.getShape(), xfA, fixtureB.getShape(), xfB);\n}\n\nfunction CollideCircles(manifold, circleA, xfA, circleB, xfB) {\n  manifold.pointCount = 0;\n\n  var pA = Transform.mulVec2(xfA, circleA.m_p);\n  var pB = Transform.mulVec2(xfB, circleB.m_p);\n\n  var distSqr = Vec2.distanceSquared(pB, pA);\n  var rA = circleA.m_radius;\n  var rB = circleB.m_radius;\n  var radius = rA + rB;\n  if (distSqr > radius * radius) {\n    return;\n  }\n\n  manifold.type = Manifold.e_circles;\n  manifold.localPoint.set(circleA.m_p);\n  manifold.localNormal.setZero();\n  manifold.pointCount = 1;\n  manifold.points[0].localPoint.set(circleB.m_p);\n\n  // manifold.points[0].id.key = 0;\n  manifold.points[0].id.cf.indexA = 0;\n  manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n  manifold.points[0].id.cf.indexB = 0;\n  manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n}\n\nexports.CollideCircles = CollideCircles;","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Vec2 = require('../common/Vec2');\nvar Rot = require('../common/Rot');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\nvar Contact = require('../Contact');\nvar Manifold = require('../Manifold');\nvar EdgeShape = require('./EdgeShape');\nvar ChainShape = require('./ChainShape');\nvar CircleShape = require('./CircleShape');\n\nContact.addType(EdgeShape.TYPE, CircleShape.TYPE, EdgeCircleContact);\nContact.addType(ChainShape.TYPE, CircleShape.TYPE, ChainCircleContact);\n\nfunction EdgeCircleContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB,\n    indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == EdgeShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == CircleShape.TYPE);\n\n  var shapeA = fixtureA.getShape();\n  var shapeB = fixtureB.getShape();\n\n  CollideEdgeCircle(manifold, shapeA, xfA, shapeB, xfB);\n}\n\nfunction ChainCircleContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB,\n    indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == ChainShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == CircleShape.TYPE);\n\n  var chain = fixtureA.getShape();\n  var edge = new EdgeShape();\n  chain.getChildEdge(edge, indexA);\n\n  var shapeA = edge;\n  var shapeB = fixtureB.getShape();\n\n  CollideEdgeCircle(manifold, shapeA, xfA, shapeB, xfB);\n}\n\n// Compute contact points for edge versus circle.\n// This accounts for edge connectivity.\nfunction CollideEdgeCircle(manifold, edgeA, xfA, circleB, xfB) {\n  manifold.pointCount = 0;\n\n  // Compute circle in frame of edge\n  var Q = Transform.mulTVec2(xfA, Transform.mulVec2(xfB, circleB.m_p));\n\n  var A = edgeA.m_vertex1;\n  var B = edgeA.m_vertex2;\n  var e = Vec2.sub(B, A);\n\n  // Barycentric coordinates\n  var u = Vec2.dot(e, Vec2.sub(B, Q));\n  var v = Vec2.dot(e, Vec2.sub(Q, A));\n\n  var radius = edgeA.m_radius + circleB.m_radius;\n\n  // Region A\n  if (v <= 0.0) {\n    var P = Vec2.clone(A);\n    var d = Vec2.sub(Q, P);\n    var dd = Vec2.dot(d, d);\n    if (dd > radius * radius) {\n      return;\n    }\n\n    // Is there an edge connected to A?\n    if (edgeA.m_hasVertex0) {\n      var A1 = edgeA.m_vertex0;\n      var B1 = A;\n      var e1 = Vec2.sub(B1, A1);\n      var u1 = Vec2.dot(e1, Vec2.sub(B1, Q));\n\n      // Is the circle in Region AB of the previous edge?\n      if (u1 > 0.0) {\n        return;\n      }\n    }\n\n    manifold.type = Manifold.e_circles;\n    manifold.localNormal.setZero();\n    manifold.localPoint.set(P);\n    manifold.pointCount = 1;\n    manifold.points[0].localPoint.set(circleB.m_p);\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 0;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n    return;\n  }\n\n  // Region B\n  if (u <= 0.0) {\n    var P = Vec2.clone(B);\n    var d = Vec2.sub(Q, P);\n    var dd = Vec2.dot(d, d);\n    if (dd > radius * radius) {\n      return;\n    }\n\n    // Is there an edge connected to B?\n    if (edgeA.m_hasVertex3) {\n      var B2 = edgeA.m_vertex3;\n      var A2 = B;\n      var e2 = Vec2.sub(B2, A2);\n      var v2 = Vec2.dot(e2, Vec2.sub(Q, A2));\n\n      // Is the circle in Region AB of the next edge?\n      if (v2 > 0.0) {\n        return;\n      }\n    }\n\n    manifold.type = Manifold.e_circles;\n    manifold.localNormal.setZero();\n    manifold.localPoint.set(P);\n    manifold.pointCount = 1;\n    manifold.points[0].localPoint.set(circleB.m_p);\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 1;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n    return;\n  }\n\n  // Region AB\n  var den = Vec2.dot(e, e);\n  _ASSERT && common.assert(den > 0.0);\n  var P = Vec2.combine(u / den, A, v / den, B);\n  var d = Vec2.sub(Q, P);\n  var dd = Vec2.dot(d, d);\n  if (dd > radius * radius) {\n    return;\n  }\n\n  var n = Vec2.neo(-e.y, e.x);\n  if (Vec2.dot(n, Vec2.sub(Q, A)) < 0.0) {\n    n.set(-n.x, -n.y);\n  }\n  n.normalize();\n\n  manifold.type = Manifold.e_faceA;\n  manifold.localNormal = n;\n  manifold.localPoint.set(A);\n  manifold.pointCount = 1;\n  manifold.points[0].localPoint.set(circleB.m_p);\n\n  // manifold.points[0].id.key = 0;\n  manifold.points[0].id.cf.indexA = 0;\n  manifold.points[0].id.cf.typeA = Manifold.e_face;\n  manifold.points[0].id.cf.indexB = 0;\n  manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\nvar Settings = require('../Settings');\nvar Manifold = require('../Manifold');\nvar Contact = require('../Contact');\nvar Shape = require('../Shape');\nvar PolygonShape = require('./PolygonShape');\n\nmodule.exports = CollidePolygons;\n\nContact.addType(PolygonShape.TYPE, PolygonShape.TYPE, PolygonContact);\n\nfunction PolygonContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB, indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == PolygonShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == PolygonShape.TYPE);\n  CollidePolygons(manifold, fixtureA.getShape(), xfA, fixtureB.getShape(), xfB);\n}\n\n/**\n * Find the max separation between poly1 and poly2 using edge normals from\n * poly1.\n */\nfunction FindMaxSeparation(poly1, xf1, poly2, xf2) {\n  var count1 = poly1.m_count;\n  var count2 = poly2.m_count;\n  var n1s = poly1.m_normals;\n  var v1s = poly1.m_vertices;\n  var v2s = poly2.m_vertices;\n  var xf = Transform.mulTXf(xf2, xf1);\n\n  var bestIndex = 0;\n  var maxSeparation = -Infinity;\n  for (var i = 0; i < count1; ++i) {\n    // Get poly1 normal in frame2.\n    var n = Rot.mulVec2(xf.q, n1s[i]);\n    var v1 = Transform.mulVec2(xf, v1s[i]);\n\n    // Find deepest point for normal i.\n    var si = Infinity;\n    for (var j = 0; j < count2; ++j) {\n      var sij = Vec2.dot(n, v2s[j]) - Vec2.dot(n, v1);\n      if (sij < si) {\n        si = sij;\n      }\n    }\n\n    if (si > maxSeparation) {\n      maxSeparation = si;\n      bestIndex = i;\n    }\n  }\n\n  // used to keep last FindMaxSeparation call values\n  FindMaxSeparation._maxSeparation = maxSeparation;\n  FindMaxSeparation._bestIndex = bestIndex;\n}\n\n/**\n * @param {ClipVertex[2]} c\n * @param {int} edge1\n */\nfunction FindIncidentEdge(c, poly1, xf1, edge1, poly2, xf2) {\n  var normals1 = poly1.m_normals;\n\n  var count2 = poly2.m_count;\n  var vertices2 = poly2.m_vertices;\n  var normals2 = poly2.m_normals;\n\n  _ASSERT && common.assert(0 <= edge1 && edge1 < poly1.m_count);\n\n  // Get the normal of the reference edge in poly2's frame.\n  var normal1 = Rot.mulT(xf2.q, Rot.mulVec2(xf1.q, normals1[edge1]));\n\n  // Find the incident edge on poly2.\n  var index = 0;\n  var minDot = Infinity;\n  for (var i = 0; i < count2; ++i) {\n    var dot = Vec2.dot(normal1, normals2[i]);\n    if (dot < minDot) {\n      minDot = dot;\n      index = i;\n    }\n  }\n\n  // Build the clip vertices for the incident edge.\n  var i1 = index;\n  var i2 = i1 + 1 < count2 ? i1 + 1 : 0;\n\n  c[0].v = Transform.mulVec2(xf2, vertices2[i1]);\n  c[0].id.cf.indexA = edge1;\n  c[0].id.cf.indexB = i1;\n  c[0].id.cf.typeA = Manifold.e_face;\n  c[0].id.cf.typeB = Manifold.e_vertex;\n\n  c[1].v = Transform.mulVec2(xf2, vertices2[i2]);\n  c[1].id.cf.indexA = edge1;\n  c[1].id.cf.indexB = i2;\n  c[1].id.cf.typeA = Manifold.e_face;\n  c[1].id.cf.typeB = Manifold.e_vertex;\n}\n\n/**\n * \n * Find edge normal of max separation on A - return if separating axis is found<br>\n * Find edge normal of max separation on B - return if separation axis is found<br>\n * Choose reference edge as min(minA, minB)<br>\n * Find incident edge<br>\n * Clip\n * \n * The normal points from 1 to 2\n */\nfunction CollidePolygons(manifold, polyA, xfA, polyB, xfB) {\n  manifold.pointCount = 0;\n  var totalRadius = polyA.m_radius + polyB.m_radius;\n\n  FindMaxSeparation(polyA, xfA, polyB, xfB);\n  var edgeA = FindMaxSeparation._bestIndex;\n  var separationA = FindMaxSeparation._maxSeparation;\n  if (separationA > totalRadius)\n    return;\n\n  FindMaxSeparation(polyB, xfB, polyA, xfA);\n  var edgeB = FindMaxSeparation._bestIndex;\n  var separationB = FindMaxSeparation._maxSeparation;\n  if (separationB > totalRadius)\n    return;\n\n  var poly1; // reference polygon\n  var poly2; // incident polygon\n  var xf1;\n  var xf2;\n  var edge1; // reference edge\n  var flip;\n  var k_tol = 0.1 * Settings.linearSlop;\n\n  if (separationB > separationA + k_tol) {\n    poly1 = polyB;\n    poly2 = polyA;\n    xf1 = xfB;\n    xf2 = xfA;\n    edge1 = edgeB;\n    manifold.type = Manifold.e_faceB;\n    flip = 1;\n  } else {\n    poly1 = polyA;\n    poly2 = polyB;\n    xf1 = xfA;\n    xf2 = xfB;\n    edge1 = edgeA;\n    manifold.type = Manifold.e_faceA;\n    flip = 0;\n  }\n\n  var incidentEdge = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n  FindIncidentEdge(incidentEdge, poly1, xf1, edge1, poly2, xf2);\n\n  var count1 = poly1.m_count;\n  var vertices1 = poly1.m_vertices;\n\n  var iv1 = edge1;\n  var iv2 = edge1 + 1 < count1 ? edge1 + 1 : 0;\n\n  var v11 = vertices1[iv1];\n  var v12 = vertices1[iv2];\n\n  var localTangent = Vec2.sub(v12, v11);\n  localTangent.normalize();\n\n  var localNormal = Vec2.cross(localTangent, 1.0);\n  var planePoint = Vec2.combine(0.5, v11, 0.5, v12);\n\n  var tangent = Rot.mulVec2(xf1.q, localTangent);\n  var normal = Vec2.cross(tangent, 1.0);\n\n  v11 = Transform.mulVec2(xf1, v11);\n  v12 = Transform.mulVec2(xf1, v12);\n\n  // Face offset.\n  var frontOffset = Vec2.dot(normal, v11);\n\n  // Side offsets, extended by polytope skin thickness.\n  var sideOffset1 = -Vec2.dot(tangent, v11) + totalRadius;\n  var sideOffset2 = Vec2.dot(tangent, v12) + totalRadius;\n\n  // Clip incident edge against extruded edge1 side edges.\n  var clipPoints1 = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n  var clipPoints2 = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n  var np;\n\n  // Clip to box side 1\n  np = Manifold.clipSegmentToLine(clipPoints1, incidentEdge, Vec2.neg(tangent),\n      sideOffset1, iv1);\n\n  if (np < 2) {\n    return;\n  }\n\n  // Clip to negative box side 1\n  np = Manifold.clipSegmentToLine(clipPoints2, clipPoints1, tangent,\n      sideOffset2, iv2);\n\n  if (np < 2) {\n    return;\n  }\n\n  // Now clipPoints2 contains the clipped points.\n  manifold.localNormal = localNormal;\n  manifold.localPoint = planePoint;\n\n  var pointCount = 0;\n  for (var i = 0; i < clipPoints2.length/* maxManifoldPoints */; ++i) {\n    var separation = Vec2.dot(normal, clipPoints2[i].v) - frontOffset;\n\n    if (separation <= totalRadius) {\n      var cp = manifold.points[pointCount]; // ManifoldPoint\n      cp.localPoint.set(Transform.mulTVec2(xf2, clipPoints2[i].v));\n      cp.id = clipPoints2[i].id;\n      if (flip) {\n        // Swap features\n        var cf = cp.id.cf; // ContactFeature\n        var indexA = cf.indexA;\n        var indexB = cf.indexB;\n        var typeA = cf.typeA;\n        var typeB = cf.typeB;\n        cf.indexA = indexB;\n        cf.indexB = indexA;\n        cf.typeA = typeB;\n        cf.typeB = typeA;\n      }\n      ++pointCount;\n    }\n  }\n\n  manifold.pointCount = pointCount;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\nvar Settings = require('../Settings');\nvar Manifold = require('../Manifold');\nvar Contact = require('../Contact');\nvar Shape = require('../Shape');\nvar CircleShape = require('./CircleShape');\nvar PolygonShape = require('./PolygonShape');\n\nContact.addType(PolygonShape.TYPE, CircleShape.TYPE, PolygonCircleContact);\n\nfunction PolygonCircleContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB, indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == PolygonShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == CircleShape.TYPE);\n  CollidePolygonCircle(manifold, fixtureA.getShape(), xfA, fixtureB.getShape(),\n      xfB);\n}\n\nfunction CollidePolygonCircle(manifold, polygonA, xfA, circleB, xfB) {\n  manifold.pointCount = 0;\n\n  // Compute circle position in the frame of the polygon.\n  var c = Transform.mulVec2(xfB, circleB.m_p);\n  var cLocal = Transform.mulTVec2(xfA, c);\n\n  // Find the min separating edge.\n  var normalIndex = 0;\n  var separation = -Infinity;\n  var radius = polygonA.m_radius + circleB.m_radius;\n  var vertexCount = polygonA.m_count;\n  var vertices = polygonA.m_vertices;\n  var normals = polygonA.m_normals;\n\n  for (var i = 0; i < vertexCount; ++i) {\n    var s = Vec2.dot(normals[i], Vec2.sub(cLocal, vertices[i]));\n\n    if (s > radius) {\n      // Early out.\n      return;\n    }\n\n    if (s > separation) {\n      separation = s;\n      normalIndex = i;\n    }\n  }\n\n  // Vertices that subtend the incident face.\n  var vertIndex1 = normalIndex;\n  var vertIndex2 = vertIndex1 + 1 < vertexCount ? vertIndex1 + 1 : 0;\n  var v1 = vertices[vertIndex1];\n  var v2 = vertices[vertIndex2];\n\n  // If the center is inside the polygon ...\n  if (separation < Math.EPSILON) {\n    manifold.pointCount = 1;\n    manifold.type = Manifold.e_faceA;\n    manifold.localNormal.set(normals[normalIndex]);\n    manifold.localPoint.setCombine(0.5, v1, 0.5, v2);\n    manifold.points[0].localPoint = circleB.m_p;\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 0;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n    return;\n  }\n\n  // Compute barycentric coordinates\n  var u1 = Vec2.dot(Vec2.sub(cLocal, v1), Vec2.sub(v2, v1));\n  var u2 = Vec2.dot(Vec2.sub(cLocal, v2), Vec2.sub(v1, v2));\n  if (u1 <= 0.0) {\n    if (Vec2.distanceSquared(cLocal, v1) > radius * radius) {\n      return;\n    }\n\n    manifold.pointCount = 1;\n    manifold.type = Manifold.e_faceA;\n    manifold.localNormal.setCombine(1, cLocal, -1, v1);\n    manifold.localNormal.normalize();\n    manifold.localPoint = v1;\n    manifold.points[0].localPoint.set(circleB.m_p);\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 0;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n  } else if (u2 <= 0.0) {\n    if (Vec2.distanceSquared(cLocal, v2) > radius * radius) {\n      return;\n    }\n\n    manifold.pointCount = 1;\n    manifold.type = Manifold.e_faceA;\n    manifold.localNormal.setCombine(1, cLocal, -1, v2);\n    manifold.localNormal.normalize();\n    manifold.localPoint.set(v2);\n    manifold.points[0].localPoint.set(circleB.m_p);\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 0;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n  } else {\n    var faceCenter = Vec2.mid(v1, v2);\n    var separation = Vec2.dot(cLocal, normals[vertIndex1])\n        - Vec2.dot(faceCenter, normals[vertIndex1]);\n    if (separation > radius) {\n      return;\n    }\n\n    manifold.pointCount = 1;\n    manifold.type = Manifold.e_faceA;\n    manifold.localNormal.set(normals[vertIndex1]);\n    manifold.localPoint.set(faceCenter);\n    manifold.points[0].localPoint.set(circleB.m_p);\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 0;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Vec2 = require('../common/Vec2');\nvar Rot = require('../common/Rot');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\nvar Contact = require('../Contact');\nvar Manifold = require('../Manifold');\nvar EdgeShape = require('./EdgeShape');\nvar ChainShape = require('./ChainShape');\nvar PolygonShape = require('./PolygonShape');\n\nContact.addType(EdgeShape.TYPE, PolygonShape.TYPE, EdgePolygonContact);\nContact.addType(ChainShape.TYPE, PolygonShape.TYPE, ChainPolygonContact);\n\nfunction EdgePolygonContact(manifold, xfA, fA, indexA, xfB, fB, indexB) {\n  _ASSERT && common.assert(fA.getType() == EdgeShape.TYPE);\n  _ASSERT && common.assert(fB.getType() == PolygonShape.TYPE);\n\n  CollideEdgePolygon(manifold, fA.getShape(), xfA, fB.getShape(), xfB);\n}\n\nfunction ChainPolygonContact(manifold, xfA, fA, indexA, xfB, fB, indexB) {\n  _ASSERT && common.assert(fA.getType() == ChainShape.TYPE);\n  _ASSERT && common.assert(fB.getType() == PolygonShape.TYPE);\n\n  var chain = fA.getShape();\n  var edge = new EdgeShape();\n  chain.getChildEdge(edge, indexA);\n\n  CollideEdgePolygon(manifold, edge, xfA, fB.getShape(), xfB);\n}\n\n// EPAxis Type\nvar e_unknown = -1;\nvar e_edgeA = 1;\nvar e_edgeB = 2;\n\n// VertexType unused?\nvar e_isolated = 0;\nvar e_concave = 1;\nvar e_convex = 2;\n\n// This structure is used to keep track of the best separating axis.\nfunction EPAxis() {\n  this.type; // Type\n  this.index;\n  this.separation;\n};\n\n// This holds polygon B expressed in frame A.\nfunction TempPolygon() {\n  this.vertices = []; // Vec2[Settings.maxPolygonVertices]\n  this.normals = []; // Vec2[Settings.maxPolygonVertices];\n  this.count = 0;\n};\n\n// Reference face used for clipping\nfunction ReferenceFace() {\n  this.i1, this.i2; // int\n  this.v1, this.v2; // v\n  this.normal = Vec2.zero();\n  this.sideNormal1 = Vec2.zero();\n  this.sideOffset1; // float\n  this.sideNormal2 = Vec2.zero();\n  this.sideOffset2; // float\n};\n\n// reused\nvar edgeAxis = new EPAxis();\nvar polygonAxis = new EPAxis();\nvar polygonBA = new TempPolygon();\nvar rf = new ReferenceFace();\n\n/**\n * This function collides and edge and a polygon, taking into account edge\n * adjacency.\n */\nfunction CollideEdgePolygon(manifold, edgeA, xfA, polygonB, xfB) {\n  // Algorithm:\n  // 1. Classify v1 and v2\n  // 2. Classify polygon centroid as front or back\n  // 3. Flip normal if necessary\n  // 4. Initialize normal range to [-pi, pi] about face normal\n  // 5. Adjust normal range according to adjacent edges\n  // 6. Visit each separating axes, only accept axes within the range\n  // 7. Return if _any_ axis indicates separation\n  // 8. Clip\n\n  var m_type1, m_type2; // VertexType unused?\n\n  var xf = Transform.mulTXf(xfA, xfB);\n\n  var centroidB = Transform.mulVec2(xf, polygonB.m_centroid);\n\n  var v0 = edgeA.m_vertex0;\n  var v1 = edgeA.m_vertex1;\n  var v2 = edgeA.m_vertex2;\n  var v3 = edgeA.m_vertex3;\n\n  var hasVertex0 = edgeA.m_hasVertex0;\n  var hasVertex3 = edgeA.m_hasVertex3;\n\n  var edge1 = Vec2.sub(v2, v1);\n  edge1.normalize();\n  var normal1 = Vec2.neo(edge1.y, -edge1.x);\n  var offset1 = Vec2.dot(normal1, Vec2.sub(centroidB, v1));\n  var offset0 = 0.0;\n  var offset2 = 0.0;\n  var convex1 = false;\n  var convex2 = false;\n\n  // Is there a preceding edge?\n  if (hasVertex0) {\n    var edge0 = Vec2.sub(v1, v0);\n    edge0.normalize();\n    var normal0 = Vec2.neo(edge0.y, -edge0.x);\n    convex1 = Vec2.cross(edge0, edge1) >= 0.0;\n    offset0 = Vec2.dot(normal0, centroidB) - Vec2.dot(normal0, v0);\n  }\n\n  // Is there a following edge?\n  if (hasVertex3) {\n    var edge2 = Vec2.sub(v3, v2);\n    edge2.normalize();\n    var normal2 = Vec2.neo(edge2.y, -edge2.x);\n    convex2 = Vec2.cross(edge1, edge2) > 0.0;\n    offset2 = Vec2.dot(normal2, centroidB) - Vec2.dot(normal2, v2);\n  }\n\n  var front;\n  var normal = Vec2.zero();\n  var lowerLimit = Vec2.zero();\n  var upperLimit = Vec2.zero();\n\n  // Determine front or back collision. Determine collision normal limits.\n  if (hasVertex0 && hasVertex3) {\n    if (convex1 && convex2) {\n      front = offset0 >= 0.0 || offset1 >= 0.0 || offset2 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal0);\n        upperLimit.set(normal2);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.setMul(-1, normal1);\n      }\n    } else if (convex1) {\n      front = offset0 >= 0.0 || (offset1 >= 0.0 && offset2 >= 0.0);\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal0);\n        upperLimit.set(normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal2);\n        upperLimit.setMul(-1, normal1);\n      }\n    } else if (convex2) {\n      front = offset2 >= 0.0 || (offset0 >= 0.0 && offset1 >= 0.0);\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal1);\n        upperLimit.set(normal2);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.setMul(-1, normal0);\n      }\n    } else {\n      front = offset0 >= 0.0 && offset1 >= 0.0 && offset2 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal1);\n        upperLimit.set(normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal2);\n        upperLimit.setMul(-1, normal0);\n      }\n    }\n  } else if (hasVertex0) {\n    if (convex1) {\n      front = offset0 >= 0.0 || offset1 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal0);\n        upperLimit.setMul(-1, normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.set(normal1);\n        upperLimit.setMul(-1, normal1);\n      }\n    } else {\n      front = offset0 >= 0.0 && offset1 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal1);\n        upperLimit.setMul(-1, normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.set(normal1);\n        upperLimit.setMul(-1, normal0);\n      }\n    }\n  } else if (hasVertex3) {\n    if (convex2) {\n      front = offset1 >= 0.0 || offset2 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.set(normal2);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.set(normal1);\n      }\n    } else {\n      front = offset1 >= 0.0 && offset2 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.set(normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal2);\n        upperLimit.set(normal1);\n      }\n    }\n  } else {\n    front = offset1 >= 0.0;\n    if (front) {\n      normal.set(normal1);\n      lowerLimit.setMul(-1, normal1);\n      upperLimit.setMul(-1, normal1);\n    } else {\n      normal.setMul(-1, normal1);\n      lowerLimit.set(normal1);\n      upperLimit.set(normal1);\n    }\n  }\n\n  // Get polygonB in frameA\n  polygonBA.count = polygonB.m_count;\n  for (var i = 0; i < polygonB.m_count; ++i) {\n    polygonBA.vertices[i] = Transform.mulVec2(xf, polygonB.m_vertices[i]);\n    polygonBA.normals[i] = Rot.mulVec2(xf.q, polygonB.m_normals[i]);\n  }\n\n  var radius = 2.0 * Settings.polygonRadius;\n\n  manifold.pointCount = 0;\n\n  { // ComputeEdgeSeparation\n    edgeAxis.type = e_edgeA;\n    edgeAxis.index = front ? 0 : 1;\n    edgeAxis.separation = Infinity;\n\n    for (var i = 0; i < polygonBA.count; ++i) {\n      var s = Vec2.dot(normal, Vec2.sub(polygonBA.vertices[i], v1));\n      if (s < edgeAxis.separation) {\n        edgeAxis.separation = s;\n      }\n    }\n  }\n\n  // If no valid normal can be found than this edge should not collide.\n  if (edgeAxis.type == e_unknown) {\n    return;\n  }\n\n  if (edgeAxis.separation > radius) {\n    return;\n  }\n\n  { // ComputePolygonSeparation\n    polygonAxis.type = e_unknown;\n    polygonAxis.index = -1;\n    polygonAxis.separation = -Infinity;\n\n    var perp = Vec2.neo(-normal.y, normal.x);\n\n    for (var i = 0; i < polygonBA.count; ++i) {\n      var n = Vec2.neg(polygonBA.normals[i]);\n\n      var s1 = Vec2.dot(n, Vec2.sub(polygonBA.vertices[i], v1));\n      var s2 = Vec2.dot(n, Vec2.sub(polygonBA.vertices[i], v2));\n      var s = Math.min(s1, s2);\n\n      if (s > radius) {\n        // No collision\n        polygonAxis.type = e_edgeB;\n        polygonAxis.index = i;\n        polygonAxis.separation = s;\n        break;\n      }\n\n      // Adjacency\n      if (Vec2.dot(n, perp) >= 0.0) {\n        if (Vec2.dot(Vec2.sub(n, upperLimit), normal) < -Settings.angularSlop) {\n          continue;\n        }\n      } else {\n        if (Vec2.dot(Vec2.sub(n, lowerLimit), normal) < -Settings.angularSlop) {\n          continue;\n        }\n      }\n\n      if (s > polygonAxis.separation) {\n        polygonAxis.type = e_edgeB;\n        polygonAxis.index = i;\n        polygonAxis.separation = s;\n      }\n    }\n  }\n\n  if (polygonAxis.type != e_unknown && polygonAxis.separation > radius) {\n    return;\n  }\n\n  // Use hysteresis for jitter reduction.\n  var k_relativeTol = 0.98;\n  var k_absoluteTol = 0.001;\n\n  var primaryAxis;\n  if (polygonAxis.type == e_unknown) {\n    primaryAxis = edgeAxis;\n  } else if (polygonAxis.separation > k_relativeTol * edgeAxis.separation + k_absoluteTol) {\n    primaryAxis = polygonAxis;\n  } else {\n    primaryAxis = edgeAxis;\n  }\n\n  var ie = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n\n  if (primaryAxis.type == e_edgeA) {\n    manifold.type = Manifold.e_faceA;\n\n    // Search for the polygon normal that is most anti-parallel to the edge\n    // normal.\n    var bestIndex = 0;\n    var bestValue = Vec2.dot(normal, polygonBA.normals[0]);\n    for (var i = 1; i < polygonBA.count; ++i) {\n      var value = Vec2.dot(normal, polygonBA.normals[i]);\n      if (value < bestValue) {\n        bestValue = value;\n        bestIndex = i;\n      }\n    }\n\n    var i1 = bestIndex;\n    var i2 = i1 + 1 < polygonBA.count ? i1 + 1 : 0;\n\n    ie[0].v = polygonBA.vertices[i1];\n    ie[0].id.cf.indexA = 0;\n    ie[0].id.cf.indexB = i1;\n    ie[0].id.cf.typeA = Manifold.e_face;\n    ie[0].id.cf.typeB = Manifold.e_vertex;\n\n    ie[1].v = polygonBA.vertices[i2];\n    ie[1].id.cf.indexA = 0;\n    ie[1].id.cf.indexB = i2;\n    ie[1].id.cf.typeA = Manifold.e_face;\n    ie[1].id.cf.typeB = Manifold.e_vertex;\n\n    if (front) {\n      rf.i1 = 0;\n      rf.i2 = 1;\n      rf.v1 = v1;\n      rf.v2 = v2;\n      rf.normal.set(normal1);\n    } else {\n      rf.i1 = 1;\n      rf.i2 = 0;\n      rf.v1 = v2;\n      rf.v2 = v1;\n      rf.normal.setMul(-1, normal1);\n    }\n  } else {\n    manifold.type = Manifold.e_faceB;\n\n    ie[0].v = v1;\n    ie[0].id.cf.indexA = 0;\n    ie[0].id.cf.indexB = primaryAxis.index;\n    ie[0].id.cf.typeA = Manifold.e_vertex;\n    ie[0].id.cf.typeB = Manifold.e_face;\n\n    ie[1].v = v2;\n    ie[1].id.cf.indexA = 0;\n    ie[1].id.cf.indexB = primaryAxis.index;\n    ie[1].id.cf.typeA = Manifold.e_vertex;\n    ie[1].id.cf.typeB = Manifold.e_face;\n\n    rf.i1 = primaryAxis.index;\n    rf.i2 = rf.i1 + 1 < polygonBA.count ? rf.i1 + 1 : 0;\n    rf.v1 = polygonBA.vertices[rf.i1];\n    rf.v2 = polygonBA.vertices[rf.i2];\n    rf.normal.set(polygonBA.normals[rf.i1]);\n  }\n\n  rf.sideNormal1.set(rf.normal.y, -rf.normal.x);\n  rf.sideNormal2.setMul(-1, rf.sideNormal1);\n  rf.sideOffset1 = Vec2.dot(rf.sideNormal1, rf.v1);\n  rf.sideOffset2 = Vec2.dot(rf.sideNormal2, rf.v2);\n\n  // Clip incident edge against extruded edge1 side edges.\n  var clipPoints1 = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n  var clipPoints2 = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n\n  var np;\n\n  // Clip to box side 1\n  np = Manifold.clipSegmentToLine(clipPoints1, ie, rf.sideNormal1, rf.sideOffset1, rf.i1);\n\n  if (np < Settings.maxManifoldPoints) {\n    return;\n  }\n\n  // Clip to negative box side 1\n  np = Manifold.clipSegmentToLine(clipPoints2, clipPoints1, rf.sideNormal2, rf.sideOffset2, rf.i2);\n\n  if (np < Settings.maxManifoldPoints) {\n    return;\n  }\n\n  // Now clipPoints2 contains the clipped points.\n  if (primaryAxis.type == e_edgeA) {\n    manifold.localNormal = Vec2.clone(rf.normal);\n    manifold.localPoint = Vec2.clone(rf.v1);\n  } else {\n    manifold.localNormal = Vec2.clone(polygonB.m_normals[rf.i1]);\n    manifold.localPoint = Vec2.clone(polygonB.m_vertices[rf.i1]);\n  }\n\n  var pointCount = 0;\n  for (var i = 0; i < Settings.maxManifoldPoints; ++i) {\n    var separation = Vec2.dot(rf.normal, Vec2.sub(clipPoints2[i].v, rf.v1));\n\n    if (separation <= radius) {\n      var cp = manifold.points[pointCount]; // ManifoldPoint\n\n      if (primaryAxis.type == e_edgeA) {\n        cp.localPoint = Transform.mulT(xf, clipPoints2[i].v);\n        cp.id = clipPoints2[i].id;\n      } else {\n        cp.localPoint = clipPoints2[i].v;\n        cp.id.cf.typeA = clipPoints2[i].id.cf.typeB;\n        cp.id.cf.typeB = clipPoints2[i].id.cf.typeA;\n        cp.id.cf.indexA = clipPoints2[i].id.cf.indexB;\n        cp.id.cf.indexB = clipPoints2[i].id.cf.indexA;\n      }\n\n      ++pointCount;\n    }\n  }\n\n  manifold.pointCount = pointCount;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = DistanceJoint;\n\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nDistanceJoint.TYPE = 'distance-joint';\n\nDistanceJoint._super = Joint;\nDistanceJoint.prototype = create(DistanceJoint._super.prototype);\n\n/**\n * @typedef {Object} DistanceJointDef\n *\n * Distance joint definition. This requires defining an anchor point on both\n * bodies and the non-zero length of the distance joint. The definition uses\n * local anchor points so that the initial configuration can violate the\n * constraint slightly. This helps when saving and loading a game. Warning: Do\n * not use a zero or short length.\n * \n * @prop {float} frequencyHz The mass-spring-damper frequency in Hertz. A value\n *       of 0 disables softness.\n * @prop {float} dampingRatio The damping ratio. 0 = no damping, 1 = critical\n *       damping.\n *\n * @prop {Vec2} def.localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} def.localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {number} def.length Distance length.\n */\n\nvar DEFAULTS = {\n  frequencyHz : 0.0,\n  dampingRatio : 0.0\n};\n\n/**\n * A distance joint constrains two points on two bodies to remain at a fixed\n * distance from each other. You can view this as a massless, rigid rod.\n *\n * @param {DistanceJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Vec2} anchorA Anchor A in global coordination.\n * @param {Vec2} anchorB Anchor B in global coordination.\n */\nfunction DistanceJoint(def, bodyA, bodyB, anchorA, anchorB) {\n  if (!(this instanceof DistanceJoint)) {\n    return new DistanceJoint(def, bodyA, bodyB, anchorA, anchorB);\n  }\n\n  // order of constructor arguments is changed in v0.2\n  if (bodyB && anchorA && ('m_type' in anchorA) && ('x' in bodyB) && ('y' in bodyB)) {\n    var temp = bodyB;\n    bodyB = anchorA;\n    anchorA = temp;\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = DistanceJoint.TYPE;\n\n  // Solver shared\n  this.m_localAnchorA = anchorA ? bodyA.getLocalPoint(anchorA) : def.localAnchorA || Vec2.zero();\n  this.m_localAnchorB = anchorB ? bodyB.getLocalPoint(anchorB) : def.localAnchorB || Vec2.zero();\n  this.m_length = Math.isFinite(def.length) ? def.length :\n    Vec2.distance(bodyA.getWorldPoint(this.m_localAnchorA), bodyB.getWorldPoint(this.m_localAnchorB));\n  this.m_frequencyHz = def.frequencyHz;\n  this.m_dampingRatio = def.dampingRatio;\n  this.m_impulse = 0.0;\n  this.m_gamma = 0.0;\n  this.m_bias = 0.0;\n\n  // Solver temp\n  this.m_u; // Vec2\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA;\n  this.m_invMassB;\n  this.m_invIA;\n  this.m_invIB;\n  this.m_mass;\n\n  // 1-D constrained system\n  // m (v2 - v1) = lambda\n  // v2 + (beta/h) * x1 + gamma * lambda = 0, gamma has units of inverse mass.\n  // x2 = x1 + h * v2\n\n  // 1-D mass-damper-spring system\n  // m (v2 - v1) + h * d * v2 + h * k *\n\n  // C = norm(p2 - p1) - L\n  // u = (p2 - p1) / norm(p2 - p1)\n  // Cdot = dot(u, v2 + cross(w2, r2) - v1 - cross(w1, r1))\n  // J = [-u -cross(r1, u) u cross(r2, u)]\n  // K = J * invM * JT\n  // = invMass1 + invI1 * cross(r1, u)^2 + invMass2 + invI2 * cross(r2, u)^2\n};\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nDistanceJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nDistanceJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * Set/get the natural length. Manipulating the length can lead to non-physical\n * behavior when the frequency is zero.\n */\nDistanceJoint.prototype.setLength = function(length) {\n  this.m_length = length;\n}\n\nDistanceJoint.prototype.getLength = function() {\n  return this.m_length;\n}\n\nDistanceJoint.prototype.setFrequency = function(hz) {\n  this.m_frequencyHz = hz;\n}\n\nDistanceJoint.prototype.getFrequency = function() {\n  return this.m_frequencyHz;\n}\n\nDistanceJoint.prototype.setDampingRatio = function(ratio) {\n  this.m_dampingRatio = ratio;\n}\n\nDistanceJoint.prototype.getDampingRatio = function() {\n  return this.m_dampingRatio;\n}\n\nDistanceJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nDistanceJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nDistanceJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(this.m_impulse, this.m_u).mul(inv_dt);\n}\n\nDistanceJoint.prototype.getReactionTorque = function(inv_dt) {\n  return 0.0;\n}\n\nDistanceJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  this.m_rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n  this.m_u = Vec2.sub(Vec2.add(cB, this.m_rB), Vec2.add(cA, this.m_rA));\n\n  // Handle singularity.\n  var length = this.m_u.length();\n  if (length > Settings.linearSlop) {\n    this.m_u.mul(1.0 / length);\n  } else {\n    this.m_u.set(0.0, 0.0);\n  }\n\n  var crAu = Vec2.cross(this.m_rA, this.m_u);\n  var crBu = Vec2.cross(this.m_rB, this.m_u);\n  var invMass = this.m_invMassA + this.m_invIA * crAu * crAu + this.m_invMassB\n      + this.m_invIB * crBu * crBu;\n\n  // Compute the effective mass matrix.\n  this.m_mass = invMass != 0.0 ? 1.0 / invMass : 0.0;\n\n  if (this.m_frequencyHz > 0.0) {\n    var C = length - this.m_length;\n\n    // Frequency\n    var omega = 2.0 * Math.PI * this.m_frequencyHz;\n\n    // Damping coefficient\n    var d = 2.0 * this.m_mass * this.m_dampingRatio * omega;\n\n    // Spring stiffness\n    var k = this.m_mass * omega * omega;\n\n    // magic formulas\n    var h = step.dt;\n    this.m_gamma = h * (d + h * k);\n    this.m_gamma = this.m_gamma != 0.0 ? 1.0 / this.m_gamma : 0.0;\n    this.m_bias = C * h * k * this.m_gamma;\n\n    invMass += this.m_gamma;\n    this.m_mass = invMass != 0.0 ? 1.0 / invMass : 0.0;\n  } else {\n    this.m_gamma = 0.0;\n    this.m_bias = 0.0;\n  }\n\n  if (step.warmStarting) {\n    // Scale the impulse to support a variable time step.\n    this.m_impulse *= step.dtRatio;\n\n    var P = Vec2.mul(this.m_impulse, this.m_u);\n\n    vA.subMul(this.m_invMassA, P);\n    wA -= this.m_invIA * Vec2.cross(this.m_rA, P);\n\n    vB.addMul(this.m_invMassB, P);\n    wB += this.m_invIB * Vec2.cross(this.m_rB, P);\n\n  } else {\n    this.m_impulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nDistanceJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  // Cdot = dot(u, v + cross(w, r))\n  var vpA = Vec2.add(vA, Vec2.cross(wA, this.m_rA));\n  var vpB = Vec2.add(vB, Vec2.cross(wB, this.m_rB));\n  var Cdot = Vec2.dot(this.m_u, vpB) - Vec2.dot(this.m_u, vpA);\n\n  var impulse = -this.m_mass\n      * (Cdot + this.m_bias + this.m_gamma * this.m_impulse);\n  this.m_impulse += impulse;\n\n  var P = Vec2.mul(impulse, this.m_u);\n  vA.subMul(this.m_invMassA, P);\n  wA -= this.m_invIA * Vec2.cross(this.m_rA, P);\n  vB.addMul(this.m_invMassB, P);\n  wB += this.m_invIB * Vec2.cross(this.m_rB, P);\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nDistanceJoint.prototype.solvePositionConstraints = function(step) {\n  if (this.m_frequencyHz > 0.0) {\n    // There is no position correction for soft distance constraints.\n    return true;\n  }\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  var rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_localCenterA);\n  var rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_localCenterB);\n  var u = Vec2.sub(Vec2.add(cB, rB), Vec2.add(cA, rA));\n\n  var length = u.normalize();\n  var C = length - this.m_length;\n  C = Math\n      .clamp(C, -Settings.maxLinearCorrection, Settings.maxLinearCorrection);\n\n  var impulse = -this.m_mass * C;\n  var P = Vec2.mul(impulse, u);\n\n  cA.subMul(this.m_invMassA, P);\n  aA -= this.m_invIA * Vec2.cross(rA, P);\n  cB.addMul(this.m_invMassB, P);\n  aB += this.m_invIB * Vec2.cross(rB, P);\n\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n\n  return Math.abs(C) < Settings.linearSlop;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = FrictionJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nFrictionJoint.TYPE = 'friction-joint';\n\nFrictionJoint._super = Joint;\nFrictionJoint.prototype = create(FrictionJoint._super.prototype);\n\n/**\n * @typedef {Object} FrictionJointDef\n *\n * Friction joint definition.\n * \n * @prop {float} maxForce The maximum friction force in N.\n * @prop {float} maxTorque The maximum friction torque in N-m.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n */\n\nvar DEFAULTS = {\n  maxForce : 0.0,\n  maxTorque : 0.0,\n};\n\n/**\n * Friction joint. This is used for top-down friction. It provides 2D\n * translational friction and angular friction.\n *\n * @param {FrictionJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Vec2} anchor Anchor in global coordination.\n */\nfunction FrictionJoint(def, bodyA, bodyB, anchor) {\n  if (!(this instanceof FrictionJoint)) {\n    return new FrictionJoint(def, bodyA, bodyB, anchor);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = FrictionJoint.TYPE;\n\n  this.m_localAnchorA = anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.zero();\n  this.m_localAnchorB = anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.zero();\n\n  // Solver shared\n  this.m_linearImpulse = Vec2.zero();\n  this.m_angularImpulse = 0.0;\n  this.m_maxForce = def.maxForce;\n  this.m_maxTorque = def.maxTorque;\n\n  // Solver temp\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_linearMass; // Mat22\n  this.m_angularMass; // float\n\n  // Point-to-point constraint\n  // Cdot = v2 - v1\n  // = v2 + cross(w2, r2) - v1 - cross(w1, r1)\n  // J = [-I -r1_skew I r2_skew ]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n\n  // Angle constraint\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  // K = invI1 + invI2\n}\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nFrictionJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nFrictionJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * Set the maximum friction force in N.\n */\nFrictionJoint.prototype.setMaxForce = function(force) {\n  _ASSERT && common.assert(Math.isFinite(force) && force >= 0.0);\n  this.m_maxForce = force;\n}\n\n/**\n * Get the maximum friction force in N.\n */\nFrictionJoint.prototype.getMaxForce = function() {\n  return this.m_maxForce;\n}\n\n/**\n * Set the maximum friction torque in N*m.\n */\nFrictionJoint.prototype.setMaxTorque = function(torque) {\n  _ASSERT && common.assert(Math.isFinite(torque) && torque >= 0.0);\n  this.m_maxTorque = torque;\n}\n\n/**\n * Get the maximum friction torque in N*m.\n */\nFrictionJoint.prototype.getMaxTorque = function() {\n  return this.m_maxTorque;\n}\n\nFrictionJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nFrictionJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nFrictionJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(inv_dt, this.m_linearImpulse);\n}\n\nFrictionJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_angularImpulse;\n}\n\nFrictionJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA), qB = Rot.neo(aB);\n\n  // Compute the effective mass matrix.\n  this.m_rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // J = [-I -r1_skew I r2_skew]\n  // [ 0 -1 0 1]\n  // r_skew = [-ry; rx]\n\n  // Matlab\n  // K = [ mA+r1y^2*iA+mB+r2y^2*iB, -r1y*iA*r1x-r2y*iB*r2x, -r1y*iA-r2y*iB]\n  // [ -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB, r1x*iA+r2x*iB]\n  // [ -r1y*iA-r2y*iB, r1x*iA+r2x*iB, iA+iB]\n\n  var mA = this.m_invMassA, mB = this.m_invMassB; // float\n  var iA = this.m_invIA, iB = this.m_invIB; // float\n\n  var K = new Mat22()\n  K.ex.x = mA + mB + iA * this.m_rA.y * this.m_rA.y + iB * this.m_rB.y\n      * this.m_rB.y;\n  K.ex.y = -iA * this.m_rA.x * this.m_rA.y - iB * this.m_rB.x * this.m_rB.y;\n  K.ey.x = K.ex.y;\n  K.ey.y = mA + mB + iA * this.m_rA.x * this.m_rA.x + iB * this.m_rB.x\n      * this.m_rB.x;\n\n  this.m_linearMass = K.getInverse();\n\n  this.m_angularMass = iA + iB;\n  if (this.m_angularMass > 0.0) {\n    this.m_angularMass = 1.0 / this.m_angularMass;\n  }\n\n  if (step.warmStarting) {\n    // Scale impulses to support a variable time step.\n    this.m_linearImpulse.mul(step.dtRatio);\n    this.m_angularImpulse *= step.dtRatio;\n\n    var P = Vec2.neo(this.m_linearImpulse.x, this.m_linearImpulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + this.m_angularImpulse);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + this.m_angularImpulse);\n\n  } else {\n    this.m_linearImpulse.setZero();\n    this.m_angularImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nFrictionJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var mA = this.m_invMassA, mB = this.m_invMassB; // float\n  var iA = this.m_invIA, iB = this.m_invIB; // float\n\n  var h = step.dt; // float\n\n  // Solve angular friction\n  {\n    var Cdot = wB - wA; // float\n    var impulse = -this.m_angularMass * Cdot; // float\n\n    var oldImpulse = this.m_angularImpulse; // float\n    var maxImpulse = h * this.m_maxTorque; // float\n    this.m_angularImpulse = Math.clamp(this.m_angularImpulse + impulse,\n        -maxImpulse, maxImpulse);\n    impulse = this.m_angularImpulse - oldImpulse;\n\n    wA -= iA * impulse;\n    wB += iB * impulse;\n  }\n\n  // Solve linear friction\n  {\n    var Cdot = Vec2.sub(Vec2.add(vB, Vec2.cross(wB, this.m_rB)), Vec2.add(vA,\n        Vec2.cross(wA, this.m_rA))); // Vec2\n\n    var impulse = Vec2.neg(Mat22.mulVec2(this.m_linearMass, Cdot)); // Vec2\n    var oldImpulse = this.m_linearImpulse; // Vec2\n    this.m_linearImpulse.add(impulse);\n\n    var maxImpulse = h * this.m_maxForce; // float\n\n    if (this.m_linearImpulse.lengthSquared() > maxImpulse * maxImpulse) {\n      this.m_linearImpulse.normalize();\n      this.m_linearImpulse.mul(maxImpulse);\n    }\n\n    impulse = Vec2.sub(this.m_linearImpulse, oldImpulse);\n\n    vA.subMul(mA, impulse);\n    wA -= iA * Vec2.cross(this.m_rA, impulse);\n\n    vB.addMul(mB, impulse);\n    wB += iB * Vec2.cross(this.m_rB, impulse);\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nFrictionJoint.prototype.solvePositionConstraints = function(step) {\n  return true;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = GearJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nvar RevoluteJoint = require('./RevoluteJoint');\nvar PrismaticJoint = require('./PrismaticJoint');\n\nGearJoint.TYPE = 'gear-joint';\n\nGearJoint._super = Joint;\nGearJoint.prototype = create(GearJoint._super.prototype);\n\n/**\n * @typedef {Object} GearJointDef\n *\n * Gear joint definition.\n *\n * @prop {float} ratio The gear ratio. See GearJoint for explanation.\n *\n * @prop {RevoluteJoint|PrismaticJoint} joint1 The first revolute/prismatic\n *          joint attached to the gear joint.\n * @prop {PrismaticJoint|RevoluteJoint} joint2 The second prismatic/revolute\n *          joint attached to the gear joint.\n */\n\nvar DEFAULTS = {\n  ratio : 1.0\n};\n\n/**\n * A gear joint is used to connect two joints together. Either joint can be a\n * revolute or prismatic joint. You specify a gear ratio to bind the motions\n * together: coordinate1 + ratio * coordinate2 = constant\n * \n * The ratio can be negative or positive. If one joint is a revolute joint and\n * the other joint is a prismatic joint, then the ratio will have units of\n * length or units of 1/length. Warning: You have to manually destroy the gear\n * joint if joint1 or joint2 is destroyed.\n * \n * This definition requires two existing revolute or prismatic joints (any\n * combination will work).\n *\n * @param {GearJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction GearJoint(def, bodyA, bodyB, joint1, joint2, ratio) {\n  if (!(this instanceof GearJoint)) {\n    return new GearJoint(def, bodyA, bodyB, joint1, joint2, ratio);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = GearJoint.TYPE;\n\n  _ASSERT && common.assert(joint1.m_type === RevoluteJoint.TYPE\n      || joint1.m_type === PrismaticJoint.TYPE);\n  _ASSERT && common.assert(joint2.m_type === RevoluteJoint.TYPE\n      || joint2.m_type === PrismaticJoint.TYPE);\n\n  this.m_joint1 = joint1 ? joint1 : def.joint1;\n  this.m_joint2 = joint2 ? joint2 : def.joint2;\n  this.m_ratio = Math.isFinite(ratio) ? ratio : def.ratio;\n\n  this.m_type1 = this.m_joint1.getType();\n  this.m_type2 = this.m_joint2.getType();\n\n  // joint1 connects body A to body C\n  // joint2 connects body B to body D\n\n  var coordinateA, coordinateB; // float\n\n  // TODO_ERIN there might be some problem with the joint edges in Joint.\n\n  this.m_bodyC = this.m_joint1.getBodyA();\n  this.m_bodyA = this.m_joint1.getBodyB();\n\n  // Get geometry of joint1\n  var xfA = this.m_bodyA.m_xf;\n  var aA = this.m_bodyA.m_sweep.a;\n  var xfC = this.m_bodyC.m_xf;\n  var aC = this.m_bodyC.m_sweep.a;\n\n  if (this.m_type1 === RevoluteJoint.TYPE) {\n    var revolute = this.m_joint1;// RevoluteJoint\n    this.m_localAnchorC = revolute.m_localAnchorA;\n    this.m_localAnchorA = revolute.m_localAnchorB;\n    this.m_referenceAngleA = revolute.m_referenceAngle;\n    this.m_localAxisC = Vec2.zero();\n\n    coordinateA = aA - aC - this.m_referenceAngleA;\n  } else {\n    var prismatic = this.m_joint1; // PrismaticJoint\n    this.m_localAnchorC = prismatic.m_localAnchorA;\n    this.m_localAnchorA = prismatic.m_localAnchorB;\n    this.m_referenceAngleA = prismatic.m_referenceAngle;\n    this.m_localAxisC = prismatic.m_localXAxisA;\n\n    var pC = this.m_localAnchorC;\n    var pA = Rot.mulTVec2(xfC.q, Vec2.add(Rot.mul(xfA.q, this.m_localAnchorA), Vec2.sub(xfA.p, xfC.p)));\n    coordinateA = Vec2.dot(pA, this.m_localAxisC) - Vec2.dot(pC, this.m_localAxisC);\n  }\n\n  this.m_bodyD = this.m_joint2.getBodyA();\n  this.m_bodyB = this.m_joint2.getBodyB();\n\n  // Get geometry of joint2\n  var xfB = this.m_bodyB.m_xf;\n  var aB = this.m_bodyB.m_sweep.a;\n  var xfD = this.m_bodyD.m_xf;\n  var aD = this.m_bodyD.m_sweep.a;\n\n  if (this.m_type2 === RevoluteJoint.TYPE) {\n    var revolute = this.m_joint2; // RevoluteJoint\n    this.m_localAnchorD = revolute.m_localAnchorA;\n    this.m_localAnchorB = revolute.m_localAnchorB;\n    this.m_referenceAngleB = revolute.m_referenceAngle;\n    this.m_localAxisD = Vec2.zero();\n\n    coordinateB = aB - aD - this.m_referenceAngleB;\n  } else {\n    var prismatic = this.m_joint2; // PrismaticJoint\n    this.m_localAnchorD = prismatic.m_localAnchorA;\n    this.m_localAnchorB = prismatic.m_localAnchorB;\n    this.m_referenceAngleB = prismatic.m_referenceAngle;\n    this.m_localAxisD = prismatic.m_localXAxisA;\n\n    var pD = this.m_localAnchorD;\n    var pB = Rot.mulTVec2(xfD.q, Vec2.add(Rot.mul(xfB.q, this.m_localAnchorB), Vec2.sub(xfB.p, xfD.p)));\n    coordinateB = Vec2.dot(pB, this.m_localAxisD) - Vec2.dot(pD, this.m_localAxisD);\n  }\n\n  this.m_constant = coordinateA + this.m_ratio * coordinateB;\n\n  this.m_impulse = 0.0;\n\n  // Solver temp\n  this.m_lcA, this.m_lcB, this.m_lcC, this.m_lcD; // Vec2\n  this.m_mA, this.m_mB, this.m_mC, this.m_mD; // float\n  this.m_iA, this.m_iB, this.m_iC, this.m_iD; // float\n  this.m_JvAC, this.m_JvBD; // Vec2\n  this.m_JwA, this.m_JwB, this.m_JwC, this.m_JwD; // float\n  this.m_mass; // float\n\n  // Gear Joint:\n  // C0 = (coordinate1 + ratio * coordinate2)_initial\n  // C = (coordinate1 + ratio * coordinate2) - C0 = 0\n  // J = [J1 ratio * J2]\n  // K = J * invM * JT\n  // = J1 * invM1 * J1T + ratio * ratio * J2 * invM2 * J2T\n  //\n  // Revolute:\n  // coordinate = rotation\n  // Cdot = angularVelocity\n  // J = [0 0 1]\n  // K = J * invM * JT = invI\n  //\n  // Prismatic:\n  // coordinate = dot(p - pg, ug)\n  // Cdot = dot(v + cross(w, r), ug)\n  // J = [ug cross(r, ug)]\n  // K = J * invM * JT = invMass + invI * cross(r, ug)^2\n};\n\n/**\n * Get the first joint.\n */\nGearJoint.prototype.getJoint1 = function() {\n  return this.m_joint1;\n}\n\n/**\n * Get the second joint.\n */\nGearJoint.prototype.getJoint2 = function() {\n  return this.m_joint2;\n}\n\n/**\n * Set/Get the gear ratio.\n */\nGearJoint.prototype.setRatio = function(ratio) {\n  _ASSERT && common.assert(Math.isFinite(ratio));\n  this.m_ratio = ratio;\n}\n\nGearJoint.prototype.getRatio = function() {\n  return this.m_ratio;\n}\n\nGearJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nGearJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nGearJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(this.m_impulse, this.m_JvAC).mul(inv_dt);\n}\n\nGearJoint.prototype.getReactionTorque = function(inv_dt) {\n  var L = this.m_impulse * this.m_JwA; // float\n  return inv_dt * L;\n}\n\nGearJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_lcA = this.m_bodyA.m_sweep.localCenter;\n  this.m_lcB = this.m_bodyB.m_sweep.localCenter;\n  this.m_lcC = this.m_bodyC.m_sweep.localCenter;\n  this.m_lcD = this.m_bodyD.m_sweep.localCenter;\n  this.m_mA = this.m_bodyA.m_invMass;\n  this.m_mB = this.m_bodyB.m_invMass;\n  this.m_mC = this.m_bodyC.m_invMass;\n  this.m_mD = this.m_bodyD.m_invMass;\n  this.m_iA = this.m_bodyA.m_invI;\n  this.m_iB = this.m_bodyB.m_invI;\n  this.m_iC = this.m_bodyC.m_invI;\n  this.m_iD = this.m_bodyD.m_invI;\n\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var aC = this.m_bodyC.c_position.a;\n  var vC = this.m_bodyC.c_velocity.v;\n  var wC = this.m_bodyC.c_velocity.w;\n\n  var aD = this.m_bodyD.c_position.a;\n  var vD = this.m_bodyD.c_velocity.v;\n  var wD = this.m_bodyD.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n  var qC = Rot.neo(aC);\n  var qD = Rot.neo(aD);\n\n  this.m_mass = 0.0;\n\n  if (this.m_type1 == RevoluteJoint.TYPE) {\n    this.m_JvAC = Vec2.zero();\n    this.m_JwA = 1.0;\n    this.m_JwC = 1.0;\n    this.m_mass += this.m_iA + this.m_iC;\n  } else {\n    var u = Rot.mulVec2(qC, this.m_localAxisC); // Vec2\n    var rC = Rot.mulSub(qC, this.m_localAnchorC, this.m_lcC); // Vec2\n    var rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_lcA); // Vec2\n    this.m_JvAC = u;\n    this.m_JwC = Vec2.cross(rC, u);\n    this.m_JwA = Vec2.cross(rA, u);\n    this.m_mass += this.m_mC + this.m_mA + this.m_iC * this.m_JwC * this.m_JwC + this.m_iA * this.m_JwA * this.m_JwA;\n  }\n\n  if (this.m_type2 == RevoluteJoint.TYPE) {\n    this.m_JvBD = Vec2.zero();\n    this.m_JwB = this.m_ratio;\n    this.m_JwD = this.m_ratio;\n    this.m_mass += this.m_ratio * this.m_ratio * (this.m_iB + this.m_iD);\n  } else {\n    var u = Rot.mulVec2(qD, this.m_localAxisD); // Vec2\n    var rD = Rot.mulSub(qD, this.m_localAnchorD, this.m_lcD); // Vec2\n    var rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_lcB); // Vec2\n    this.m_JvBD = Vec2.mul(this.m_ratio, u);\n    this.m_JwD = this.m_ratio * Vec2.cross(rD, u);\n    this.m_JwB = this.m_ratio * Vec2.cross(rB, u);\n    this.m_mass += this.m_ratio * this.m_ratio * (this.m_mD + this.m_mB) + this.m_iD * this.m_JwD * this.m_JwD + this.m_iB * this.m_JwB * this.m_JwB;\n  }\n\n  // Compute effective mass.\n  this.m_mass = this.m_mass > 0.0 ? 1.0 / this.m_mass : 0.0;\n\n  if (step.warmStarting) {\n    vA.addMul(this.m_mA * this.m_impulse, this.m_JvAC);\n    wA += this.m_iA * this.m_impulse * this.m_JwA;\n    \n    vB.addMul(this.m_mB * this.m_impulse, this.m_JvBD);\n    wB += this.m_iB * this.m_impulse * this.m_JwB;\n    \n    vC.subMul(this.m_mC * this.m_impulse, this.m_JvAC);\n    wC -= this.m_iC * this.m_impulse * this.m_JwC;\n  \n    vD.subMul(this.m_mD * this.m_impulse, this.m_JvBD);\n    wD -= this.m_iD * this.m_impulse * this.m_JwD;\n\n  } else {\n    this.m_impulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n  this.m_bodyC.c_velocity.v.set(vC);\n  this.m_bodyC.c_velocity.w = wC;\n  this.m_bodyD.c_velocity.v.set(vD);\n  this.m_bodyD.c_velocity.w = wD;\n}\n\nGearJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n  var vC = this.m_bodyC.c_velocity.v;\n  var wC = this.m_bodyC.c_velocity.w;\n  var vD = this.m_bodyD.c_velocity.v;\n  var wD = this.m_bodyD.c_velocity.w;\n\n  var Cdot = Vec2.dot(this.m_JvAC, vA) - Vec2.dot(this.m_JvAC, vC)\n      + Vec2.dot(this.m_JvBD, vB) - Vec2.dot(this.m_JvBD, vD); // float\n  Cdot += (this.m_JwA * wA - this.m_JwC * wC)\n      + (this.m_JwB * wB - this.m_JwD * wD);\n\n  var impulse = -this.m_mass * Cdot; // float\n  this.m_impulse += impulse;\n\n  vA.addMul(this.m_mA * impulse, this.m_JvAC);\n  wA += this.m_iA * impulse * this.m_JwA;\n  vB.addMul(this.m_mB * impulse, this.m_JvBD);\n  wB += this.m_iB * impulse * this.m_JwB;\n  vC.subMul(this.m_mC * impulse, this.m_JvAC);\n  wC -= this.m_iC * impulse * this.m_JwC;\n  vD.subMul(this.m_mD * impulse, this.m_JvBD);\n  wD -= this.m_iD * impulse * this.m_JwD;\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n  this.m_bodyC.c_velocity.v.set(vC);\n  this.m_bodyC.c_velocity.w = wC;\n  this.m_bodyD.c_velocity.v.set(vD);\n  this.m_bodyD.c_velocity.w = wD;\n}\n\nGearJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var cC = this.m_bodyC.c_position.c;\n  var aC = this.m_bodyC.c_position.a;\n  var cD = this.m_bodyD.c_position.c;\n  var aD = this.m_bodyD.c_position.a;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n  var qC = Rot.neo(aC);\n  var qD = Rot.neo(aD);\n\n  var linearError = 0.0; // float\n\n  var coordinateA, coordinateB; // float\n\n  var JvAC, JvBD; // Vec2\n  var JwA, JwB, JwC, JwD; // float\n  var mass = 0.0; // float\n\n  if (this.m_type1 == RevoluteJoint.TYPE) {\n    JvAC = Vec2.zero();\n    JwA = 1.0;\n    JwC = 1.0;\n    mass += this.m_iA + this.m_iC;\n\n    coordinateA = aA - aC - this.m_referenceAngleA;\n  } else {\n    var u = Rot.mulVec2(qC, this.m_localAxisC); // Vec2\n    var rC = Rot.mulSub(qC, this.m_localAnchorC, this.m_lcC); // Vec2\n    var rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_lcA); // Vec2\n    JvAC = u;\n    JwC = Vec2.cross(rC, u);\n    JwA = Vec2.cross(rA, u);\n    mass += this.m_mC + this.m_mA + this.m_iC * JwC * JwC + this.m_iA * JwA * JwA;\n\n    var pC = Vec2.sub(this.m_localAnchorC, this.m_lcC); // Vec2\n    var pA = Rot.mulTVec2(qC, Vec2.add(rA, Vec2.sub(cA, cC))); // Vec2\n    coordinateA = Vec2.dot(Vec2.sub(pA, pC), this.m_localAxisC);\n  }\n\n  if (this.m_type2 == RevoluteJoint.TYPE) {\n    JvBD = Vec2.zero();\n    JwB = this.m_ratio;\n    JwD = this.m_ratio;\n    mass += this.m_ratio * this.m_ratio * (this.m_iB + this.m_iD);\n\n    coordinateB = aB - aD - this.m_referenceAngleB;\n  } else {\n    var u = Rot.mulVec2(qD, this.m_localAxisD);\n    var rD = Rot.mulSub(qD, this.m_localAnchorD, this.m_lcD);\n    var rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_lcB);\n    JvBD = Vec2.mul(this.m_ratio, u);\n    JwD = this.m_ratio * Vec2.cross(rD, u);\n    JwB = this.m_ratio * Vec2.cross(rB, u);\n    mass += this.m_ratio * this.m_ratio * (this.m_mD + this.m_mB) + this.m_iD\n        * JwD * JwD + this.m_iB * JwB * JwB;\n\n    var pD = Vec2.sub(this.m_localAnchorD, this.m_lcD); // Vec2\n    var pB = Rot.mulTVec2(qD, Vec2.add(rB, Vec2.sub(cB, cD))); // Vec2\n    coordinateB = Vec2.dot(pB, this.m_localAxisD)\n        - Vec2.dot(pD, this.m_localAxisD);\n  }\n\n  var C = (coordinateA + this.m_ratio * coordinateB) - this.m_constant; // float\n\n  var impulse = 0.0; // float\n  if (mass > 0.0) {\n    impulse = -C / mass;\n  }\n\n  cA.addMul(this.m_mA * impulse, JvAC);\n  aA += this.m_iA * impulse * JwA;\n  cB.addMul(this.m_mB * impulse, JvBD);\n  aB += this.m_iB * impulse * JwB;\n  cC.subMul(this.m_mC * impulse, JvAC);\n  aC -= this.m_iC * impulse * JwC;\n  cD.subMul(this.m_mD * impulse, JvBD);\n  aD -= this.m_iD * impulse * JwD;\n\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n  this.m_bodyC.c_position.c.set(cC);\n  this.m_bodyC.c_position.a = aC;\n  this.m_bodyD.c_position.c.set(cD);\n  this.m_bodyD.c_position.a = aD;\n\n  // TODO_ERIN not implemented\n  return linearError < Settings.linearSlop;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = MotorJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nMotorJoint.TYPE = 'motor-joint';\n\nMotorJoint._super = Joint;\nMotorJoint.prototype = create(MotorJoint._super.prototype);\n\n/**\n * @typedef {Object} MotorJointDef\n *\n * Motor joint definition.\n * \n * @prop {float} angularOffset The bodyB angle minus bodyA angle in radians.\n * @prop {float} maxForce The maximum motor force in N.\n * @prop {float} maxTorque The maximum motor torque in N-m.\n * @prop {float} correctionFactor Position correction factor in the range [0,1].\n * @prop {Vec2} linearOffset Position of bodyB minus the position of bodyA, in\n *       bodyA's frame, in meters.\n */\n\nvar DEFAULTS = {\n  maxForce : 1.0,\n  maxTorque : 1.0,\n  correctionFactor : 0.3\n};\n\n/**\n * A motor joint is used to control the relative motion between two bodies. A\n * typical usage is to control the movement of a dynamic body with respect to\n * the ground.\n *\n * @param {MotorJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction MotorJoint(def, bodyA, bodyB) {\n  if (!(this instanceof MotorJoint)) {\n    return new MotorJoint(def, bodyA, bodyB);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = MotorJoint.TYPE;\n\n  this.m_linearOffset = def.linearOffset ? def.linearOffset : bodyA.getLocalPoint(bodyB.getPosition());\n\n  var angleA = bodyA.getAngle();\n  var angleB = bodyB.getAngle();\n  this.m_angularOffset = angleB - angleA;\n\n  this.m_linearImpulse = Vec2.zero();\n  this.m_angularImpulse = 0.0;\n\n  this.m_maxForce = def.maxForce;\n  this.m_maxTorque = def.maxTorque;\n  this.m_correctionFactor = def.correctionFactor;\n\n  // Solver temp\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_linearError; // Vec2\n  this.m_angularError; // float\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_linearMass; // Mat22\n  this.m_angularMass; // float\n\n  // Point-to-point constraint\n  // Cdot = v2 - v1\n  // = v2 + cross(w2, r2) - v1 - cross(w1, r1)\n  // J = [-I -r1_skew I r2_skew ]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n\n  // Angle constraint\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  // K = invI1 + invI2\n}\n\n/**\n * Set the maximum friction force in N.\n */\nMotorJoint.prototype.setMaxForce = function(force) {\n  _ASSERT && common.assert(Math.isFinite(force) && force >= 0.0);\n  this.m_maxForce = force;\n}\n\n/**\n * Get the maximum friction force in N.\n */\nMotorJoint.prototype.getMaxForce = function() {\n  return this.m_maxForce;\n}\n\n/**\n * Set the maximum friction torque in N*m.\n */\nMotorJoint.prototype.setMaxTorque = function(torque) {\n  _ASSERT && common.assert(Math.isFinite(torque) && torque >= 0.0);\n  this.m_maxTorque = torque;\n}\n\n/**\n * Get the maximum friction torque in N*m.\n */\nMotorJoint.prototype.getMaxTorque = function() {\n  return this.m_maxTorque;\n}\n\n/**\n * Set the position correction factor in the range [0,1].\n */\nMotorJoint.prototype.setCorrectionFactor = function(factor) {\n  _ASSERT && common.assert(Math.isFinite(factor) && 0.0 <= factor && factor <= 1.0);\n  this.m_correctionFactor = factor;\n}\n\n/**\n * Get the position correction factor in the range [0,1].\n */\nMotorJoint.prototype.getCorrectionFactor = function() {\n  return this.m_correctionFactor;\n}\n\n/**\n * Set/get the target linear offset, in frame A, in meters.\n */\nMotorJoint.prototype.setLinearOffset = function(linearOffset) {\n  if (linearOffset.x != this.m_linearOffset.x\n      || linearOffset.y != this.m_linearOffset.y) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_linearOffset = linearOffset;\n  }\n}\n\nMotorJoint.prototype.getLinearOffset = function() {\n  return this.m_linearOffset;\n}\n\n/**\n * Set/get the target angular offset, in radians.\n */\nMotorJoint.prototype.setAngularOffset = function(angularOffset) {\n  if (angularOffset != this.m_angularOffset) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_angularOffset = angularOffset;\n  }\n}\n\nMotorJoint.prototype.getAngularOffset = function() {\n  return this.m_angularOffset;\n}\n\nMotorJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getPosition();\n}\n\nMotorJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getPosition();\n}\n\nMotorJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(inv_dt, this.m_linearImpulse);\n}\n\nMotorJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_angularImpulse;\n}\n\nMotorJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA), qB = Rot.neo(aB);\n\n  // Compute the effective mass matrix.\n  this.m_rA = Rot.mulVec2(qA, Vec2.neg(this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.neg(this.m_localCenterB));\n\n  // J = [-I -r1_skew I r2_skew]\n  // [ 0 -1 0 1]\n  // r_skew = [-ry; rx]\n\n  // Matlab\n  // K = [ mA+r1y^2*iA+mB+r2y^2*iB, -r1y*iA*r1x-r2y*iB*r2x, -r1y*iA-r2y*iB]\n  // [ -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB, r1x*iA+r2x*iB]\n  // [ -r1y*iA-r2y*iB, r1x*iA+r2x*iB, iA+iB]\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB;\n  var iA = this.m_invIA;\n  var iB = this.m_invIB;\n\n  var K = new Mat22();\n  K.ex.x = mA + mB + iA * this.m_rA.y * this.m_rA.y + iB * this.m_rB.y\n      * this.m_rB.y;\n  K.ex.y = -iA * this.m_rA.x * this.m_rA.y - iB * this.m_rB.x * this.m_rB.y;\n  K.ey.x = K.ex.y;\n  K.ey.y = mA + mB + iA * this.m_rA.x * this.m_rA.x + iB * this.m_rB.x\n      * this.m_rB.x;\n\n  this.m_linearMass = K.getInverse();\n\n  this.m_angularMass = iA + iB;\n  if (this.m_angularMass > 0.0) {\n    this.m_angularMass = 1.0 / this.m_angularMass;\n  }\n\n  this.m_linearError = Vec2.zero();\n  this.m_linearError.addCombine(1, cB, 1, this.m_rB);\n  this.m_linearError.subCombine(1, cA, 1, this.m_rA);\n  this.m_linearError.sub(Rot.mulVec2(qA, this.m_linearOffset));\n\n  this.m_angularError = aB - aA - this.m_angularOffset;\n\n  if (step.warmStarting) {\n    // Scale impulses to support a variable time step.\n    this.m_linearImpulse.mul(step.dtRatio);\n    this.m_angularImpulse *= step.dtRatio;\n\n    var P = Vec2.neo(this.m_linearImpulse.x, this.m_linearImpulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + this.m_angularImpulse);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + this.m_angularImpulse);\n\n  } else {\n    this.m_linearImpulse.setZero();\n    this.m_angularImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nMotorJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var mA = this.m_invMassA, mB = this.m_invMassB;\n  var iA = this.m_invIA, iB = this.m_invIB;\n\n  var h = step.dt;\n  var inv_h = step.inv_dt;\n\n  // Solve angular friction\n  {\n    var Cdot = wB - wA + inv_h * this.m_correctionFactor * this.m_angularError;\n    var impulse = -this.m_angularMass * Cdot;\n\n    var oldImpulse = this.m_angularImpulse;\n    var maxImpulse = h * this.m_maxTorque;\n    this.m_angularImpulse = Math.clamp(this.m_angularImpulse + impulse,\n        -maxImpulse, maxImpulse);\n    impulse = this.m_angularImpulse - oldImpulse;\n\n    wA -= iA * impulse;\n    wB += iB * impulse;\n  }\n\n  // Solve linear friction\n  {\n    var Cdot = Vec2.zero();\n    Cdot.addCombine(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot.subCombine(1, vA, 1, Vec2.cross(wA, this.m_rA));\n    Cdot.addMul(inv_h * this.m_correctionFactor, this.m_linearError);\n\n    var impulse = Vec2.neg(Mat22.mulVec2(this.m_linearMass, Cdot));\n    var oldImpulse = Vec2.clone(this.m_linearImpulse);\n    this.m_linearImpulse.add(impulse);\n\n    var maxImpulse = h * this.m_maxForce;\n\n    this.m_linearImpulse.clamp(maxImpulse);\n\n    impulse = Vec2.sub(this.m_linearImpulse, oldImpulse);\n\n    vA.subMul(mA, impulse);\n    wA -= iA * Vec2.cross(this.m_rA, impulse);\n\n    vB.addMul(mB, impulse);\n    wB += iB * Vec2.cross(this.m_rB, impulse);\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nMotorJoint.prototype.solvePositionConstraints = function(step) {\n  return true;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = MouseJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nMouseJoint.TYPE = 'mouse-joint';\n\nMouseJoint._super = Joint;\nMouseJoint.prototype = create(MouseJoint._super.prototype);\n\n/**\n * @typedef {Object} MouseJointDef\n *\n * Mouse joint definition. This requires a world target point, tuning\n * parameters, and the time step.\n * \n * @prop [maxForce = 0.0] The maximum constraint force that can be exerted to\n *       move the candidate body. Usually you will express as some multiple of\n *       the weight (multiplier * mass * gravity).\n * @prop [frequencyHz = 5.0] The response speed.\n * @prop [dampingRatio = 0.7] The damping ratio. 0 = no damping, 1 = critical\n *       damping.\n *\n * @prop {Vec2} target The initial world target point. This is assumed to\n *       coincide with the body anchor initially.\n */\n\nvar DEFAULTS = {\n  maxForce : 0.0,\n  frequencyHz : 5.0,\n  dampingRatio : 0.7\n};\n\n/**\n * A mouse joint is used to make a point on a body track a specified world\n * point. This a soft constraint with a maximum force. This allows the\n * constraint to stretch and without applying huge forces.\n * \n * NOTE: this joint is not documented in the manual because it was developed to\n * be used in the testbed. If you want to learn how to use the mouse joint, look\n * at the testbed.\n *\n * @param {MouseJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction MouseJoint(def, bodyA, bodyB, target) {\n  if (!(this instanceof MouseJoint)) {\n    return new MouseJoint(def, bodyA, bodyB, target);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = MouseJoint.TYPE;\n\n  _ASSERT && common.assert(Math.isFinite(def.maxForce) && def.maxForce >= 0.0);\n  _ASSERT && common.assert(Math.isFinite(def.frequencyHz) && def.frequencyHz >= 0.0);\n  _ASSERT && common.assert(Math.isFinite(def.dampingRatio) && def.dampingRatio >= 0.0);\n\n  this.m_targetA = target ? Vec2.clone(target) : def.target || Vec2.zero();\n  this.m_localAnchorB = Transform.mulTVec2(bodyB.getTransform(), this.m_targetA);\n\n  this.m_maxForce = def.maxForce;\n  this.m_impulse = Vec2.zero();\n\n  this.m_frequencyHz = def.frequencyHz;\n  this.m_dampingRatio = def.dampingRatio;\n\n  this.m_beta = 0.0;\n  this.m_gamma = 0.0;\n\n  // Solver temp\n  this.m_rB = Vec2.zero();\n  this.m_localCenterB = Vec2.zero();\n  this.m_invMassB = 0.0;\n  this.m_invIB = 0.0;\n  this.mass = new Mat22()\n  this.m_C = Vec2.zero();\n\n  // p = attached point, m = mouse point\n  // C = p - m\n  // Cdot = v\n  // = v + cross(w, r)\n  // J = [I r_skew]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n}\n\n/**\n * Use this to update the target point.\n */\nMouseJoint.prototype.setTarget = function(target) {\n  if (this.m_bodyB.isAwake() == false) {\n    this.m_bodyB.setAwake(true);\n  }\n  this.m_targetA = Vec2.clone(target);\n}\n\nMouseJoint.prototype.getTarget = function() {\n  return this.m_targetA;\n}\n\n/**\n * Set/get the maximum force in Newtons.\n */\nMouseJoint.prototype.setMaxForce = function(force) {\n  this.m_maxForce = force;\n}\n\nMouseJoint.getMaxForce = function() {\n  return this.m_maxForce;\n}\n\n/**\n * Set/get the frequency in Hertz.\n */\nMouseJoint.prototype.setFrequency = function(hz) {\n  this.m_frequencyHz = hz;\n}\n\nMouseJoint.prototype.getFrequency = function() {\n  return this.m_frequencyHz;\n}\n\n/**\n * Set/get the damping ratio (dimensionless).\n */\nMouseJoint.prototype.setDampingRatio = function(ratio) {\n  this.m_dampingRatio = ratio;\n}\n\nMouseJoint.prototype.getDampingRatio = function() {\n  return this.m_dampingRatio;\n}\n\nMouseJoint.prototype.getAnchorA = function() {\n  return Vec2.clone(this.m_targetA);\n}\n\nMouseJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nMouseJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(inv_dt, this.m_impulse);\n}\n\nMouseJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * 0.0;\n}\n\nMouseJoint.prototype.shiftOrigin = function(newOrigin) {\n  this.m_targetA.sub(newOrigin);\n}\n\nMouseJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var position = this.m_bodyB.c_position;\n  var velocity = this.m_bodyB.c_velocity;\n\n  var cB = position.c;\n  var aB = position.a;\n  var vB = velocity.v;\n  var wB = velocity.w;\n\n  var qB = Rot.neo(aB);\n\n  var mass = this.m_bodyB.getMass();\n\n  // Frequency\n  var omega = 2.0 * Math.PI * this.m_frequencyHz;\n\n  // Damping coefficient\n  var d = 2.0 * mass * this.m_dampingRatio * omega;\n\n  // Spring stiffness\n  var k = mass * (omega * omega);\n\n  // magic formulas\n  // gamma has units of inverse mass.\n  // beta has units of inverse time.\n  var h = step.dt;\n  _ASSERT && common.assert(d + h * k > Math.EPSILON);\n  this.m_gamma = h * (d + h * k);\n  if (this.m_gamma != 0.0) {\n    this.m_gamma = 1.0 / this.m_gamma;\n  }\n  this.m_beta = h * k * this.m_gamma;\n\n  // Compute the effective mass matrix.\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // K = [(1/m1 + 1/m2) * eye(2) - skew(r1) * invI1 * skew(r1) - skew(r2) *\n  // invI2 * skew(r2)]\n  // = [1/m1+1/m2 0 ] + invI1 * [r1.y*r1.y -r1.x*r1.y] + invI2 * [r1.y*r1.y\n  // -r1.x*r1.y]\n  // [ 0 1/m1+1/m2] [-r1.x*r1.y r1.x*r1.x] [-r1.x*r1.y r1.x*r1.x]\n  var K = new Mat22();\n  K.ex.x = this.m_invMassB + this.m_invIB * this.m_rB.y * this.m_rB.y\n      + this.m_gamma;\n  K.ex.y = -this.m_invIB * this.m_rB.x * this.m_rB.y;\n  K.ey.x = K.ex.y;\n  K.ey.y = this.m_invMassB + this.m_invIB * this.m_rB.x * this.m_rB.x\n      + this.m_gamma;\n\n  this.m_mass = K.getInverse();\n\n  this.m_C.set(cB);\n  this.m_C.addCombine(1, this.m_rB, -1, this.m_targetA);\n  this.m_C.mul(this.m_beta);\n\n  // Cheat with some damping\n  wB *= 0.98;\n\n  if (step.warmStarting) {\n    this.m_impulse.mul(step.dtRatio);\n    vB.addMul(this.m_invMassB, this.m_impulse);\n    wB += this.m_invIB * Vec2.cross(this.m_rB, this.m_impulse);\n\n  } else {\n    this.m_impulse.setZero();\n  }\n\n  velocity.v.set(vB);\n  velocity.w = wB;\n}\n\nMouseJoint.prototype.solveVelocityConstraints = function(step) {\n  var velocity = this.m_bodyB.c_velocity;\n  var vB = Vec2.clone(velocity.v);\n  var wB = velocity.w;\n\n  // Cdot = v + cross(w, r)\n\n  var Cdot = Vec2.cross(wB, this.m_rB);\n  Cdot.add(vB);\n\n  Cdot.addCombine(1, this.m_C, this.m_gamma, this.m_impulse);\n  Cdot.neg();\n\n  var impulse = Mat22.mulVec2(this.m_mass, Cdot);\n\n  var oldImpulse = Vec2.clone(this.m_impulse);\n  this.m_impulse.add(impulse);\n  var maxImpulse = step.dt * this.m_maxForce;\n  this.m_impulse.clamp(maxImpulse);\n  impulse = Vec2.sub(this.m_impulse, oldImpulse);\n\n  vB.addMul(this.m_invMassB, impulse);\n  wB += this.m_invIB * Vec2.cross(this.m_rB, impulse);\n\n  velocity.v.set(vB);\n  velocity.w = wB;\n}\n\nMouseJoint.prototype.solvePositionConstraints = function(step) {\n  return true;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = PulleyJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nPulleyJoint.TYPE = 'pulley-joint';\nPulleyJoint.MIN_PULLEY_LENGTH = 2.0; // minPulleyLength\n\nPulleyJoint._super = Joint;\nPulleyJoint.prototype = create(PulleyJoint._super.prototype);\n\n/**\n * @typedef {Object} PulleyJointDef\n *\n * Pulley joint definition. This requires two ground anchors, two dynamic body\n * anchor points, and a pulley ratio.\n *\n * @prop {Vec2} groundAnchorA The first ground anchor in world coordinates.\n *          This point never moves.\n * @prop {Vec2} groundAnchorB The second ground anchor in world coordinates.\n *          This point never moves.\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {float} ratio The pulley ratio, used to simulate a block-and-tackle.\n * @prop {float} lengthA The reference length for the segment attached to bodyA.\n * @prop {float} lengthB The reference length for the segment attached to bodyB.\n */\nvar PulleyJointDef = {\n  collideConnected : true\n};\n\n/**\n * The pulley joint is connected to two bodies and two fixed ground points. The\n * pulley supports a ratio such that: length1 + ratio * length2 <= constant\n * \n * Yes, the force transmitted is scaled by the ratio.\n * \n * Warning: the pulley joint can get a bit squirrelly by itself. They often work\n * better when combined with prismatic joints. You should also cover the the\n * anchor points with static shapes to prevent one side from going to zero\n * length.\n *\n * @param {PulleyJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction PulleyJoint(def, bodyA, bodyB, groundA, groundB, anchorA, anchorB, ratio) {\n  if (!(this instanceof PulleyJoint)) {\n    return new PulleyJoint(def, bodyA, bodyB, groundA, groundB, anchorA, anchorB, ratio);\n  }\n\n  def = options(def, PulleyJointDef);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = PulleyJoint.TYPE;\n  this.m_groundAnchorA = groundA ? groundA : def.groundAnchorA || Vec2.neo(-1.0, 1.0);\n  this.m_groundAnchorB = groundB ? groundB : def.groundAnchorB || Vec2.neo(1.0, 1.0);\n  this.m_localAnchorA = anchorA ? bodyA.getLocalPoint(anchorA) : def.localAnchorA || Vec2.neo(-1.0, 0.0);\n  this.m_localAnchorB = anchorB ? bodyB.getLocalPoint(anchorB) : def.localAnchorB || Vec2.neo(1.0, 0.0);\n  this.m_lengthA = Math.isFinite(def.lengthA) ? def.lengthA : Vec2.distance(anchorA, groundA);\n  this.m_lengthB = Math.isFinite(def.lengthB) ? def.lengthB : Vec2.distance(anchorB, groundB);\n  this.m_ratio = Math.isFinite(ratio) ? ratio : def.ratio;\n\n  _ASSERT && common.assert(ratio > Math.EPSILON);\n\n  this.m_constant = this.m_lengthA + this.m_ratio * this.m_lengthB;\n\n  this.m_impulse = 0.0;\n\n  // Solver temp\n  this.m_uA; // Vec2\n  this.m_uB; // Vec2\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_mass; // float\n\n  // Pulley:\n  // length1 = norm(p1 - s1)\n  // length2 = norm(p2 - s2)\n  // C0 = (length1 + ratio * length2)_initial\n  // C = C0 - (length1 + ratio * length2)\n  // u1 = (p1 - s1) / norm(p1 - s1)\n  // u2 = (p2 - s2) / norm(p2 - s2)\n  // Cdot = -dot(u1, v1 + cross(w1, r1)) - ratio * dot(u2, v2 + cross(w2, r2))\n  // J = -[u1 cross(r1, u1) ratio * u2 ratio * cross(r2, u2)]\n  // K = J * invM * JT\n  // = invMass1 + invI1 * cross(r1, u1)^2 + ratio^2 * (invMass2 + invI2 *\n  // cross(r2, u2)^2)\n}\n\n/**\n * Get the first ground anchor.\n */\nPulleyJoint.prototype.getGroundAnchorA = function() {\n  return this.m_groundAnchorA;\n}\n\n/**\n * Get the second ground anchor.\n */\nPulleyJoint.prototype.getGroundAnchorB = function() {\n  return this.m_groundAnchorB;\n}\n\n/**\n * Get the current length of the segment attached to bodyA.\n */\nPulleyJoint.prototype.getLengthA = function() {\n  return this.m_lengthA;\n}\n\n/**\n * Get the current length of the segment attached to bodyB.\n */\nPulleyJoint.prototype.getLengthB = function() {\n  return this.m_lengthB;\n}\n\n/**\n * Get the pulley ratio.\n */\nPulleyJoint.prototype.getRatio = function() {\n  return this.m_ratio;\n}\n\n/**\n * Get the current length of the segment attached to bodyA.\n */\nPulleyJoint.prototype.getCurrentLengthA = function() {\n  var p = this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n  var s = this.m_groundAnchorA;\n  return Vec2.distance(p, s);\n}\n\n/**\n * Get the current length of the segment attached to bodyB.\n */\nPulleyJoint.prototype.getCurrentLengthB = function() {\n  var p = this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n  var s = this.m_groundAnchorB;\n  return Vec2.distance(p, s);\n}\n\nPulleyJoint.prototype.shiftOrigin = function(newOrigin) {\n  this.m_groundAnchorA.sub(newOrigin);\n  this.m_groundAnchorB.sub(newOrigin);\n}\n\nPulleyJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nPulleyJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nPulleyJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(this.m_impulse, this.m_uB).mul(inv_dt);\n}\n\nPulleyJoint.prototype.getReactionTorque = function(inv_dt) {\n  return 0.0;\n}\n\nPulleyJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  this.m_rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // Get the pulley axes.\n  this.m_uA = Vec2.sub(Vec2.add(cA, this.m_rA), this.m_groundAnchorA);\n  this.m_uB = Vec2.sub(Vec2.add(cB, this.m_rB), this.m_groundAnchorB);\n\n  var lengthA = this.m_uA.length();\n  var lengthB = this.m_uB.length();\n\n  if (lengthA > 10.0 * Settings.linearSlop) {\n    this.m_uA.mul(1.0 / lengthA);\n  } else {\n    this.m_uA.setZero();\n  }\n\n  if (lengthB > 10.0 * Settings.linearSlop) {\n    this.m_uB.mul(1.0 / lengthB);\n  } else {\n    this.m_uB.setZero();\n  }\n\n  // Compute effective mass.\n  var ruA = Vec2.cross(this.m_rA, this.m_uA); // float\n  var ruB = Vec2.cross(this.m_rB, this.m_uB); // float\n\n  var mA = this.m_invMassA + this.m_invIA * ruA * ruA; // float\n  var mB = this.m_invMassB + this.m_invIB * ruB * ruB; // float\n\n  this.m_mass = mA + this.m_ratio * this.m_ratio * mB;\n\n  if (this.m_mass > 0.0) {\n    this.m_mass = 1.0 / this.m_mass;\n  }\n\n  if (step.warmStarting) {\n    // Scale impulses to support variable time steps.\n    this.m_impulse *= step.dtRatio;\n\n    // Warm starting.\n    var PA = Vec2.mul(-this.m_impulse, this.m_uA);\n    var PB = Vec2.mul(-this.m_ratio * this.m_impulse, this.m_uB);\n\n    vA.addMul(this.m_invMassA, PA);\n    wA += this.m_invIA * Vec2.cross(this.m_rA, PA);\n\n    vB.addMul(this.m_invMassB, PB);\n    wB += this.m_invIB * Vec2.cross(this.m_rB, PB);\n\n  } else {\n    this.m_impulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nPulleyJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var vpA = Vec2.add(vA, Vec2.cross(wA, this.m_rA));\n  var vpB = Vec2.add(vB, Vec2.cross(wB, this.m_rB));\n\n  var Cdot = -Vec2.dot(this.m_uA, vpA) - this.m_ratio\n      * Vec2.dot(this.m_uB, vpB); // float\n  var impulse = -this.m_mass * Cdot; // float\n  this.m_impulse += impulse;\n\n  var PA = Vec2.mul(-impulse, this.m_uA); // Vec2\n  var PB = Vec2.mul(-this.m_ratio * impulse, this.m_uB); // Vec2\n  vA.addMul(this.m_invMassA, PA);\n  wA += this.m_invIA * Vec2.cross(this.m_rA, PA);\n  vB.addMul(this.m_invMassB, PB);\n  wB += this.m_invIB * Vec2.cross(this.m_rB, PB);\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nPulleyJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA), qB = Rot.neo(aB);\n\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // Get the pulley axes.\n  var uA = Vec2.sub(Vec2.add(cA, this.m_rA), this.m_groundAnchorA);\n  var uB = Vec2.sub(Vec2.add(cB, this.m_rB), this.m_groundAnchorB);\n\n  var lengthA = uA.length();\n  var lengthB = uB.length();\n\n  if (lengthA > 10.0 * Settings.linearSlop) {\n    uA.mul(1.0 / lengthA);\n  } else {\n    uA.setZero();\n  }\n\n  if (lengthB > 10.0 * Settings.linearSlop) {\n    uB.mul(1.0 / lengthB);\n  } else {\n    uB.setZero();\n  }\n\n  // Compute effective mass.\n  var ruA = Vec2.cross(rA, uA);\n  var ruB = Vec2.cross(rB, uB);\n\n  var mA = this.m_invMassA + this.m_invIA * ruA * ruA; // float\n  var mB = this.m_invMassB + this.m_invIB * ruB * ruB; // float\n\n  var mass = mA + this.m_ratio * this.m_ratio * mB; // float\n\n  if (mass > 0.0) {\n    mass = 1.0 / mass;\n  }\n\n  var C = this.m_constant - lengthA - this.m_ratio * lengthB; // float\n  var linearError = Math.abs(C); // float\n\n  var impulse = -mass * C; // float\n\n  var PA = Vec2.mul(-impulse, uA); // Vec2\n  var PB = Vec2.mul(-this.m_ratio * impulse, uB); // Vec2\n\n  cA.addMul(this.m_invMassA, PA);\n  aA += this.m_invIA * Vec2.cross(rA, PA);\n  cB.addMul(this.m_invMassB, PB);\n  aB += this.m_invIB * Vec2.cross(rB, PB);\n\n  this.m_bodyA.c_position.c = cA;\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c = cB;\n  this.m_bodyB.c_position.a = aB;\n\n  return linearError < Settings.linearSlop;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = RopeJoint;\n\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nvar inactiveLimit = 0;\nvar atLowerLimit = 1;\nvar atUpperLimit = 2;\nvar equalLimits = 3;\n\nRopeJoint.TYPE = 'rope-joint';\n\nRopeJoint._super = Joint;\nRopeJoint.prototype = create(RopeJoint._super.prototype);\n\n/**\n * @typedef {Object} RopeJointDef\n *\n * Rope joint definition. This requires two body anchor points and a maximum\n * lengths. Note: by default the connected objects will not collide. see\n * collideConnected in JointDef.\n *\n * @prop {float} maxLength The maximum length of the rope. Warning: this must be\n *       larger than linearSlop or the joint will have no effect.\n *\n * @prop {Vec2} def.localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} def.localAnchorB The local anchor point relative to bodyB's origin.\n */\n\nvar DEFAULTS = {\n  maxLength : 0.0,\n};\n\n/**\n * A rope joint enforces a maximum distance between two points on two bodies. It\n * has no other effect.\n * \n * Warning: if you attempt to change the maximum length during the simulation\n * you will get some non-physical behavior.\n * \n * A model that would allow you to dynamically modify the length would have some\n * sponginess, so I chose not to implement it that way. See DistanceJoint if you\n * want to dynamically control length.\n *\n * @param {RopeJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction RopeJoint(def, bodyA, bodyB, anchor) {\n  if (!(this instanceof RopeJoint)) {\n    return new RopeJoint(def, bodyA, bodyB, anchor);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = RopeJoint.TYPE;\n  this.m_localAnchorA = anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.neo(-1.0, 0.0);\n  this.m_localAnchorB = anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.neo(1.0, 0.0);\n\n  this.m_maxLength = def.maxLength;\n\n  this.m_mass = 0.0;\n  this.m_impulse = 0.0;\n  this.m_length = 0.0;\n  this.m_state = inactiveLimit;\n\n  // Solver temp\n  this.m_u; // Vec2\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_mass; // float\n\n  // Limit:\n  // C = norm(pB - pA) - L\n  // u = (pB - pA) / norm(pB - pA)\n  // Cdot = dot(u, vB + cross(wB, rB) - vA - cross(wA, rA))\n  // J = [-u -cross(rA, u) u cross(rB, u)]\n  // K = J * invM * JT\n  // = invMassA + invIA * cross(rA, u)^2 + invMassB + invIB * cross(rB, u)^2\n};\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nRopeJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nRopeJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * Set/Get the maximum length of the rope.\n */\nRopeJoint.prototype.setMaxLength = function(length) {\n  this.m_maxLength = length;\n}\n\nRopeJoint.prototype.getMaxLength = function() {\n  return this.m_maxLength;\n}\n\nRopeJoint.prototype.getLimitState = function() {\n  // TODO LimitState\n  return this.m_state;\n}\n\nRopeJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nRopeJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nRopeJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(this.m_impulse, this.m_u).mul(inv_dt);\n}\n\nRopeJoint.prototype.getReactionTorque = function(inv_dt) {\n  return 0.0;\n}\n\nRopeJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  this.m_rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_localCenterA);\n  this.m_rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_localCenterB);\n  this.m_u = Vec2.zero();\n  this.m_u.addCombine(1, cB, 1, this.m_rB);\n  this.m_u.subCombine(1, cA, 1, this.m_rA); // Vec2\n\n  this.m_length = this.m_u.length();\n\n  var C = this.m_length - this.m_maxLength; // float\n  if (C > 0.0) {\n    this.m_state = atUpperLimit;\n  } else {\n    this.m_state = inactiveLimit;\n  }\n\n  if (this.m_length > Settings.linearSlop) {\n    this.m_u.mul(1.0 / this.m_length);\n  } else {\n    this.m_u.setZero();\n    this.m_mass = 0.0;\n    this.m_impulse = 0.0;\n    return;\n  }\n\n  // Compute effective mass.\n  var crA = Vec2.cross(this.m_rA, this.m_u); // float\n  var crB = Vec2.cross(this.m_rB, this.m_u); // float\n  var invMass = this.m_invMassA + this.m_invIA * crA * crA + this.m_invMassB\n      + this.m_invIB * crB * crB; // float\n\n  this.m_mass = invMass != 0.0 ? 1.0 / invMass : 0.0;\n\n  if (step.warmStarting) {\n    // Scale the impulse to support a variable time step.\n    this.m_impulse *= step.dtRatio;\n\n    var P = Vec2.mul(this.m_impulse, this.m_u);\n    \n    vA.subMul(this.m_invMassA, P);\n    wA -= this.m_invIA * Vec2.cross(this.m_rA, P);\n    \n    vB.addMul(this.m_invMassB, P);\n    wB += this.m_invIB * Vec2.cross(this.m_rB, P);\n    \n  } else {\n    this.m_impulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nRopeJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  // Cdot = dot(u, v + cross(w, r))\n  var vpA = Vec2.addCross(vA, wA, this.m_rA); // Vec2\n  var vpB = Vec2.addCross(vB, wB, this.m_rB); // Vec2\n  var C = this.m_length - this.m_maxLength; // float\n  var Cdot = Vec2.dot(this.m_u, Vec2.sub(vpB, vpA)); // float\n\n  // Predictive constraint.\n  if (C < 0.0) {\n    Cdot += step.inv_dt * C;\n  }\n\n  var impulse = -this.m_mass * Cdot; // float\n  var oldImpulse = this.m_impulse; // float\n  this.m_impulse = Math.min(0.0, this.m_impulse + impulse);\n  impulse = this.m_impulse - oldImpulse;\n\n  var P = Vec2.mul(impulse, this.m_u); // Vec2\n  vA.subMul(this.m_invMassA, P);\n  wA -= this.m_invIA * Vec2.cross(this.m_rA, P);\n  vB.addMul(this.m_invMassB, P);\n  wB += this.m_invIB * Vec2.cross(this.m_rB, P);\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nRopeJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c; // Vec2\n  var aA = this.m_bodyA.c_position.a; // float\n  var cB = this.m_bodyB.c_position.c; // Vec2\n  var aB = this.m_bodyB.c_position.a; // float\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  var rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_localCenterA);\n  var rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_localCenterB);\n  var u = Vec2.zero();\n  u.addCombine(1, cB, 1, rB);\n  u.subCombine(1, cA, 1, rA); // Vec2\n\n  var length = u.normalize(); // float\n  var C = length - this.m_maxLength; // float\n\n  C = Math.clamp(C, 0.0, Settings.maxLinearCorrection);\n\n  var impulse = -this.m_mass * C; // float\n  var P = Vec2.mul(impulse, u); // Vec2\n\n  cA.subMul(this.m_invMassA, P);\n  aA -= this.m_invIA * Vec2.cross(rA, P);\n  cB.addMul(this.m_invMassB, P);\n  aB += this.m_invIB * Vec2.cross(rB, P);\n\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n\n  return length - this.m_maxLength < Settings.linearSlop;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = WeldJoint;\n\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nWeldJoint.TYPE = 'weld-joint';\n\nWeldJoint._super = Joint;\nWeldJoint.prototype = create(WeldJoint._super.prototype);\n\n/**\n * @typedef {Object} WeldJointDef\n *\n * Weld joint definition. You need to specify local anchor points where they are\n * attached and the relative body angle. The position of the anchor points is\n * important for computing the reaction torque.\n * \n * @prop {float} frequencyHz The mass-spring-damper frequency in Hertz. Rotation\n *       only. Disable softness with a value of 0.\n * @prop {float} dampingRatio The damping ratio. 0 = no damping, 1 = critical\n *       damping.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {float} referenceAngle The bodyB angle minus bodyA angle in the\n *       reference state (radians).\n */\nvar DEFAULTS = {\n  frequencyHz : 0.0,\n  dampingRatio : 0.0,\n}\n\n/**\n * A weld joint essentially glues two bodies together. A weld joint may distort\n * somewhat because the island constraint solver is approximate.\n *\n * @param {WeldJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction WeldJoint(def, bodyA, bodyB, anchor) {\n  if (!(this instanceof WeldJoint)) {\n    return new WeldJoint(def, bodyA, bodyB, anchor);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = WeldJoint.TYPE;\n\n  this.m_localAnchorA = anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.zero();\n  this.m_localAnchorB = anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.zero();\n  this.m_referenceAngle = Math.isFinite(def.referenceAngle) ? def.referenceAngle : bodyB.getAngle() - bodyA.getAngle();\n\n  this.m_frequencyHz = def.frequencyHz;\n  this.m_dampingRatio = def.dampingRatio;\n\n  this.m_impulse = Vec3();\n\n  this.m_bias = 0.0;\n  this.m_gamma = 0.0;\n\n  // Solver temp\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_mass = new Mat33();\n\n  // Point-to-point constraint\n  // C = p2 - p1\n  // Cdot = v2 - v1\n  // / = v2 + cross(w2, r2) - v1 - cross(w1, r1)\n  // J = [-I -r1_skew I r2_skew ]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n\n  // Angle constraint\n  // C = angle2 - angle1 - referenceAngle\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  // K = invI1 + invI2\n}\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nWeldJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n};\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nWeldJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n};\n\n/**\n * Get the reference angle.\n */\nWeldJoint.prototype.getReferenceAngle = function() {\n  return this.m_referenceAngle;\n};\n\n/**\n * Set/get frequency in Hz.\n */\nWeldJoint.prototype.setFrequency = function(hz) {\n  this.m_frequencyHz = hz;\n};\n\nWeldJoint.prototype.getFrequency = function() {\n  return this.m_frequencyHz;\n};\n\n/**\n * Set/get damping ratio.\n */\nWeldJoint.prototype.setDampingRatio = function(ratio) {\n  this.m_dampingRatio = ratio;\n};\n\nWeldJoint.prototype.getDampingRatio = function() {\n  return this.m_dampingRatio;\n};\n\nWeldJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n};\n\nWeldJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n};\n\nWeldJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.neo(this.m_impulse.x, this.m_impulse.y).mul(inv_dt);\n};\n\nWeldJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_impulse.z;\n};\n\nWeldJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA), qB = Rot.neo(aB);\n\n  this.m_rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // J = [-I -r1_skew I r2_skew]\n  // [ 0 -1 0 1]\n  // r_skew = [-ry; rx]\n\n  // Matlab\n  // K = [ mA+r1y^2*iA+mB+r2y^2*iB, -r1y*iA*r1x-r2y*iB*r2x, -r1y*iA-r2y*iB]\n  // [ -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB, r1x*iA+r2x*iB]\n  // [ -r1y*iA-r2y*iB, r1x*iA+r2x*iB, iA+iB]\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var K = new Mat33();\n  K.ex.x = mA + mB + this.m_rA.y * this.m_rA.y * iA + this.m_rB.y * this.m_rB.y\n      * iB;\n  K.ey.x = -this.m_rA.y * this.m_rA.x * iA - this.m_rB.y * this.m_rB.x * iB;\n  K.ez.x = -this.m_rA.y * iA - this.m_rB.y * iB;\n  K.ex.y = K.ey.x;\n  K.ey.y = mA + mB + this.m_rA.x * this.m_rA.x * iA + this.m_rB.x * this.m_rB.x\n      * iB;\n  K.ez.y = this.m_rA.x * iA + this.m_rB.x * iB;\n  K.ex.z = K.ez.x;\n  K.ey.z = K.ez.y;\n  K.ez.z = iA + iB;\n\n  if (this.m_frequencyHz > 0.0) {\n    K.getInverse22(this.m_mass);\n\n    var invM = iA + iB; // float\n    var m = invM > 0.0 ? 1.0 / invM : 0.0; // float\n\n    var C = aB - aA - this.m_referenceAngle; // float\n\n    // Frequency\n    var omega = 2.0 * Math.PI * this.m_frequencyHz; // float\n\n    // Damping coefficient\n    var d = 2.0 * m * this.m_dampingRatio * omega; // float\n\n    // Spring stiffness\n    var k = m * omega * omega; // float\n\n    // magic formulas\n    var h = step.dt; // float\n    this.m_gamma = h * (d + h * k);\n    this.m_gamma = this.m_gamma != 0.0 ? 1.0 / this.m_gamma : 0.0;\n    this.m_bias = C * h * k * this.m_gamma;\n\n    invM += this.m_gamma;\n    this.m_mass.ez.z = invM != 0.0 ? 1.0 / invM : 0.0;\n  } else if (K.ez.z == 0.0) {\n    K.getInverse22(this.m_mass);\n    this.m_gamma = 0.0;\n    this.m_bias = 0.0;\n  } else {\n    K.getSymInverse33(this.m_mass);\n    this.m_gamma = 0.0;\n    this.m_bias = 0.0;\n  }\n\n  if (step.warmStarting) {\n    // Scale impulses to support a variable time step.\n    this.m_impulse.mul(step.dtRatio);\n\n    var P = Vec2.neo(this.m_impulse.x, this.m_impulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + this.m_impulse.z);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + this.m_impulse.z);\n\n  } else {\n    this.m_impulse.setZero();\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nWeldJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  if (this.m_frequencyHz > 0.0) {\n    var Cdot2 = wB - wA; // float\n\n    var impulse2 = -this.m_mass.ez.z\n        * (Cdot2 + this.m_bias + this.m_gamma * this.m_impulse.z); // float\n    this.m_impulse.z += impulse2;\n\n    wA -= iA * impulse2;\n    wB += iB * impulse2;\n\n    var Cdot1 = Vec2.zero();\n    Cdot1.addCombine(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot1.subCombine(1, vA, 1, Vec2.cross(wA, this.m_rA)); // Vec2\n\n    var impulse1 = Vec2.neg(Mat33.mulVec2(this.m_mass, Cdot1)); // Vec2\n    this.m_impulse.x += impulse1.x;\n    this.m_impulse.y += impulse1.y;\n\n    var P = Vec2.clone(impulse1); // Vec2\n\n    vA.subMul(mA, P);\n    wA -= iA * Vec2.cross(this.m_rA, P);\n\n    vB.addMul(mB, P);\n    wB += iB * Vec2.cross(this.m_rB, P);\n  } else {\n    var Cdot1 = Vec2.zero();\n    Cdot1.addCombine(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot1.subCombine(1, vA, 1, Vec2.cross(wA, this.m_rA)); // Vec2\n    var Cdot2 = wB - wA; // float\n    var Cdot = Vec3(Cdot1.x, Cdot1.y, Cdot2); // Vec3\n\n    var impulse = Vec3.neg(Mat33.mulVec3(this.m_mass, Cdot)); // Vec3\n    this.m_impulse.add(impulse);\n\n    var P = Vec2.neo(impulse.x, impulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + impulse.z);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + impulse.z);\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nWeldJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA), qB = Rot.neo(aB);\n\n  var mA = this.m_invMassA, mB = this.m_invMassB; // float\n  var iA = this.m_invIA, iB = this.m_invIB; // float\n\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  var positionError, angularError; // float\n\n  var K = new Mat33();\n  K.ex.x = mA + mB + rA.y * rA.y * iA + rB.y * rB.y * iB;\n  K.ey.x = -rA.y * rA.x * iA - rB.y * rB.x * iB;\n  K.ez.x = -rA.y * iA - rB.y * iB;\n  K.ex.y = K.ey.x;\n  K.ey.y = mA + mB + rA.x * rA.x * iA + rB.x * rB.x * iB;\n  K.ez.y = rA.x * iA + rB.x * iB;\n  K.ex.z = K.ez.x;\n  K.ey.z = K.ez.y;\n  K.ez.z = iA + iB;\n\n  if (this.m_frequencyHz > 0.0) {\n    var C1 = Vec2.zero();\n    C1.addCombine(1, cB, 1, rB);\n    C1.subCombine(1, cA, 1, rA); // Vec2\n\n    positionError = C1.length();\n    angularError = 0.0;\n\n    var P = Vec2.neg(K.solve22(C1)); // Vec2\n\n    cA.subMul(mA, P);\n    aA -= iA * Vec2.cross(rA, P);\n\n    cB.addMul(mB, P);\n    aB += iB * Vec2.cross(rB, P);\n  } else {\n    var C1 = Vec2.zero();\n    C1.addCombine(1, cB, 1, rB);\n    C1.subCombine(1, cA, 1, rA);\n\n    var C2 = aB - aA - this.m_referenceAngle; // float\n\n    positionError = C1.length();\n    angularError = Math.abs(C2);\n\n    var C = Vec3(C1.x, C1.y, C2);\n\n    var impulse = Vec3();\n    if (K.ez.z > 0.0) {\n      impulse = Vec3.neg(K.solve33(C));\n    } else {\n      var impulse2 = Vec2.neg(K.solve22(C1));\n      impulse.set(impulse2.x, impulse2.y, 0.0);\n    }\n\n    var P = Vec2.neo(impulse.x, impulse.y);\n\n    cA.subMul(mA, P);\n    aA -= iA * (Vec2.cross(rA, P) + impulse.z);\n\n    cB.addMul(mB, P);\n    aB += iB * (Vec2.cross(rB, P) + impulse.z);\n  }\n\n  this.m_bodyA.c_position.c = cA;\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c = cB;\n  this.m_bodyB.c_position.a = aB;\n\n  return positionError <= Settings.linearSlop\n      && angularError <= Settings.angularSlop;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = WheelJoint;\n\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nWheelJoint.TYPE = 'wheel-joint';\n\nWheelJoint._super = Joint;\nWheelJoint.prototype = create(WheelJoint._super.prototype);\n\n/**\n * @typedef {Object} WheelJointDef\n *\n * Wheel joint definition. This requires defining a line of motion using an axis\n * and an anchor point. The definition uses local anchor points and a local axis\n * so that the initial configuration can violate the constraint slightly. The\n * joint translation is zero when the local anchor points coincide in world\n * space. Using local anchors and a local axis helps when saving and loading a\n * game.\n * \n * @prop {boolean} enableMotor Enable/disable the joint motor.\n * @prop {float} maxMotorTorque The maximum motor torque, usually in N-m.\n * @prop {float} motorSpeed The desired motor speed in radians per second.\n * @prop {float} frequencyHz Suspension frequency, zero indicates no suspension.\n * @prop {float} dampingRatio Suspension damping ratio, one indicates critical\n *       damping.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {Vec2} localAxisA The local translation axis in bodyA.\n */\nvar DEFAULTS = {\n  enableMotor : false,\n  maxMotorTorque : 0.0,\n  motorSpeed : 0.0,\n  frequencyHz : 2.0,\n  dampingRatio : 0.7,\n};\n\n/**\n * A wheel joint. This joint provides two degrees of freedom: translation along\n * an axis fixed in bodyA and rotation in the plane. In other words, it is a\n * point to line constraint with a rotational motor and a linear spring/damper.\n * This joint is designed for vehicle suspensions.\n *\n * @param {WheelJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction WheelJoint(def, bodyA, bodyB, anchor, axis) {\n  if (!(this instanceof WheelJoint)) {\n    return new WheelJoint(def, bodyA, bodyB, anchor, axis);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = WheelJoint.TYPE;\n\n  this.m_localAnchorA = anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.zero();\n  this.m_localAnchorB = anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.zero();\n  this.m_localAxis = axis ? bodyA.getLocalVector(axis) : def.localAxisA || Vec2.neo(1.0, 0.0);\n\n  this.m_localXAxisA = this.m_localAxis;\n  this.m_localYAxisA = Vec2.cross(1.0, this.m_localXAxisA);\n\n  this.m_mass = 0.0;\n  this.m_impulse = 0.0;\n  this.m_motorMass = 0.0;\n  this.m_motorImpulse = 0.0;\n  this.m_springMass = 0.0;\n  this.m_springImpulse = 0.0;\n\n  this.m_maxMotorTorque = def.maxMotorTorque;\n  this.m_motorSpeed = def.motorSpeed;\n  this.m_enableMotor = def.enableMotor;\n\n  this.m_frequencyHz = def.frequencyHz;\n  this.m_dampingRatio = def.dampingRatio;\n\n  this.m_bias = 0.0;\n  this.m_gamma = 0.0;\n\n  // Solver temp\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n\n  this.m_ax = Vec2.zero();\n  this.m_ay = Vec2.zero(); // Vec2\n  this.m_sAx;\n  this.m_sBx; // float\n  this.m_sAy;\n  this.m_sBy; // float\n\n  // Linear constraint (point-to-line)\n  // d = pB - pA = xB + rB - xA - rA\n  // C = dot(ay, d)\n  // Cdot = dot(d, cross(wA, ay)) + dot(ay, vB + cross(wB, rB) - vA - cross(wA,\n  // rA))\n  // = -dot(ay, vA) - dot(cross(d + rA, ay), wA) + dot(ay, vB) + dot(cross(rB,\n  // ay), vB)\n  // J = [-ay, -cross(d + rA, ay), ay, cross(rB, ay)]\n\n  // Spring linear constraint\n  // C = dot(ax, d)\n  // Cdot = = -dot(ax, vA) - dot(cross(d + rA, ax), wA) + dot(ax, vB) +\n  // dot(cross(rB, ax), vB)\n  // J = [-ax -cross(d+rA, ax) ax cross(rB, ax)]\n\n  // Motor rotational constraint\n  // Cdot = wB - wA\n  // J = [0 0 -1 0 0 1]\n}\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nWheelJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nWheelJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * The local joint axis relative to bodyA.\n */\nWheelJoint.prototype.getLocalAxisA = function() {\n  return this.m_localXAxisA;\n}\n\n/**\n * Get the current joint translation, usually in meters.\n */\nWheelJoint.prototype.getJointTranslation = function() {\n  var bA = this.m_bodyA;\n  var bB = this.m_bodyB;\n\n  var pA = bA.getWorldPoint(this.m_localAnchorA); // Vec2\n  var pB = bB.getWorldPoint(this.m_localAnchorB); // Vec2\n  var d = Vec2.sub(pB, pA); // Vec2\n  var axis = bA.getWorldVector(this.m_localXAxisA); // Vec2\n\n  var translation = Vec2.dot(d, axis); // float\n  return translation;\n}\n\n/**\n * Get the current joint translation speed, usually in meters per second.\n */\nWheelJoint.prototype.getJointSpeed = function() {\n  var wA = this.m_bodyA.m_angularVelocity;\n  var wB = this.m_bodyB.m_angularVelocity;\n  return wB - wA;\n}\n\n/**\n * Is the joint motor enabled?\n */\nWheelJoint.prototype.isMotorEnabled = function() {\n  return this.m_enableMotor;\n}\n\n/**\n * Enable/disable the joint motor.\n */\nWheelJoint.prototype.enableMotor = function(flag) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_enableMotor = flag;\n}\n\n/**\n * Set the motor speed, usually in radians per second.\n */\nWheelJoint.prototype.setMotorSpeed = function(speed) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_motorSpeed = speed;\n}\n\n/**\n * Get the motor speed, usually in radians per second.\n */\nWheelJoint.prototype.getMotorSpeed = function() {\n  return this.m_motorSpeed;\n}\n\n/**\n * Set/Get the maximum motor force, usually in N-m.\n */\nWheelJoint.prototype.setMaxMotorTorque = function(torque) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_maxMotorTorque = torque;\n}\n\nWheelJoint.prototype.getMaxMotorTorque = function() {\n  return this.m_maxMotorTorque;\n}\n\n/**\n * Get the current motor torque given the inverse time step, usually in N-m.\n */\nWheelJoint.prototype.getMotorTorque = function(inv_dt) {\n  return inv_dt * this.m_motorImpulse;\n}\n\n/**\n * Set/Get the spring frequency in hertz. Setting the frequency to zero disables\n * the spring.\n */\nWheelJoint.prototype.setSpringFrequencyHz = function(hz) {\n  this.m_frequencyHz = hz;\n}\n\nWheelJoint.prototype.getSpringFrequencyHz = function() {\n  return this.m_frequencyHz;\n}\n\n/**\n * Set/Get the spring damping ratio\n */\nWheelJoint.prototype.setSpringDampingRatio = function(ratio) {\n  this.m_dampingRatio = ratio;\n}\n\nWheelJoint.prototype.getSpringDampingRatio = function() {\n  return this.m_dampingRatio;\n}\n\nWheelJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nWheelJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nWheelJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.combine(this.m_impulse, this.m_ay, this.m_springImpulse, this.m_ax).mul(inv_dt);\n}\n\nWheelJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_motorImpulse;\n}\n\nWheelJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  // Compute the effective masses.\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n  var d = Vec2.zero();\n  d.addCombine(1, cB, 1, rB);\n  d.subCombine(1, cA, 1, rA); // Vec2\n\n  // Point to line constraint\n  {\n    this.m_ay = Rot.mulVec2(qA, this.m_localYAxisA);\n    this.m_sAy = Vec2.cross(Vec2.add(d, rA), this.m_ay);\n    this.m_sBy = Vec2.cross(rB, this.m_ay);\n\n    this.m_mass = mA + mB + iA * this.m_sAy * this.m_sAy + iB * this.m_sBy\n        * this.m_sBy;\n\n    if (this.m_mass > 0.0) {\n      this.m_mass = 1.0 / this.m_mass;\n    }\n  }\n\n  // Spring constraint\n  this.m_springMass = 0.0;\n  this.m_bias = 0.0;\n  this.m_gamma = 0.0;\n  if (this.m_frequencyHz > 0.0) {\n    this.m_ax = Rot.mulVec2(qA, this.m_localXAxisA);\n    this.m_sAx = Vec2.cross(Vec2.add(d, rA), this.m_ax);\n    this.m_sBx = Vec2.cross(rB, this.m_ax);\n\n    var invMass = mA + mB + iA * this.m_sAx * this.m_sAx + iB * this.m_sBx\n        * this.m_sBx; // float\n\n    if (invMass > 0.0) {\n      this.m_springMass = 1.0 / invMass;\n\n      var C = Vec2.dot(d, this.m_ax); // float\n\n      // Frequency\n      var omega = 2.0 * Math.PI * this.m_frequencyHz; // float\n\n      // Damping coefficient\n      var d = 2.0 * this.m_springMass * this.m_dampingRatio * omega; // float\n\n      // Spring stiffness\n      var k = this.m_springMass * omega * omega; // float\n\n      // magic formulas\n      var h = step.dt; // float\n      this.m_gamma = h * (d + h * k);\n      if (this.m_gamma > 0.0) {\n        this.m_gamma = 1.0 / this.m_gamma;\n      }\n\n      this.m_bias = C * h * k * this.m_gamma;\n\n      this.m_springMass = invMass + this.m_gamma;\n      if (this.m_springMass > 0.0) {\n        this.m_springMass = 1.0 / this.m_springMass;\n      }\n    }\n  } else {\n    this.m_springImpulse = 0.0;\n  }\n\n  // Rotational motor\n  if (this.m_enableMotor) {\n    this.m_motorMass = iA + iB;\n    if (this.m_motorMass > 0.0) {\n      this.m_motorMass = 1.0 / this.m_motorMass;\n    }\n  } else {\n    this.m_motorMass = 0.0;\n    this.m_motorImpulse = 0.0;\n  }\n\n  if (step.warmStarting) {\n    // Account for variable time step.\n    this.m_impulse *= step.dtRatio;\n    this.m_springImpulse *= step.dtRatio;\n    this.m_motorImpulse *= step.dtRatio;\n\n    var P = Vec2.combine(this.m_impulse, this.m_ay, this.m_springImpulse, this.m_ax);\n    var LA = this.m_impulse * this.m_sAy + this.m_springImpulse * this.m_sAx + this.m_motorImpulse;\n    var LB = this.m_impulse * this.m_sBy + this.m_springImpulse * this.m_sBx + this.m_motorImpulse;\n\n    vA.subMul(this.m_invMassA, P);\n    wA -= this.m_invIA * LA;\n\n    vB.addMul(this.m_invMassB, P);\n    wB += this.m_invIB * LB;\n\n  } else {\n    this.m_impulse = 0.0;\n    this.m_springImpulse = 0.0;\n    this.m_motorImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nWheelJoint.prototype.solveVelocityConstraints = function(step) {\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  // Solve spring constraint\n  {\n    var Cdot = Vec2.dot(this.m_ax, vB) - Vec2.dot(this.m_ax, vA) + this.m_sBx\n        * wB - this.m_sAx * wA; // float\n    var impulse = -this.m_springMass\n        * (Cdot + this.m_bias + this.m_gamma * this.m_springImpulse); // float\n    this.m_springImpulse += impulse;\n\n    var P = Vec2.mul(impulse, this.m_ax); // Vec2\n    var LA = impulse * this.m_sAx; // float\n    var LB = impulse * this.m_sBx; // float\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  }\n\n  // Solve rotational motor constraint\n  {\n    var Cdot = wB - wA - this.m_motorSpeed; // float\n    var impulse = -this.m_motorMass * Cdot; // float\n\n    var oldImpulse = this.m_motorImpulse; // float\n    var maxImpulse = step.dt * this.m_maxMotorTorque; // float\n    this.m_motorImpulse = Math.clamp(this.m_motorImpulse + impulse,\n        -maxImpulse, maxImpulse);\n    impulse = this.m_motorImpulse - oldImpulse;\n\n    wA -= iA * impulse;\n    wB += iB * impulse;\n  }\n\n  // Solve point to line constraint\n  {\n    var Cdot = Vec2.dot(this.m_ay, vB) - Vec2.dot(this.m_ay, vA) + this.m_sBy\n        * wB - this.m_sAy * wA; // float\n    var impulse = -this.m_mass * Cdot; // float\n    this.m_impulse += impulse;\n\n    var P = Vec2.mul(impulse, this.m_ay); // Vec2\n    var LA = impulse * this.m_sAy; // float\n    var LB = impulse * this.m_sBy; // float\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nWheelJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n  var d = Vec2.zero();\n  d.addCombine(1, cB, 1, rB);\n  d.subCombine(1, cA, 1, rA);\n\n  var ay = Rot.mulVec2(qA, this.m_localYAxisA);\n\n  var sAy = Vec2.cross(Vec2.add(d, rA), ay); // float\n  var sBy = Vec2.cross(rB, ay); // float\n\n  var C = Vec2.dot(d, ay); // float\n\n  var k = this.m_invMassA + this.m_invMassB + this.m_invIA * this.m_sAy\n      * this.m_sAy + this.m_invIB * this.m_sBy * this.m_sBy; // float\n\n  var impulse; // float\n  if (k != 0.0) {\n    impulse = -C / k;\n  } else {\n    impulse = 0.0;\n  }\n\n  var P = Vec2.mul(impulse, ay); // Vec2\n  var LA = impulse * sAy; // float\n  var LB = impulse * sBy; // float\n\n  cA.subMul(this.m_invMassA, P);\n  aA -= this.m_invIA * LA;\n  cB.addMul(this.m_invMassB, P);\n  aB += this.m_invIB * LB;\n\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n\n  return Math.abs(C) <= Settings.linearSlop;\n}\n","var stats = require('./util/stats');\nvar math = require('./util/math');\n\nfunction Texture(image, ratio) {\n  if (typeof image === 'object') {\n    this.src(image, ratio);\n  }\n}\n\nTexture.prototype.pipe = function() {\n  return new Texture(this);\n};\n\n/**\n * Signatures: (image), (x, y, w, h), (w, h)\n */\nTexture.prototype.src = function(x, y, w, h) {\n  if (typeof x === 'object') {\n    var image = x, ratio = y || 1;\n\n    this._image = image;\n    this._sx = this._dx = 0;\n    this._sy = this._dy = 0;\n    this._sw = this._dw = image.width / ratio;\n    this._sh = this._dh = image.height / ratio;\n\n    this.width = image.width / ratio;\n    this.height = image.height / ratio;\n\n    this.ratio = ratio;\n\n  } else {\n    if (typeof w === 'undefined') {\n      w = x, h = y;\n    } else {\n      this._sx = x, this._sy = y;\n    }\n    this._sw = this._dw = w;\n    this._sh = this._dh = h;\n\n    this.width = w;\n    this.height = h;\n  }\n  return this;\n};\n\n/**\n * Signatures: (x, y, w, h), (x, y)\n */\nTexture.prototype.dest = function(x, y, w, h) {\n  this._dx = x, this._dy = y;\n  this._dx = x, this._dy = y;\n  if (typeof w !== 'undefined') {\n    this._dw = w, this._dh = h;\n    this.width = w, this.height = h;\n  }\n  return this;\n};\n\nTexture.prototype.draw = function(context, x1, y1, x2, y2, x3, y3, x4, y4) {\n  var image = this._image;\n  if (image === null || typeof image !== 'object') {\n    return;\n  }\n\n  var sx = this._sx, sy = this._sy;\n  var sw = this._sw, sh = this._sh;\n  var dx = this._dx, dy = this._dy;\n  var dw = this._dw, dh = this._dh;\n\n  if (typeof x3 !== 'undefined') {\n    x1 = math.limit(x1, 0, this._sw), x2 = math.limit(x2, 0, this._sw - x1);\n    y1 = math.limit(y1, 0, this._sh), y2 = math.limit(y2, 0, this._sh - y1);\n    sx += x1, sy += y1, sw = x2, sh = y2;\n    dx = x3, dy = y3, dw = x4, dh = y4;\n\n  } else if (typeof x2 !== 'undefined') {\n    dx = x1, dy = y1, dw = x2, dh = y2;\n\n  } else if (typeof x1 !== 'undefined') {\n    dw = x1, dh = y1;\n  }\n\n  var ratio = this.ratio || 1;\n  sx *= ratio, sy *= ratio, sw *= ratio, sh *= ratio;\n\n  try {\n    if (typeof image.draw === 'function') {\n      image.draw(context, sx, sy, sw, sh, dx, dy, dw, dh);\n    } else {\n      stats.draw++;\n      context.drawImage(image, sx, sy, sw, sh, dx, dy, dw, dh);\n    }\n  } catch (ex) {\n    if (!image._draw_failed) {\n      console.log('Unable to draw: ', image);\n      console.log(ex);\n      image._draw_failed = true;\n    }\n  }\n};\n\nmodule.exports = Texture;\n","var create = require('./create');\nvar native = Math;\n\nmodule.exports = create(Math);\n\nmodule.exports.random = function(min, max) {\n  if (typeof min === 'undefined') {\n    max = 1, min = 0;\n  } else if (typeof max === 'undefined') {\n    max = min, min = 0;\n  }\n  return min == max ? min : native.random() * (max - min) + min;\n};\n\nmodule.exports.rotate = function(num, min, max) {\n  if (typeof min === 'undefined') {\n    max = 1, min = 0;\n  } else if (typeof max === 'undefined') {\n    max = min, min = 0;\n  }\n  if (max > min) {\n    num = (num - min) % (max - min);\n    return num + (num < 0 ? max : min);\n  } else {\n    num = (num - max) % (min - max);\n    return num + (num <= 0 ? min : max);\n  }\n};\n\nmodule.exports.limit = function(num, min, max) {\n  if (num < min) {\n    return min;\n  } else if (num > max) {\n    return max;\n  } else {\n    return num;\n  }\n};\n\nmodule.exports.length = function(x, y) {\n  return native.sqrt(x * x + y * y);\n};","function Matrix(a, b, c, d, e, f) {\n  this.reset(a, b, c, d, e, f);\n};\n\nMatrix.prototype.toString = function() {\n  return '[' + this.a + ', ' + this.b + ', ' + this.c + ', ' + this.d + ', '\n      + this.e + ', ' + this.f + ']';\n};\n\nMatrix.prototype.clone = function() {\n  return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n};\n\nMatrix.prototype.reset = function(a, b, c, d, e, f) {\n  this._dirty = true;\n  if (typeof a === 'object') {\n    this.a = a.a, this.d = a.d;\n    this.b = a.b, this.c = a.c;\n    this.e = a.e, this.f = a.f;\n  } else {\n    this.a = a || 1, this.d = d || 1;\n    this.b = b || 0, this.c = c || 0;\n    this.e = e || 0, this.f = f || 0;\n  }\n  return this;\n};\n\nMatrix.prototype.identity = function() {\n  this._dirty = true;\n  this.a = 1;\n  this.b = 0;\n  this.c = 0;\n  this.d = 1;\n  this.e = 0;\n  this.f = 0;\n  return this;\n};\n\nMatrix.prototype.rotate = function(angle) {\n  if (!angle) {\n    return this;\n  }\n\n  this._dirty = true;\n\n  var u = angle ? Math.cos(angle) : 1;\n  // android bug may give bad 0 values\n  var v = angle ? Math.sin(angle) : 0;\n\n  var a = u * this.a - v * this.b;\n  var b = u * this.b + v * this.a;\n  var c = u * this.c - v * this.d;\n  var d = u * this.d + v * this.c;\n  var e = u * this.e - v * this.f;\n  var f = u * this.f + v * this.e;\n\n  this.a = a;\n  this.b = b;\n  this.c = c;\n  this.d = d;\n  this.e = e;\n  this.f = f;\n\n  return this;\n};\n\nMatrix.prototype.translate = function(x, y) {\n  if (!x && !y) {\n    return this;\n  }\n  this._dirty = true;\n  this.e += x;\n  this.f += y;\n  return this;\n};\n\nMatrix.prototype.scale = function(x, y) {\n  if (!(x - 1) && !(y - 1)) {\n    return this;\n  }\n  this._dirty = true;\n  this.a *= x;\n  this.b *= y;\n  this.c *= x;\n  this.d *= y;\n  this.e *= x;\n  this.f *= y;\n  return this;\n};\n\nMatrix.prototype.skew = function(x, y) {\n  if (!x && !y) {\n    return this;\n  }\n  this._dirty = true;\n\n  var a = this.a + this.b * x;\n  var b = this.b + this.a * y;\n  var c = this.c + this.d * x;\n  var d = this.d + this.c * y;\n  var e = this.e + this.f * x;\n  var f = this.f + this.e * y;\n\n  this.a = a;\n  this.b = b;\n  this.c = c;\n  this.d = d;\n  this.e = e;\n  this.f = f;\n  return this;\n};\n\nMatrix.prototype.concat = function(m) {\n  this._dirty = true;\n\n  var n = this;\n\n  var a = n.a * m.a + n.b * m.c;\n  var b = n.b * m.d + n.a * m.b;\n  var c = n.c * m.a + n.d * m.c;\n  var d = n.d * m.d + n.c * m.b;\n  var e = n.e * m.a + m.e + n.f * m.c;\n  var f = n.f * m.d + m.f + n.e * m.b;\n\n  this.a = a;\n  this.b = b;\n  this.c = c;\n  this.d = d;\n  this.e = e;\n  this.f = f;\n\n  return this;\n};\n\nMatrix.prototype.inverse = Matrix.prototype.reverse = function() {\n  if (this._dirty) {\n    this._dirty = false;\n    this.inversed = this.inversed || new Matrix();\n    var z = this.a * this.d - this.b * this.c;\n    this.inversed.a = this.d / z;\n    this.inversed.b = -this.b / z;\n    this.inversed.c = -this.c / z;\n    this.inversed.d = this.a / z;\n    this.inversed.e = (this.c * this.f - this.e * this.d) / z;\n    this.inversed.f = (this.e * this.b - this.a * this.f) / z;\n  }\n  return this.inversed;\n};\n\nMatrix.prototype.map = function(p, q) {\n  q = q || {};\n  q.x = this.a * p.x + this.c * p.y + this.e;\n  q.y = this.b * p.x + this.d * p.y + this.f;\n  return q;\n};\n\nMatrix.prototype.mapX = function(x, y) {\n  if (typeof x === 'object')\n    y = x.y, x = x.x;\n  return this.a * x + this.c * y + this.e;\n};\n\nMatrix.prototype.mapY = function(x, y) {\n  if (typeof x === 'object')\n    y = x.y, x = x.x;\n  return this.b * x + this.d * y + this.f;\n};\n\nmodule.exports = Matrix;\n","var planck = require('../lib/');\nvar Stage = require('stage-js/platform/web');\n\nmodule.exports = planck;\n\n// x, y, width, height: camera position\n// hz, speed: frequency and speed of simulation\n// background: background color\n// step: function, is always called\n// paint: function, is called only after repaint\n\nplanck.testbed = function(opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = null;\n  }\n\n  Stage(function(stage, canvas) {\n\n    stage.on(Stage.Mouse.START, function() {\n      window.focus();\n      document.activeElement && document.activeElement.blur();\n      canvas.focus();\n    });\n\n    stage.MAX_ELAPSE = 1000 / 30;\n    var Vec2 = planck.Vec2;\n\n    var testbed = {};\n    testbed.canvas = canvas;\n\n    var paused = false;\n    stage.on('resume', function() {\n      paused = false;\n      testbed._resume && testbed._resume();\n    });\n    stage.on('pause', function() {\n      paused = true;\n      testbed._pause && testbed._pause();\n    });\n    testbed.isPaused = function() {\n      return paused;\n    };\n    testbed.togglePause = function() {\n      paused ? testbed.resume() : testbed.pause();\n    };\n    testbed.pause = function() {\n      stage.pause();\n    };\n    testbed.resume = function() {\n      stage.resume();\n      testbed.focus();\n    };\n    testbed.focus = function() {\n      document.activeElement && document.activeElement.blur();\n      canvas.focus();\n    };\n\n    testbed.debug = false;\n    testbed.width = 80;\n    testbed.height = 60;\n    testbed.x = 0;\n    testbed.y = -10;\n    testbed.ratio = 16;\n    testbed.hz = 60;\n    testbed.speed = 1;\n    testbed.activeKeys = {};\n    testbed.background = '#222222';\n\n    var statusText = '';\n    var statusMap = {};\n\n    function statusSet(name, value) {\n      if (typeof value !== 'function' && typeof value !== 'object') {\n        statusMap[name] = value;\n      }\n    }\n\n    function statusMerge(obj) {\n      for (var key in obj) {\n        statusSet(key, obj[key]);\n      }\n    }\n\n    testbed.status = function(a, b) {\n      if (typeof b !== 'undefined') {\n        statusSet(a, b);\n      } else if (a && typeof a === 'object') {\n        statusMerge(a);\n      } else if (typeof a === 'string') {\n        statusText = a;\n      }\n\n      testbed._status && testbed._status(statusText, statusMap);\n    };\n\n    testbed.info = function(text) {\n      testbed._info && testbed._info(text);\n    };\n\n    var lastDrawHash = \"\", drawHash = \"\";\n\n    (function() {\n      var drawingTexture = new Stage.Texture();\n      stage.append(Stage.image(drawingTexture));\n\n      var buffer = [];\n      stage.tick(function() {\n        buffer.length = 0;\n      }, true);\n\n      drawingTexture.draw = function(ctx) {\n        ctx.save();\n        ctx.transform(1, 0, 0, -1, -testbed.x, -testbed.y);\n        ctx.lineWidth = 2  / testbed.ratio;\n        ctx.lineCap = 'round';\n        for (var drawing = buffer.shift(); drawing; drawing = buffer.shift()) {\n          drawing(ctx, testbed.ratio);\n        }\n        ctx.restore();\n      };\n\n      testbed.drawPoint = function(p, r, color) {\n        buffer.push(function (ctx, ratio) {\n          ctx.beginPath();\n          ctx.arc(p.x, p.y, 5  / ratio, 0, 2 * Math.PI);\n          ctx.strokeStyle = color;\n          ctx.stroke();\n        });\n        drawHash += \"point\" + p.x + ',' + p.y + ',' + r + ',' + color;\n      };\n\n      testbed.drawCircle = function(p, r, color) {\n        buffer.push(function (ctx) {\n          ctx.beginPath();\n          ctx.arc(p.x, p.y, r, 0, 2 * Math.PI);\n          ctx.strokeStyle = color;\n          ctx.stroke();\n        });\n        drawHash += \"circle\" + p.x + ',' + p.y + ',' + r + ',' + color;\n      };\n\n      testbed.drawSegment = function(a, b, color) {\n        buffer.push(function (ctx) {\n          ctx.beginPath();\n          ctx.moveTo(a.x, a.y);\n          ctx.lineTo(b.x, b.y);\n          ctx.strokeStyle = color;\n          ctx.stroke();\n        });\n        drawHash += \"segment\" + a.x + ',' + a.y + ',' + b.x + ',' + b.y + ',' + color;\n      };\n\n      testbed.drawPolygon = function(points, color) {\n        if (!points || !points.length) {\n          return;\n        }\n        buffer.push(function (ctx) {\n          ctx.beginPath();\n          ctx.moveTo(points[0].x, points[0].y);\n          for (var i = 1; i < points.length; i++) {\n            ctx.lineTo(points[i].x, points[i].y);\n          }\n          ctx.strokeStyle = color;\n          ctx.closePath();\n          ctx.stroke();\n        });\n        drawHash += \"segment\";\n        for (var i = 1; i < points.length; i++) {\n          drawHash += points[i].x + ',' + points[i].y + ',';\n        }\n        drawHash += color;\n      };\n\n      testbed.drawAABB = function(aabb, color) {\n        buffer.push(function (ctx) {\n          ctx.beginPath();\n          ctx.moveTo(aabb.lowerBound.x, aabb.lowerBound.y);\n          ctx.lineTo(aabb.upperBound.x, aabb.lowerBound.y);\n          ctx.lineTo(aabb.upperBound.x, aabb.upperBound.y);\n          ctx.lineTo(aabb.lowerBound.x, aabb.upperBound.y);\n          ctx.strokeStyle = color;\n          ctx.closePath();\n          ctx.stroke();\n        });\n        drawHash += \"aabb\";\n        drawHash += aabb.lowerBound.x + ',' + aabb.lowerBound.y + ',';\n        drawHash += aabb.upperBound.x + ',' + aabb.upperBound.y + ',';\n        drawHash += color;\n      };\n\n      testbed.color = function(r, g, b) {\n        r = r * 256 | 0;\n        g = g * 256 | 0;\n        b = b * 256 | 0;\n        return 'rgb(' + r + ', ' + g + ', ' + b + ')'\n      };\n\n    })();\n\n    var world = callback(testbed);\n\n    var viewer = new Viewer(world, testbed);\n\n    var lastX = 0, lastY = 0;\n    stage.tick(function(dt, t) {\n      // update camera position\n      if (lastX !== testbed.x || lastY !== testbed.y) {\n        viewer.offset(-testbed.x, -testbed.y);\n        lastX = testbed.x, lastY = testbed.y;\n      }\n    });\n\n    viewer.tick(function(dt, t) {\n      // call testbed step, if provided\n      if (typeof testbed.step === 'function') {\n        testbed.step(dt, t);\n      }\n\n      if (targetBody) {\n        testbed.drawSegment(targetBody.getPosition(), mouseMove, 'rgba(255,255,255,0.2)');\n      }\n\n      if (lastDrawHash !== drawHash) {\n        lastDrawHash = drawHash;\n        stage.touch();\n      }\n      drawHash = \"\";\n\n      return true;\n    });\n\n    // stage.empty();\n    stage.background(testbed.background);\n    stage.viewbox(testbed.width, testbed.height);\n    stage.pin('alignX', -0.5);\n    stage.pin('alignY', -0.5);\n    stage.prepend(viewer);\n\n    function findBody(point) {\n      var body;\n      var aabb = planck.AABB(point, point);\n      world.queryAABB(aabb, function(fixture) {\n        if (body) {\n          return;\n        }\n        if (!fixture.getBody().isDynamic() || !fixture.testPoint(point)) {\n          return;\n        }\n        body = fixture.getBody();\n        return true;\n      });\n      return body;\n    }\n\n    var mouseGround = world.createBody();\n    var mouseJoint;\n\n    var targetBody;\n    var mouseMove = {x:0, y:0};\n\n    viewer.attr('spy', true).on(Stage.Mouse.START, function(point) {\n      point = { x: point.x, y: -point.y };\n      if (targetBody) {\n        return;\n      }\n\n      var body = findBody(point);\n      if (!body) {\n        return;\n      }\n\n      if (testbed.mouseForce) {\n        targetBody = body;\n\n      } else {\n        mouseJoint = planck.MouseJoint({maxForce: 1000}, mouseGround, body, Vec2(point));\n        world.createJoint(mouseJoint);\n      }\n\n    }).on(Stage.Mouse.MOVE, function(point) {\n      point = { x: point.x, y: -point.y };\n      if (mouseJoint) {\n        mouseJoint.setTarget(point);\n      }\n\n      mouseMove.x = point.x;\n      mouseMove.y = point.y;\n    }).on(Stage.Mouse.END, function(point) {\n      point = { x: point.x, y: -point.y };\n      if (mouseJoint) {\n        world.destroyJoint(mouseJoint);\n        mouseJoint = null;\n      }\n      if (targetBody) {\n        var force = Vec2.sub(point, targetBody.getPosition());\n        targetBody.applyForceToCenter(force.mul(testbed.mouseForce), true);\n        targetBody = null;\n      }\n\n    }).on(Stage.Mouse.CANCEL, function(point) {\n      point = { x: point.x, y: -point.y };\n      if (mouseJoint) {\n        world.destroyJoint(mouseJoint);\n        mouseJoint = null;\n      }\n      if (targetBody) {\n        targetBody = null;\n      }\n    });\n\n    window.addEventListener(\"keydown\", function(e) {\n      switch (e.keyCode) {\n        case 'P'.charCodeAt(0):\n          testbed.togglePause();\n          break;\n      }\n    }, false);\n\n    var downKeys = {};\n    window.addEventListener(\"keydown\", function(e) {\n      var keyCode = e.keyCode;\n      downKeys[keyCode] = true;\n      updateActiveKeys(keyCode, true);\n      testbed.keydown && testbed.keydown(keyCode, String.fromCharCode(keyCode));\n    });\n    window.addEventListener(\"keyup\", function(e) {\n      var keyCode = e.keyCode;\n      downKeys[keyCode] = false;\n      updateActiveKeys(keyCode, false);\n      testbed.keyup && testbed.keyup(keyCode, String.fromCharCode(keyCode));\n    });\n\n    var activeKeys = testbed.activeKeys;\n    function updateActiveKeys(keyCode, down) {\n      var char = String.fromCharCode(keyCode)\n      if (/\\w/.test(char)) {\n        activeKeys[char] = down;\n      }\n      activeKeys.right = downKeys[39] || activeKeys['D'];\n      activeKeys.left = downKeys[37] || activeKeys['A'];\n      activeKeys.up = downKeys[38] || activeKeys['W'];\n      activeKeys.down = downKeys[40] || activeKeys['S'];\n      activeKeys.fire = downKeys[32] || downKeys[13] ;\n    }\n\n  });\n\n};\n\nViewer._super = Stage;\nViewer.prototype = Stage._create(Viewer._super.prototype);\n\nfunction Viewer(world, opts) {\n  Viewer._super.call(this);\n  this.label('Planck');\n\n  opts = opts || {};\n\n  var options = this._options = {};\n  this._options.speed = opts.speed || 1;\n  this._options.hz = opts.hz || 60;\n  if (Math.abs(this._options.hz) < 1) {\n    this._options.hz = 1 / this._options.hz;\n  }\n  this._options.ratio = opts.ratio || 16;\n  this._options.lineWidth = 2 / this._options.ratio;\n\n  this._world = world;\n\n  var timeStep = 1 / this._options.hz;\n  var elapsedTime = 0;\n  this.tick(function(dt) {\n    dt = dt * 0.001 * options.speed;\n    elapsedTime += dt;\n    while (elapsedTime > timeStep) {\n      world.step(timeStep);\n      elapsedTime -= timeStep;\n    }\n    this.renderWorld();\n    return true;\n  }, true);\n\n  world.on('remove-fixture', function (obj) {\n    obj.ui && obj.ui.remove();\n  });\n\n  world.on('remove-joint', function (obj) {\n    obj.ui && obj.ui.remove();\n  });\n}\n\nViewer.prototype.renderWorld = function(world) {\n  var world = this._world;\n  var viewer = this;\n\n  for (var b = world.getBodyList(); b; b = b.getNext()) {\n    for (var f = b.getFixtureList(); f; f = f.getNext()) {\n\n      if (!f.ui) {\n        if (f.render && f.render.stroke) {\n          this._options.strokeStyle = f.render.stroke;\n        } else if (b.render && b.render.stroke) {\n          this._options.strokeStyle = b.render.stroke;\n        } else if (b.isDynamic()) {\n          this._options.strokeStyle = 'rgba(255,255,255,0.9)';\n        } else if (b.isKinematic()) {\n          this._options.strokeStyle = 'rgba(255,255,255,0.7)';\n        } else if (b.isStatic()) {\n          this._options.strokeStyle = 'rgba(255,255,255,0.5)';\n        }\n\n        if (f.render && f.render.fill) {\n          this._options.fillStyle = f.render.fill;\n        } else if (b.render && b.render.fill) {\n          this._options.fillStyle = b.render.fill;\n        } else {\n          this._options.fillStyle = '';\n        }\n\n        var type = f.getType();\n        var shape = f.getShape();\n        if (type == 'circle') {\n          f.ui = viewer.drawCircle(shape, this._options);\n        }\n        if (type == 'edge') {\n          f.ui = viewer.drawEdge(shape, this._options);\n        }\n        if (type == 'polygon') {\n          f.ui = viewer.drawPolygon(shape, this._options);\n        }\n        if (type == 'chain') {\n          f.ui = viewer.drawChain(shape, this._options);\n        }\n\n        if (f.ui) {\n          f.ui.appendTo(viewer);\n        }\n      }\n\n      if (f.ui) {\n        var p = b.getPosition(), r = b.getAngle();\n        if (f.ui.__lastX !== p.x || f.ui.__lastY !== p.y || f.ui.__lastR !== r) {\n          f.ui.__lastX = p.x;\n          f.ui.__lastY = p.y;\n          f.ui.__lastR = r;\n          f.ui.offset(p.x, -p.y);\n          f.ui.rotate(-r);\n        }\n      }\n\n    }\n  }\n\n  for (var j = world.getJointList(); j; j = j.getNext()) {\n    var type = j.getType();\n    var a = j.getAnchorA();\n    var b = j.getAnchorB();\n\n    if (!j.ui) {\n      this._options.strokeStyle = 'rgba(255,255,255,0.2)';\n\n      j.ui = viewer.drawJoint(j, this._options);\n      j.ui.pin('handle', 0.5);\n      if (j.ui) {\n        j.ui.appendTo(viewer);\n      }\n    }\n\n    if (j.ui) {\n      var cx = (a.x + b.x) * 0.5;\n      var cy = (-a.y + -b.y) * 0.5;\n      var dx = a.x - b.x;\n      var dy = -a.y - -b.y;\n      var d = Math.sqrt(dx * dx + dy * dy);\n      j.ui.width(d);\n      j.ui.rotate(Math.atan2(dy, dx));\n      j.ui.offset(cx, cy);\n    }\n  }\n\n}\n\nViewer.prototype.drawJoint = function(joint, options) {\n  var lw = options.lineWidth;\n  var ratio = options.ratio;\n\n  var length = 10;\n\n  var texture = Stage.canvas(function(ctx) {\n\n    this.size(length + 2 * lw, 2 * lw, ratio);\n\n    ctx.scale(ratio, ratio);\n    ctx.beginPath();\n    ctx.moveTo(lw, lw);\n    ctx.lineTo(lw + length, lw);\n\n    ctx.lineCap = 'round';\n    ctx.lineWidth = options.lineWidth;\n    ctx.strokeStyle = options.strokeStyle;\n    ctx.stroke();\n  });\n\n  var image = Stage.image(texture).stretch();\n  return image;\n};\n\nViewer.prototype.drawCircle = function(shape, options) {\n  var lw = options.lineWidth;\n  var ratio = options.ratio;\n\n  var r = shape.m_radius;\n  var cx = r + lw;\n  var cy = r + lw;\n  var w = r * 2 + lw * 2;\n  var h = r * 2 + lw * 2;\n\n  var texture = Stage.canvas(function(ctx) {\n\n    this.size(w, h, ratio);\n\n    ctx.scale(ratio, ratio);\n    ctx.arc(cx, cy, r, 0, 2 * Math.PI);\n    if (options.fillStyle) {\n      ctx.fillStyle = options.fillStyle;\n      ctx.fill();\n    }\n    ctx.lineTo(cx, cy);\n    ctx.lineWidth = options.lineWidth;\n    ctx.strokeStyle = options.strokeStyle;\n    ctx.stroke();\n  });\n  var image = Stage.image(texture)\n    .offset(shape.m_p.x - cx, -shape.m_p.y - cy);\n  var node = Stage.create().append(image);\n  return node;\n};\n\nViewer.prototype.drawEdge = function(edge, options) {\n  var lw = options.lineWidth;\n  var ratio = options.ratio;\n\n  var v1 = edge.m_vertex1;\n  var v2 = edge.m_vertex2;\n\n  var dx = v2.x - v1.x;\n  var dy = v2.y - v1.y;\n\n  var length = Math.sqrt(dx * dx + dy * dy);\n\n  var texture = Stage.canvas(function(ctx) {\n\n    this.size(length + 2 * lw, 2 * lw, ratio);\n\n    ctx.scale(ratio, ratio);\n    ctx.beginPath();\n    ctx.moveTo(lw, lw);\n    ctx.lineTo(lw + length, lw);\n\n    ctx.lineCap = 'round';\n    ctx.lineWidth = options.lineWidth;\n    ctx.strokeStyle = options.strokeStyle;\n    ctx.stroke();\n  });\n\n  var minX = Math.min(v1.x, v2.x);\n  var minY = Math.min(-v1.y, -v2.y);\n\n  var image = Stage.image(texture);\n  image.rotate(-Math.atan2(dy, dx));\n  image.offset(minX - lw, minY - lw);\n  var node = Stage.create().append(image);\n  return node;\n};\n\nViewer.prototype.drawPolygon = function(shape, options) {\n  var lw = options.lineWidth;\n  var ratio = options.ratio;\n\n  var vertices = shape.m_vertices;\n\n  if (!vertices.length) {\n    return;\n  }\n\n  var minX = Infinity, minY = Infinity;\n  var maxX = -Infinity, maxY = -Infinity;\n  for (var i = 0; i < vertices.length; ++i) {\n    var v = vertices[i];\n    minX = Math.min(minX, v.x);\n    maxX = Math.max(maxX, v.x);\n    minY = Math.min(minY, -v.y);\n    maxY = Math.max(maxY, -v.y);\n  }\n\n  var width = maxX - minX;\n  var height = maxY - minY;\n\n  var texture = Stage.canvas(function(ctx) {\n\n    this.size(width + 2 * lw, height + 2 * lw, ratio);\n\n    ctx.scale(ratio, ratio);\n    ctx.beginPath();\n    for (var i = 0; i < vertices.length; ++i) {\n      var v = vertices[i];\n      var x = v.x - minX + lw;\n      var y = -v.y - minY + lw;\n      if (i == 0)\n        ctx.moveTo(x, y);\n      else\n        ctx.lineTo(x, y);\n    }\n\n    if (vertices.length > 2) {\n      ctx.closePath();\n    }\n\n    if (options.fillStyle) {\n      ctx.fillStyle = options.fillStyle;\n      ctx.fill();\n      ctx.closePath();\n    }\n\n    ctx.lineCap = 'round';\n    ctx.lineWidth = options.lineWidth;\n    ctx.strokeStyle = options.strokeStyle;\n    ctx.stroke();\n  });\n\n  var image = Stage.image(texture);\n  image.offset(minX - lw, minY - lw);\n  var node = Stage.create().append(image);\n  return node;\n};\n\nViewer.prototype.drawChain = function(shape, options) {\n  var lw = options.lineWidth;\n  var ratio = options.ratio;\n\n  var vertices = shape.m_vertices;\n\n  if (!vertices.length) {\n    return;\n  }\n\n  var minX = Infinity, minY = Infinity;\n  var maxX = -Infinity, maxY = -Infinity;\n  for (var i = 0; i < vertices.length; ++i) {\n    var v = vertices[i];\n    minX = Math.min(minX, v.x);\n    maxX = Math.max(maxX, v.x);\n    minY = Math.min(minY, -v.y);\n    maxY = Math.max(maxY, -v.y);\n  }\n\n  var width = maxX - minX;\n  var height = maxY - minY;\n\n  var texture = Stage.canvas(function(ctx) {\n\n    this.size(width + 2 * lw, height + 2 * lw, ratio);\n\n    ctx.scale(ratio, ratio);\n    ctx.beginPath();\n    for (var i = 0; i < vertices.length; ++i) {\n      var v = vertices[i];\n      var x = v.x - minX + lw;\n      var y = -v.y - minY + lw;\n      if (i == 0)\n        ctx.moveTo(x, y);\n      else\n        ctx.lineTo(x, y);\n    }\n\n    // TODO: if loop\n    if (vertices.length > 2) {\n      // ctx.closePath();\n    }\n\n    if (options.fillStyle) {\n      ctx.fillStyle = options.fillStyle;\n      ctx.fill();\n      ctx.closePath();\n    }\n\n    ctx.lineCap = 'round';\n    ctx.lineWidth = options.lineWidth;\n    ctx.strokeStyle = options.strokeStyle;\n    ctx.stroke();\n  });\n\n  var image = Stage.image(texture);\n  image.offset(minX - lw, minY - lw);\n  var node = Stage.create().append(image);\n  return node;\n};\n","module.exports = require('../lib/');\n\nmodule.exports.internal = {};\n\nrequire('../lib/canvas');\nmodule.exports.internal.Image = require('../lib/image');\nrequire('../lib/anim');\nrequire('../lib/str');\nrequire('../lib/layout');\nrequire('../lib/addon/tween');\nmodule.exports.Mouse = require('../lib/addon/mouse');\nmodule.exports.Math = require('../lib/util/math');\nmodule.exports._extend = require('../lib/util/extend');\nmodule.exports._create = require('../lib/util/create');\n\nrequire('../lib/loader/web');","module.exports = require('./core');\nmodule.exports.Matrix = require('./matrix');\nmodule.exports.Texture = require('./texture');\nrequire('./atlas');\nrequire('./tree');\nrequire('./event');\nrequire('./pin');\n\nrequire('./loop');\nrequire('./root');","module.exports = function() {\n  var count = 0;\n  function fork(fn, n) {\n    count += n = (typeof n === 'number' && n >= 1 ? n : 1);\n    return function() {\n      fn && fn.apply(this, arguments);\n      if (n > 0) {\n        n--, count--, call();\n      }\n    };\n  }\n  var then = [];\n  function call() {\n    if (count === 0) {\n      while (then.length) {\n        setTimeout(then.shift(), 0);\n      }\n    }\n  }\n  fork.then = function(fn) {\n    if (count === 0) {\n      setTimeout(fn, 0);\n    } else {\n      then.push(fn);\n    }\n  };\n  return fork;\n};","if (typeof DEBUG === 'undefined')\n  DEBUG = true;\n\nvar Class = require('./core');\nvar Texture = require('./texture');\n\nvar extend = require('./util/extend');\nvar create = require('./util/create');\nvar is = require('./util/is');\n\nvar string = require('./util/string');\n\n// name : atlas\nvar _atlases_map = {};\n// [atlas]\nvar _atlases_arr = [];\n\n// TODO: print subquery not found error\n// TODO: index textures\n\nClass.atlas = function(def) {\n  var atlas = is.fn(def.draw) ? def : new Atlas(def);\n  if (def.name) {\n    _atlases_map[def.name] = atlas;\n  }\n  _atlases_arr.push(atlas);\n\n  deprecated(def, 'imagePath');\n  deprecated(def, 'imageRatio');\n\n  var url = def.imagePath;\n  var ratio = def.imageRatio || 1;\n  if (is.string(def.image)) {\n    url = def.image;\n  } else if (is.hash(def.image)) {\n    url = def.image.src || def.image.url;\n    ratio = def.image.ratio || ratio;\n  }\n  url && Class.preload(function(done) {\n    url = Class.resolve(url);\n    DEBUG && console.log('Loading atlas: ' + url);\n    var imageloader = Class.config('image-loader');\n\n    imageloader(url, function(image) {\n      DEBUG && console.log('Image loaded: ' + url);\n      atlas.src(image, ratio);\n      done();\n\n    }, function(err) {\n      DEBUG && console.log('Error loading atlas: ' + url, err);\n      done();\n    });\n  });\n\n  return atlas;\n};\n\nAtlas._super = Texture;\nAtlas.prototype = create(Atlas._super.prototype);\n\nfunction Atlas(def) {\n  Atlas._super.call(this);\n\n  var atlas = this;\n\n  deprecated(def, 'filter');\n  deprecated(def, 'cutouts');\n  deprecated(def, 'sprites');\n  deprecated(def, 'factory');\n\n  var map = def.map || def.filter;\n  var ppu = def.ppu || def.ratio || 1;\n  var trim = def.trim || 0;\n  var textures = def.textures;\n  var factory = def.factory;\n  var cutouts = def.cutouts || def.sprites;\n\n  function make(def) {\n    if (!def || is.fn(def.draw)) {\n      return def;\n    }\n\n    def = extend({}, def);\n\n    if (is.fn(map)) {\n      def = map(def);\n    }\n\n    if (ppu != 1) {\n      def.x *= ppu, def.y *= ppu;\n      def.width *= ppu, def.height *= ppu;\n      def.top *= ppu, def.bottom *= ppu;\n      def.left *= ppu, def.right *= ppu;\n    }\n\n    if (trim != 0) {\n      def.x += trim, def.y += trim;\n      def.width -= 2 * trim, def.height -= 2 * trim;\n      def.top -= trim, def.bottom -= trim;\n      def.left -= trim, def.right -= trim;\n    }\n\n    var texture = atlas.pipe();\n    texture.top = def.top, texture.bottom = def.bottom;\n    texture.left = def.left, texture.right = def.right;\n    texture.src(def.x, def.y, def.width, def.height);\n    return texture;\n  }\n\n  function find(query) {\n    if (textures) {\n      if (is.fn(textures)) {\n        return textures(query);\n      } else if (is.hash(textures)) {\n        return textures[query];\n      }\n    }\n    if (cutouts) { // deprecated\n      var result = null, n = 0;\n      for (var i = 0; i < cutouts.length; i++) {\n        if (string.startsWith(cutouts[i].name, query)) {\n          if (n === 0) {\n            result = cutouts[i];\n          } else if (n === 1) {\n            result = [ result, cutouts[i] ];\n          } else {\n            result.push(cutouts[i]);\n          }\n          n++;\n        }\n      }\n      if (n === 0 && is.fn(factory)) {\n        result = function(subquery) {\n          return factory(query + (subquery ? subquery : ''));\n        };\n      }\n      return result;\n    }\n  }\n\n  this.select = function(query) {\n    if (!query) {\n      // TODO: if `textures` is texture def, map or fn?\n      return new Selection(this.pipe());\n    }\n    var found = find(query);\n    if (found) {\n      return new Selection(found, find, make);\n    }\n  };\n\n};\n\nvar nfTexture = new Texture();\nnfTexture.x = nfTexture.y = nfTexture.width = nfTexture.height = 0;\nnfTexture.pipe = nfTexture.src = nfTexture.dest = function() {\n  return this;\n};\nnfTexture.draw = function() {\n};\n\nvar nfSelection = new Selection(nfTexture);\n\nfunction Selection(result, find, make) {\n  function link(result, subquery) {\n    if (!result) {\n      return nfTexture;\n\n    } else if (is.fn(result.draw)) {\n      return result;\n\n    } else if (is.hash(result) && is.number(result.width)\n        && is.number(result.height) && is.fn(make)) {\n      return make(result);\n\n    } else if (is.hash(result) && is.defined(subquery)) {\n      return link(result[subquery]);\n\n    } else if (is.fn(result)) {\n      return link(result(subquery));\n\n    } else if (is.array(result)) {\n      return link(result[0]);\n\n    } else if (is.string(result) && is.fn(find)) {\n      return link(find(result));\n    }\n  }\n\n  this.one = function(subquery) {\n    return link(result, subquery);\n  };\n\n  this.array = function(arr) {\n    var array = is.array(arr) ? arr : [];\n    if (is.array(result)) {\n      for (var i = 0; i < result.length; i++) {\n        array[i] = link(result[i]);\n      }\n    } else {\n      array[0] = link(result);\n    }\n    return array;\n  };\n}\n\nClass.texture = function(query) {\n  if (!is.string(query)) {\n    return new Selection(query);\n  }\n\n  var result = null, atlas, i;\n\n  if ((i = query.indexOf(':')) > 0 && query.length > i + 1) {\n    atlas = _atlases_map[query.slice(0, i)];\n    result = atlas && atlas.select(query.slice(i + 1));\n  }\n\n  if (!result && (atlas = _atlases_map[query])) {\n    result = atlas.select();\n  }\n\n  for (i = 0; !result && i < _atlases_arr.length; i++) {\n    result = _atlases_arr[i].select(query);\n  }\n\n  if (!result) {\n    console.error('Texture not found: ' + query);\n    result = nfSelection;\n  }\n\n  return result;\n};\n\nfunction deprecated(hash, name, msg) {\n  if (name in hash)\n    console.log(msg ? msg.replace('%name', name) : '\\'' + name\n        + '\\' field of texture atlas is deprecated.');\n};\n\nmodule.exports = Atlas;\n","module.exports.startsWith = function(str, sub) {\n  return typeof str === 'string' && typeof sub === 'string'\n      && str.substring(0, sub.length) == sub;\n};","var Class = require('./core');\nvar is = require('./util/is');\n\nvar iid = 0;\n\n// TODO: do not clear next/prev/parent on remove\n\nClass.prototype._label = '';\n\nClass.prototype._visible = true;\n\nClass.prototype._parent = null;\nClass.prototype._next = null;\nClass.prototype._prev = null;\n\nClass.prototype._first = null;\nClass.prototype._last = null;\n\nClass.prototype._attrs = null;\nClass.prototype._flags = null;\n\nClass.prototype.toString = function() {\n  return '[' + this._label + ']';\n};\n\n/**\n * @deprecated Use label()\n */\nClass.prototype.id = function(id) {\n  return this.label(id);\n};\n\nClass.prototype.label = function(label) {\n  if (typeof label === 'undefined') {\n    return this._label;\n  }\n  this._label = label;\n  return this;\n};\n\nClass.prototype.attr = function(name, value) {\n  if (typeof value === 'undefined') {\n    return this._attrs !== null ? this._attrs[name] : undefined;\n  }\n  (this._attrs !== null ? this._attrs : this._attrs = {})[name] = value;\n  return this;\n};\n\nClass.prototype.visible = function(visible) {\n  if (typeof visible === 'undefined') {\n    return this._visible;\n  }\n  this._visible = visible;\n  this._parent && (this._parent._ts_children = ++iid);\n  this._ts_pin = ++iid;\n  this.touch();\n  return this;\n};\n\nClass.prototype.hide = function() {\n  return this.visible(false);\n};\n\nClass.prototype.show = function() {\n  return this.visible(true);\n};\n\nClass.prototype.parent = function() {\n  return this._parent;\n};\n\nClass.prototype.next = function(visible) {\n  var next = this._next;\n  while (next && visible && !next._visible) {\n    next = next._next;\n  }\n  return next;\n};\n\nClass.prototype.prev = function(visible) {\n  var prev = this._prev;\n  while (prev && visible && !prev._visible) {\n    prev = prev._prev;\n  }\n  return prev;\n};\n\nClass.prototype.first = function(visible) {\n  var next = this._first;\n  while (next && visible && !next._visible) {\n    next = next._next;\n  }\n  return next;\n};\n\nClass.prototype.last = function(visible) {\n  var prev = this._last;\n  while (prev && visible && !prev._visible) {\n    prev = prev._prev;\n  }\n  return prev;\n};\n\nClass.prototype.visit = function(visitor, data) {\n  var reverse = visitor.reverse;\n  var visible = visitor.visible;\n  if (visitor.start && visitor.start(this, data)) {\n    return;\n  }\n  var child, next = reverse ? this.last(visible) : this.first(visible);\n  while (child = next) {\n    next = reverse ? child.prev(visible) : child.next(visible);\n    if (child.visit(visitor, data)) {\n      return true;\n    }\n  }\n  return visitor.end && visitor.end(this, data);\n};\n\nClass.prototype.append = function(child, more) {\n  if (is.array(child))\n    for (var i = 0; i < child.length; i++)\n      append(this, child[i]);\n\n  else if (typeof more !== 'undefined') // deprecated\n    for (var i = 0; i < arguments.length; i++)\n      append(this, arguments[i]);\n\n  else if (typeof child !== 'undefined')\n    append(this, child);\n\n  return this;\n};\n\nClass.prototype.prepend = function(child, more) {\n  if (is.array(child))\n    for (var i = child.length - 1; i >= 0; i--)\n      prepend(this, child[i]);\n\n  else if (typeof more !== 'undefined') // deprecated\n    for (var i = arguments.length - 1; i >= 0; i--)\n      prepend(this, arguments[i]);\n\n  else if (typeof child !== 'undefined')\n    prepend(this, child);\n\n  return this;\n};\n\nClass.prototype.appendTo = function(parent) {\n  append(parent, this);\n  return this;\n};\n\nClass.prototype.prependTo = function(parent) {\n  prepend(parent, this);\n  return this;\n};\n\nClass.prototype.insertNext = function(sibling, more) {\n  if (is.array(sibling))\n    for (var i = 0; i < sibling.length; i++)\n      insertAfter(sibling[i], this);\n\n  else if (typeof more !== 'undefined') // deprecated\n    for (var i = 0; i < arguments.length; i++)\n      insertAfter(arguments[i], this);\n\n  else if (typeof sibling !== 'undefined')\n    insertAfter(sibling, this);\n\n  return this;\n};\n\nClass.prototype.insertPrev = function(sibling, more) {\n  if (is.array(sibling))\n    for (var i = sibling.length - 1; i >= 0; i--)\n      insertBefore(sibling[i], this);\n\n  else if (typeof more !== 'undefined') // deprecated\n    for (var i = arguments.length - 1; i >= 0; i--)\n      insertBefore(arguments[i], this);\n\n  else if (typeof sibling !== 'undefined')\n    insertBefore(sibling, this);\n\n  return this;\n};\n\nClass.prototype.insertAfter = function(prev) {\n  insertAfter(this, prev);\n  return this;\n};\n\nClass.prototype.insertBefore = function(next) {\n  insertBefore(this, next);\n  return this;\n};\n\nfunction append(parent, child) {\n  _ensure(child);\n  _ensure(parent);\n\n  child.remove();\n\n  if (parent._last) {\n    parent._last._next = child;\n    child._prev = parent._last;\n  }\n\n  child._parent = parent;\n  parent._last = child;\n\n  if (!parent._first) {\n    parent._first = child;\n  }\n\n  child._parent._flag(child, true);\n\n  child._ts_parent = ++iid;\n  parent._ts_children = ++iid;\n  parent.touch();\n}\n\nfunction prepend(parent, child) {\n  _ensure(child);\n  _ensure(parent);\n\n  child.remove();\n\n  if (parent._first) {\n    parent._first._prev = child;\n    child._next = parent._first;\n  }\n\n  child._parent = parent;\n  parent._first = child;\n\n  if (!parent._last) {\n    parent._last = child;\n  }\n\n  child._parent._flag(child, true);\n\n  child._ts_parent = ++iid;\n  parent._ts_children = ++iid;\n  parent.touch();\n};\n\nfunction insertBefore(self, next) {\n  _ensure(self);\n  _ensure(next);\n\n  self.remove();\n\n  var parent = next._parent;\n  var prev = next._prev;\n\n  next._prev = self;\n  prev && (prev._next = self) || parent && (parent._first = self);\n\n  self._parent = parent;\n  self._prev = prev;\n  self._next = next;\n\n  self._parent._flag(self, true);\n\n  self._ts_parent = ++iid;\n  self.touch();\n};\n\nfunction insertAfter(self, prev) {\n  _ensure(self);\n  _ensure(prev);\n\n  self.remove();\n\n  var parent = prev._parent;\n  var next = prev._next;\n\n  prev._next = self;\n  next && (next._prev = self) || parent && (parent._last = self);\n\n  self._parent = parent;\n  self._prev = prev;\n  self._next = next;\n\n  self._parent._flag(self, true);\n\n  self._ts_parent = ++iid;\n  self.touch();\n};\n\nClass.prototype.remove = function(child, more) {\n  if (typeof child !== 'undefined') {\n    if (is.array(child)) {\n      for (var i = 0; i < child.length; i++)\n        _ensure(child[i]).remove();\n\n    } else if (typeof more !== 'undefined') {\n      for (var i = 0; i < arguments.length; i++)\n        _ensure(arguments[i]).remove();\n\n    } else {\n      _ensure(child).remove();\n    }\n    return this;\n  }\n\n  if (this._prev) {\n    this._prev._next = this._next;\n  }\n  if (this._next) {\n    this._next._prev = this._prev;\n  }\n\n  if (this._parent) {\n    if (this._parent._first === this) {\n      this._parent._first = this._next;\n    }\n    if (this._parent._last === this) {\n      this._parent._last = this._prev;\n    }\n\n    this._parent._flag(this, false);\n\n    this._parent._ts_children = ++iid;\n    this._parent.touch();\n  }\n\n  this._prev = this._next = this._parent = null;\n  this._ts_parent = ++iid;\n  // this._parent.touch();\n\n  return this;\n};\n\nClass.prototype.empty = function() {\n  var child, next = this._first;\n  while (child = next) {\n    next = child._next;\n    child._prev = child._next = child._parent = null;\n\n    this._flag(child, false);\n  }\n\n  this._first = this._last = null;\n\n  this._ts_children = ++iid;\n  this.touch();\n  return this;\n};\n\nClass.prototype.touch = function() {\n  this._ts_touch = ++iid;\n  this._parent && this._parent.touch();\n  return this;\n};\n\n/**\n * Deep flags used for optimizing event distribution.\n */\nClass.prototype._flag = function(obj, name) {\n  if (typeof name === 'undefined') {\n    return this._flags !== null && this._flags[obj] || 0;\n  }\n  if (typeof obj === 'string') {\n    if (name) {\n      this._flags = this._flags || {};\n      if (!this._flags[obj] && this._parent) {\n        this._parent._flag(obj, true);\n      }\n      this._flags[obj] = (this._flags[obj] || 0) + 1;\n\n    } else if (this._flags && this._flags[obj] > 0) {\n      if (this._flags[obj] == 1 && this._parent) {\n        this._parent._flag(obj, false);\n      }\n      this._flags[obj] = this._flags[obj] - 1;\n    }\n  }\n  if (typeof obj === 'object') {\n    if (obj._flags) {\n      for ( var type in obj._flags) {\n        if (obj._flags[type] > 0) {\n          this._flag(type, name);\n        }\n      }\n    }\n  }\n  return this;\n};\n\n/**\n * @private\n */\nClass.prototype.hitTest = function(hit) {\n  if (this.attr('spy')) {\n    return true;\n  }\n  return hit.x >= 0 && hit.x <= this._pin._width && hit.y >= 0\n      && hit.y <= this._pin._height;\n};\n\nfunction _ensure(obj) {\n  if (obj && obj instanceof Class) {\n    return obj;\n  }\n  throw 'Invalid node: ' + obj;\n};\n\nmodule.exports = Class;\n","require('./util/event')(require('./core').prototype, function(obj, name, on) {\n  obj._flag(name, on);\n});\n","module.exports = function(prototype, callback) {\n\n  prototype._listeners = null;\n\n  prototype.on = prototype.listen = function(types, listener) {\n    if (!types || !types.length || typeof listener !== 'function') {\n      return this;\n    }\n    if (this._listeners === null) {\n      this._listeners = {};\n    }\n    var isarray = typeof types !== 'string' && typeof types.join === 'function';\n    if (types = (isarray ? types.join(' ') : types).match(/\\S+/g)) {\n      for (var i = 0; i < types.length; i++) {\n        var type = types[i];\n        this._listeners[type] = this._listeners[type] || [];\n        this._listeners[type].push(listener);\n        if (typeof callback === 'function') {\n          callback(this, type, true);\n        }\n      }\n    }\n    return this;\n  };\n\n  prototype.off = function(types, listener) {\n    if (!types || !types.length || typeof listener !== 'function') {\n      return this;\n    }\n    if (this._listeners === null) {\n      return this;\n    }\n    var isarray = typeof types !== 'string' && typeof types.join === 'function';\n    if (types = (isarray ? types.join(' ') : types).match(/\\S+/g)) {\n      for (var i = 0; i < types.length; i++) {\n        var type = types[i], all = this._listeners[type], index;\n        if (all && (index = all.indexOf(listener)) >= 0) {\n          all.splice(index, 1);\n          if (!all.length) {\n            delete this._listeners[type];\n          }\n          if (typeof callback === 'function') {\n            callback(this, type, false);\n          }\n        }\n      }\n    }\n    return this;\n  };\n\n  prototype.listeners = function(type) {\n    return this._listeners && this._listeners[type];\n  };\n\n  prototype.publish = function(name, args) {\n    var listeners = this.listeners(name);\n    if (!listeners || !listeners.length) {\n      return 0;\n    }\n    for (var l = 0; l < listeners.length; l++) {\n      listeners[l].apply(this, args);\n    }\n    return listeners.length;\n  };\n\n  prototype.trigger = function(name, args) {\n    this.publish(name, args);\n    return this;\n  };\n\n};\n","var Class = require('./core');\nrequire('./pin');\nrequire('./loop');\n\nvar stats = require('./util/stats');\nvar create = require('./util/create');\nvar extend = require('./util/extend');\n\nRoot._super = Class;\nRoot.prototype = create(Root._super.prototype);\n\nClass.root = function(request, render) {\n  return new Root(request, render);\n};\n\nfunction Root(request, render) {\n  Root._super.call(this);\n  this.label('Root');\n\n  var paused = true;\n\n  var self = this;\n  var lastTime = 0;\n  var loop = function(now) {\n    if (paused === true) {\n      return;\n    }\n\n    stats.tick = stats.node = stats.draw = 0;\n\n    var last = lastTime || now;\n    var elapsed = now - last;\n    lastTime = now;\n\n    var ticked = self._tick(elapsed, now, last);\n    if (self._mo_touch != self._ts_touch) {\n      self._mo_touch = self._ts_touch;\n      render(self);\n      request(loop);\n    } else if (ticked) {\n      request(loop);\n    } else {\n      paused = true;\n    }\n\n    stats.fps = elapsed ? 1000 / elapsed : 0;\n  };\n\n  this.start = function() {\n    return this.resume();\n  };\n\n  this.resume = function() {\n    if (paused) {\n      this.publish('resume');\n      paused = false;\n      request(loop);\n    }\n    return this;\n  };\n\n  this.pause = function() {\n    if (!paused) {\n      this.publish('pause');\n    }\n    paused = true;\n    return this;\n  };\n\n  this.touch_root = this.touch;\n  this.touch = function() {\n    this.resume();\n    return this.touch_root();\n  };\n};\n\nRoot.prototype.background = function(color) {\n  // to be implemented by loaders\n  return this;\n};\n\nRoot.prototype.viewport = function(width, height, ratio) {\n  if (typeof width === 'undefined') {\n    return extend({}, this._viewport);\n  }\n  this._viewport = {\n    width : width,\n    height : height,\n    ratio : ratio || 1\n  };\n  this.viewbox();\n  var data = extend({}, this._viewport);\n  this.visit({\n    start : function(node) {\n      if (!node._flag('viewport')) {\n        return true;\n      }\n      node.publish('viewport', [ data ]);\n    }\n  });\n  return this;\n};\n\n// TODO: static/fixed viewbox\nRoot.prototype.viewbox = function(width, height, mode) {\n  if (typeof width === 'number' && typeof height === 'number') {\n    this._viewbox = {\n      width : width,\n      height : height,\n      mode : /^(in|out|in-pad|out-crop)$/.test(mode) ? mode : 'in-pad'\n    };\n  }\n\n  var box = this._viewbox;\n  var size = this._viewport;\n  if (size && box) {\n    this.pin({\n      width : box.width,\n      height : box.height\n    });\n    this.scaleTo(size.width, size.height, box.mode);\n  } else if (size) {\n    this.pin({\n      width : size.width,\n      height : size.height\n    });\n  }\n\n  return this;\n};\n","var Class = require('./core');\nvar Texture = require('./texture');\n\nClass.canvas = function(type, attributes, callback) {\n  if (typeof type === 'string') {\n    if (typeof attributes === 'object') {\n    } else {\n      if (typeof attributes === 'function') {\n        callback = attributes;\n      }\n      attributes = {};\n    }\n  } else {\n    if (typeof type === 'function') {\n      callback = type;\n    }\n    attributes = {};\n    type = '2d';\n  }\n\n  var canvas = document.createElement('canvas');\n  var context = canvas.getContext(type, attributes);\n  var texture = new Texture(canvas);\n\n  texture.context = function() {\n    return context;\n  };\n\n  texture.size = function(width, height, ratio) {\n    ratio = ratio || 1;\n    canvas.width = width * ratio;\n    canvas.height = height * ratio;\n    this.src(canvas, ratio);\n    return this;\n  };\n\n  texture.canvas = function(fn) {\n    if (typeof fn === 'function') {\n      fn.call(this, context);\n    } else if (typeof fn === 'undefined' && typeof callback === 'function') {\n      callback.call(this, context);\n    }\n    return this;\n  };\n\n  if (typeof callback === 'function') {\n    callback.call(texture, context);\n  }\n\n  return texture;\n};","var Class = require('./core');\nrequire('./pin');\nrequire('./loop');\n\nvar repeat = require('./util/repeat');\nvar create = require('./util/create');\n\nmodule.exports = Image;\n\nClass.image = function(image) {\n  var img = new Image();\n  image && img.image(image);\n  return img;\n};\n\nImage._super = Class;\nImage.prototype = create(Image._super.prototype);\n\nfunction Image() {\n  Image._super.call(this);\n  this.label('Image');\n  this._textures = [];\n  this._image = null;\n};\n\n/**\n * @deprecated Use image\n */\nImage.prototype.setImage = function(a, b, c) {\n  return this.image(a, b, c);\n};\n\nImage.prototype.image = function(image) {\n  this._image = Class.texture(image).one();\n  this.pin('width', this._image ? this._image.width : 0);\n  this.pin('height', this._image ? this._image.height : 0);\n  this._textures[0] = this._image.pipe();\n  this._textures.length = 1;\n  return this;\n};\n\nImage.prototype.tile = function(inner) {\n  this._repeat(false, inner);\n  return this;\n};\n\nImage.prototype.stretch = function(inner) {\n  this._repeat(true, inner);\n  return this;\n};\n\nImage.prototype._repeat = function(stretch, inner) {\n  var self = this;\n  this.untick(this._repeatTicker);\n  this.tick(this._repeatTicker = function() {\n    if (this._mo_stretch == this._pin._ts_transform) {\n      return;\n    }\n    this._mo_stretch = this._pin._ts_transform;\n    var width = this.pin('width');\n    var height = this.pin('height');\n    this._textures.length = repeat(this._image, width, height, stretch, inner,\n        insert);\n  });\n\n  function insert(i, sx, sy, sw, sh, dx, dy, dw, dh) {\n    var repeat = self._textures.length > i ? self._textures[i]\n        : self._textures[i] = self._image.pipe();\n    repeat.src(sx, sy, sw, sh);\n    repeat.dest(dx, dy, dw, dh);\n  }\n};\n","module.exports = function(img, owidth, oheight, stretch, inner, insert) {\n\n  var width = img.width;\n  var height = img.height;\n  var left = img.left;\n  var right = img.right;\n  var top = img.top;\n  var bottom = img.bottom;\n\n  left = typeof left === 'number' && left === left ? left : 0;\n  right = typeof right === 'number' && right === right ? right : 0;\n  top = typeof top === 'number' && top === top ? top : 0;\n  bottom = typeof bottom === 'number' && bottom === bottom ? bottom : 0;\n\n  width = width - left - right;\n  height = height - top - bottom;\n\n  if (!inner) {\n    owidth = Math.max(owidth - left - right, 0);\n    oheight = Math.max(oheight - top - bottom, 0);\n  }\n\n  var i = 0;\n\n  if (top > 0 && left > 0)\n    insert(i++, 0, 0, left, top, 0, 0, left, top);\n  if (bottom > 0 && left > 0)\n    insert(i++, 0, height + top, left, bottom, 0, oheight + top, left, bottom);\n  if (top > 0 && right > 0)\n    insert(i++, width + left, 0, right, top, owidth + left, 0, right, top);\n  if (bottom > 0 && right > 0)\n    insert(i++, width + left, height + top, right, bottom, owidth + left,\n        oheight + top, right, bottom);\n\n  if (stretch) {\n    if (top > 0)\n      insert(i++, left, 0, width, top, left, 0, owidth, top);\n    if (bottom > 0)\n      insert(i++, left, height + top, width, bottom, left, oheight + top,\n          owidth, bottom);\n    if (left > 0)\n      insert(i++, 0, top, left, height, 0, top, left, oheight);\n    if (right > 0)\n      insert(i++, width + left, top, right, height, owidth + left, top, right,\n          oheight);\n    // center\n    insert(i++, left, top, width, height, left, top, owidth, oheight);\n\n  } else { // tile\n    var l = left, r = owidth, w;\n    while (r > 0) {\n      w = Math.min(width, r), r -= width;\n      var t = top, b = oheight, h;\n      while (b > 0) {\n        h = Math.min(height, b), b -= height;\n        insert(i++, left, top, w, h, l, t, w, h);\n        if (r <= 0) {\n          if (left)\n            insert(i++, 0, top, left, h, 0, t, left, h);\n          if (right)\n            insert(i++, width + left, top, right, h, l + w, t, right, h);\n        }\n        t += h;\n      }\n      if (top)\n        insert(i++, left, 0, w, top, l, 0, w, top);\n      if (bottom)\n        insert(i++, left, height + top, w, bottom, l, t, w, bottom);\n      l += w;\n    }\n  }\n\n  return i;\n};","var Class = require('./core');\nrequire('./pin');\nrequire('./loop');\n\nvar create = require('./util/create');\nvar math = require('./util/math');\n\nClass.anim = function(frames, fps) {\n  var anim = new Anim();\n  anim.frames(frames).gotoFrame(0);\n  fps && anim.fps(fps);\n  return anim;\n};\n\nAnim._super = Class;\nAnim.prototype = create(Anim._super.prototype);\n\n// TODO: replace with atlas fps or texture time\nClass.Anim = {\n  FPS : 15\n};\n\nfunction Anim() {\n  Anim._super.call(this);\n  this.label('Anim');\n\n  this._textures = [];\n\n  this._fps = Class.Anim.FPS;\n  this._ft = 1000 / this._fps;\n\n  this._time = -1;\n  this._repeat = 0;\n\n  this._index = 0;\n  this._frames = [];\n\n  var lastTime = 0;\n  this.tick(function(t, now, last) {\n    if (this._time < 0 || this._frames.length <= 1) {\n      return;\n    }\n\n    // ignore old elapsed\n    var ignore = lastTime != last;\n    lastTime = now;\n    if (ignore) {\n      return true;\n    }\n\n    this._time += t;\n    if (this._time < this._ft) {\n      return true;\n    }\n    var n = this._time / this._ft | 0;\n    this._time -= n * this._ft;\n    this.moveFrame(n);\n    if (this._repeat > 0 && (this._repeat -= n) <= 0) {\n      this.stop();\n      this._callback && this._callback();\n      return false;\n    }\n    return true;\n  }, false);\n};\n\nAnim.prototype.fps = function(fps) {\n  if (typeof fps === 'undefined') {\n    return this._fps;\n  }\n  this._fps = fps > 0 ? fps : Class.Anim.FPS;\n  this._ft = 1000 / this._fps;\n  return this;\n};\n\n/**\n * @deprecated Use frames\n */\nAnim.prototype.setFrames = function(a, b, c) {\n  return this.frames(a, b, c);\n};\n\nAnim.prototype.frames = function(frames) {\n  this._index = 0;\n  this._frames = Class.texture(frames).array();\n  this.touch();\n  return this;\n};\n\nAnim.prototype.length = function() {\n  return this._frames ? this._frames.length : 0;\n};\n\nAnim.prototype.gotoFrame = function(frame, resize) {\n  this._index = math.rotate(frame, this._frames.length) | 0;\n  resize = resize || !this._textures[0];\n  this._textures[0] = this._frames[this._index];\n  if (resize) {\n    this.pin('width', this._textures[0].width);\n    this.pin('height', this._textures[0].height);\n  }\n  this.touch();\n  return this;\n};\n\nAnim.prototype.moveFrame = function(move) {\n  return this.gotoFrame(this._index + move);\n};\n\nAnim.prototype.repeat = function(repeat, callback) {\n  this._repeat = repeat * this._frames.length - 1;\n  this._callback = callback;\n  this.play();\n  return this;\n};\n\nAnim.prototype.play = function(frame) {\n  if (typeof frame !== 'undefined') {\n    this.gotoFrame(frame);\n    this._time = 0;\n  } else if (this._time < 0) {\n    this._time = 0;\n  }\n\n  this.touch();\n  return this;\n};\n\nAnim.prototype.stop = function(frame) {\n  this._time = -1;\n  if (typeof frame !== 'undefined') {\n    this.gotoFrame(frame);\n  }\n  return this;\n};\n","var Class = require('./core');\nrequire('./pin');\nrequire('./loop');\n\nvar create = require('./util/create');\nvar is = require('./util/is');\n\nClass.string = function(frames) {\n  return new Str().frames(frames);\n};\n\nStr._super = Class;\nStr.prototype = create(Str._super.prototype);\n\nfunction Str() {\n  Str._super.call(this);\n  this.label('String');\n  this._textures = [];\n};\n\n/**\n * @deprecated Use frames\n */\nStr.prototype.setFont = function(a, b, c) {\n  return this.frames(a, b, c);\n};\n\nStr.prototype.frames = function(frames) {\n  this._textures = [];\n  if (typeof frames == 'string') {\n    frames = Class.texture(frames);\n    this._item = function(value) {\n      return frames.one(value);\n    };\n  } else if (typeof frames === 'object') {\n    this._item = function(value) {\n      return frames[value];\n    };\n  } else if (typeof frames === 'function') {\n    this._item = frames;\n  }\n  return this;\n};\n\n/**\n * @deprecated Use value\n */\nStr.prototype.setValue = function(a, b, c) {\n  return this.value(a, b, c);\n};\n\nStr.prototype.value = function(value) {\n  if (typeof value === 'undefined') {\n    return this._value;\n  }\n  if (this._value === value) {\n    return this;\n  }\n  this._value = value;\n\n  if (value === null) {\n    value = '';\n  } else if (typeof value !== 'string' && !is.array(value)) {\n    value = value.toString();\n  }\n\n  this._spacing = this._spacing || 0;\n\n  var width = 0, height = 0;\n  for (var i = 0; i < value.length; i++) {\n    var image = this._textures[i] = this._item(value[i]);\n    width += i > 0 ? this._spacing : 0;\n    image.dest(width, 0);\n    width = width + image.width;\n    height = Math.max(height, image.height);\n  }\n  this.pin('width', width);\n  this.pin('height', height);\n  this._textures.length = value.length;\n  return this;\n};\n","var Class = require('./core');\nrequire('./pin');\nrequire('./loop');\n\nvar create = require('./util/create');\n\nClass.row = function(align) {\n  return Class.create().row(align).label('Row');\n};\n\nClass.prototype.row = function(align) {\n  this.sequence('row', align);\n  return this;\n};\n\nClass.column = function(align) {\n  return Class.create().column(align).label('Row');\n};\n\nClass.prototype.column = function(align) {\n  this.sequence('column', align);\n  return this;\n};\n\nClass.sequence = function(type, align) {\n  return Class.create().sequence(type, align).label('Sequence');\n};\n\nClass.prototype.sequence = function(type, align) {\n\n  this._padding = this._padding || 0;\n  this._spacing = this._spacing || 0;\n\n  this.untick(this._layoutTiker);\n  this.tick(this._layoutTiker = function() {\n    if (this._mo_seq == this._ts_touch) {\n      return;\n    }\n    this._mo_seq = this._ts_touch;\n\n    var alignChildren = (this._mo_seqAlign != this._ts_children);\n    this._mo_seqAlign = this._ts_children;\n\n    var width = 0, height = 0;\n\n    var child, next = this.first(true);\n    var first = true;\n    while (child = next) {\n      next = child.next(true);\n\n      child.matrix(true);\n      var w = child.pin('boxWidth');\n      var h = child.pin('boxHeight');\n\n      if (type == 'column') {\n        !first && (height += this._spacing);\n        child.pin('offsetY') != height && child.pin('offsetY', height);\n        width = Math.max(width, w);\n        height = height + h;\n        alignChildren && child.pin('alignX', align);\n\n      } else if (type == 'row') {\n        !first && (width += this._spacing);\n        child.pin('offsetX') != width && child.pin('offsetX', width);\n        width = width + w;\n        height = Math.max(height, h);\n        alignChildren && child.pin('alignY', align);\n      }\n      first = false;\n    }\n    width += 2 * this._padding;\n    height += 2 * this._padding;\n    this.pin('width') != width && this.pin('width', width);\n    this.pin('height') != height && this.pin('height', height);\n  });\n  return this;\n};\n\nClass.box = function() {\n  return Class.create().box().label('Box');\n};\n\nClass.prototype.box = function() {\n  this._padding = this._padding || 0;\n\n  this.untick(this._layoutTiker);\n  this.tick(this._layoutTiker = function() {\n    if (this._mo_box == this._ts_touch) {\n      return;\n    }\n    this._mo_box = this._ts_touch;\n\n    var width = 0, height = 0;\n    var child, next = this.first(true);\n    while (child = next) {\n      next = child.next(true);\n      child.matrix(true);\n      var w = child.pin('boxWidth');\n      var h = child.pin('boxHeight');\n      width = Math.max(width, w);\n      height = Math.max(height, h);\n    }\n    width += 2 * this._padding;\n    height += 2 * this._padding;\n    this.pin('width') != width && this.pin('width', width);\n    this.pin('height') != height && this.pin('height', height);\n  });\n  return this;\n};\n\nClass.layer = function() {\n  return Class.create().layer().label('Layer');\n};\n\nClass.prototype.layer = function() {\n\n  this.untick(this._layoutTiker);\n  this.tick(this._layoutTiker = function() {\n    var parent = this.parent();\n    if (parent) {\n      var width = parent.pin('width');\n      if (this.pin('width') != width) {\n        this.pin('width', width);\n      }\n      var height = parent.pin('height');\n      if (this.pin('height') != height) {\n        this.pin('height', height);\n      }\n    }\n  }, true);\n  return this;\n};\n\n// TODO: move padding to pin\nClass.prototype.padding = function(pad) {\n  this._padding = pad;\n  return this;\n};\n\nClass.prototype.spacing = function(space) {\n  this._spacing = space;\n  return this;\n};\n","var Easing = require('./easing');\nvar Class = require('../core');\nvar Pin = require('../pin');\n\nClass.prototype.tween = function(duration, delay, append) {\n  if (typeof duration !== 'number') {\n    append = duration, delay = 0, duration = 0;\n  } else if (typeof delay !== 'number') {\n    append = delay, delay = 0;\n  }\n\n  if (!this._tweens) {\n    this._tweens = [];\n    var ticktime = 0;\n    this.tick(function(elapsed, now, last) {\n      if (!this._tweens.length) {\n        return;\n      }\n\n      // ignore old elapsed\n      var ignore = ticktime != last;\n      ticktime = now;\n      if (ignore) {\n        return true;\n      }\n\n      var head = this._tweens[0];\n\n      var next = head.tick(this, elapsed, now, last);\n\n      if (next && head === this._tweens[0]) {\n        this._tweens.shift();\n      }\n\n      if (typeof next === 'function') {\n        try {\n          next.call(this);\n        } catch (e) {\n          console.log(e);\n        }\n      }\n\n      if (typeof next === 'object') {\n        this._tweens.unshift(next);\n      }\n\n      return true;\n    }, true);\n  }\n\n  this.touch();\n  if (!append) {\n    this._tweens.length = 0;\n  }\n  var tween = new Tween(this, duration, delay);\n  this._tweens.push(tween);\n  return tween;\n};\n\nfunction Tween(owner, duration, delay) {\n  this._end = {};\n  this._duration = duration || 400;\n  this._delay = delay || 0;\n\n  this._owner = owner;\n  this._time = 0;\n};\n\nTween.prototype.tick = function(node, elapsed, now, last) {\n  this._time += elapsed;\n\n  if (this._time < this._delay) {\n    return;\n  }\n\n  var time = this._time - this._delay;\n\n  if (!this._start) {\n    this._start = {};\n    for ( var key in this._end) {\n      this._start[key] = this._owner.pin(key);\n    }\n  }\n\n  var p, over;\n  if (time < this._duration) {\n    p = time / this._duration;\n    over = false;\n  } else {\n    p = 1;\n    over = true;\n  }\n\n  if (typeof this._easing == 'function') {\n    p = this._easing(p);\n  }\n\n  var q = 1 - p;\n\n  for ( var key in this._end) {\n    this._owner.pin(key, this._start[key] * q + this._end[key] * p);\n  }\n\n  if (over) {\n    return this._next || this._done || true;\n  }\n};\n\nTween.prototype.tween = function(duration, delay) {\n  return this._next = new Tween(this._owner, duration, delay);\n};\n\nTween.prototype.duration = function(duration) {\n  this._duration = duration;\n  return this;\n};\n\nTween.prototype.delay = function(delay) {\n  this._delay = delay;\n  return this;\n};\n\nTween.prototype.ease = function(easing) {\n  this._easing = Easing(easing);\n  return this;\n};\n\nTween.prototype.done = function(fn) {\n  this._done = fn;\n  return this;\n};\n\nTween.prototype.hide = function() {\n  this.done(function() {\n    this.hide();\n  });\n  return this;\n};\n\nTween.prototype.remove = function() {\n  this.done(function() {\n    this.remove();\n  });\n  return this;\n};\n\nTween.prototype.pin = function(a, b) {\n  if (typeof a === 'object') {\n    for ( var attr in a) {\n      pinning(this._owner, this._end, attr, a[attr]);\n    }\n  } else if (typeof b !== 'undefined') {\n    pinning(this._owner, this._end, a, b);\n  }\n  return this;\n};\n\nfunction pinning(node, map, key, value) {\n  if (typeof node.pin(key) === 'number') {\n    map[key] = value;\n  } else if (typeof node.pin(key + 'X') === 'number'\n      && typeof node.pin(key + 'Y') === 'number') {\n    map[key + 'X'] = value;\n    map[key + 'Y'] = value;\n  }\n}\n\nPin._add_shortcuts(Tween);\n\n/**\n * @deprecated Use .done(fn) instead.\n */\nTween.prototype.then = function(fn) {\n  this.done(fn);\n  return this;\n};\n\n/**\n * @deprecated NOOP\n */\nTween.prototype.clear = function(forward) {\n  return this;\n};\n\nmodule.exports = Tween;","function _identity(x) {\n  return x;\n};\nvar _cache = {};\nvar _modes = {};\nvar _easings = {};\n\nfunction Easing(token) {\n  if (typeof token === 'function') {\n    return token;\n  }\n  if (typeof token !== 'string') {\n    return _identity;\n  }\n  var fn = _cache[token];\n  if (fn) {\n    return fn;\n  }\n  var match = /^(\\w+)(-(in|out|in-out|out-in))?(\\((.*)\\))?$/i.exec(token);\n  if (!match || !match.length) {\n    return _identity;\n  }\n  var easing = _easings[match[1]];\n  var mode = _modes[match[3]];\n  var params = match[5];\n  if (easing && easing.fn) {\n    fn = easing.fn;\n  } else if (easing && easing.fc) {\n    fn = easing.fc.apply(easing.fc, params\n        && params.replace(/\\s+/, '').split(','));\n  } else {\n    fn = _identity;\n  }\n  if (mode) {\n    fn = mode.fn(fn);\n  }\n  // TODO: It can be a memory leak with different `params`.\n  _cache[token] = fn;\n  return fn;\n};\n\nEasing.add = function(data) {\n  // TODO: create a map of all { name-mode : data }\n  var names = (data.name || data.mode).split(/\\s+/);\n  for (var i = 0; i < names.length; i++) {\n    var name = names[i];\n    if (name) {\n      (data.name ? _easings : _modes)[name] = data;\n    }\n  }\n};\n\nEasing.add({\n  mode : 'in',\n  fn : function(f) {\n    return f;\n  }\n});\n\nEasing.add({\n  mode : 'out',\n  fn : function(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n});\n\nEasing.add({\n  mode : 'in-out',\n  fn : function(f) {\n    return function(t) {\n      return (t < 0.5) ? (f(2 * t) / 2) : (1 - f(2 * (1 - t)) / 2);\n    };\n  }\n});\n\nEasing.add({\n  mode : 'out-in',\n  fn : function(f) {\n    return function(t) {\n      return (t < 0.5) ? (1 - f(2 * (1 - t)) / 2) : (f(2 * t) / 2);\n    };\n  }\n});\n\nEasing.add({\n  name : 'linear',\n  fn : function(t) {\n    return t;\n  }\n});\n\nEasing.add({\n  name : 'quad',\n  fn : function(t) {\n    return t * t;\n  }\n});\n\nEasing.add({\n  name : 'cubic',\n  fn : function(t) {\n    return t * t * t;\n  }\n});\n\nEasing.add({\n  name : 'quart',\n  fn : function(t) {\n    return t * t * t * t;\n  }\n});\n\nEasing.add({\n  name : 'quint',\n  fn : function(t) {\n    return t * t * t * t * t;\n  }\n});\n\nEasing.add({\n  name : 'sin sine',\n  fn : function(t) {\n    return 1 - Math.cos(t * Math.PI / 2);\n  }\n});\n\nEasing.add({\n  name : 'exp expo',\n  fn : function(t) {\n    return t == 0 ? 0 : Math.pow(2, 10 * (t - 1));\n  }\n});\n\nEasing.add({\n  name : 'circle circ',\n  fn : function(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n});\n\nEasing.add({\n  name : 'bounce',\n  fn : function(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625\n        * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625\n        * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t\n        + .984375;\n  }\n});\n\nEasing.add({\n  name : 'poly',\n  fc : function(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n});\n\nEasing.add({\n  name : 'elastic',\n  fc : function(a, p) {\n    p = p || 0.45;\n    a = a || 1;\n    var s = p / (2 * Math.PI) * Math.asin(1 / a);\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t)\n          * Math.sin((t - s) * (2 * Math.PI) / p);\n    };\n  }\n});\n\nEasing.add({\n  name : 'back',\n  fc : function(s) {\n    s = typeof s !== 'undefined' ? s : 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n});\n\nmodule.exports = Easing;\n","if (typeof DEBUG === 'undefined')\n  DEBUG = true;\n\nrequire('../core')._load(function(stage, elem) {\n  Mouse.subscribe(stage, elem);\n});\n\n// TODO: capture mouse\n\nMouse.CLICK = 'click';\nMouse.START = 'touchstart mousedown';\nMouse.MOVE = 'touchmove mousemove';\nMouse.END = 'touchend mouseup';\nMouse.CANCEL = 'touchcancel mousecancel';\n\nMouse.subscribe = function(stage, elem) {\n  if (stage.mouse) {\n    return;\n  }\n\n  stage.mouse = new Mouse(stage, elem);\n\n  // `click` events are synthesized from start/end events on same nodes\n  // `mousecancel` events are synthesized on blur or mouseup outside element\n\n  elem.addEventListener('touchstart', handleStart);\n  elem.addEventListener('touchend', handleEnd);\n  elem.addEventListener('touchmove', handleMove);\n  elem.addEventListener('touchcancel', handleCancel);\n\n  elem.addEventListener('mousedown', handleStart);\n  elem.addEventListener('mouseup', handleEnd);\n  elem.addEventListener('mousemove', handleMove);\n\n  document.addEventListener('mouseup', handleCancel);\n  window.addEventListener(\"blur\", handleCancel);\n\n  var clicklist = [], cancellist = [];\n\n  function handleStart(event) {\n    event.preventDefault();\n    stage.mouse.locate(event);\n    // DEBUG && console.log('Mouse Start: ' + event.type + ' ' + mouse);\n    stage.mouse.publish(event.type, event);\n\n    stage.mouse.lookup('click', clicklist);\n    stage.mouse.lookup('mousecancel', cancellist);\n  }\n\n  function handleMove(event) {\n    event.preventDefault();\n    stage.mouse.locate(event);\n    stage.mouse.publish(event.type, event);\n  }\n\n  function handleEnd(event) {\n    event.preventDefault();\n    // up/end location is not available, last one is used instead\n    // DEBUG && console.log('Mouse End: ' + event.type + ' ' + mouse);\n    stage.mouse.publish(event.type, event);\n\n    if (clicklist.length) {\n      // DEBUG && console.log('Mouse Click: ' + clicklist.length);\n      stage.mouse.publish('click', event, clicklist);\n    }\n    cancellist.length = 0;\n  }\n\n  function handleCancel(event) {\n    if (cancellist.length) {\n      // DEBUG && console.log('Mouse Cancel: ' + event.type);\n      stage.mouse.publish('mousecancel', event, cancellist);\n    }\n    clicklist.length = 0;\n  }\n};\n\nfunction Mouse(stage, elem) {\n  if (!(this instanceof Mouse)) {\n    // old-style mouse subscription\n    return;\n  }\n\n  var ratio = stage.viewport().ratio || 1;\n\n  stage.on('viewport', function(size) {\n    ratio = size.ratio || ratio;\n  });\n\n  this.x = 0;\n  this.y = 0;\n  this.toString = function() {\n    return (this.x | 0) + 'x' + (this.y | 0);\n  };\n  this.locate = function(event) {\n    locateElevent(elem, event, this);\n    this.x *= ratio;\n    this.y *= ratio;\n  };\n  this.lookup = function(type, collect) {\n    this.type = type;\n    this.root = stage;\n    this.event = null;\n    collect.length = 0;\n    this.collect = collect;\n\n    this.root.visit(this.visitor, this);\n  };\n  this.publish = function(type, event, targets) {\n    this.type = type;\n    this.root = stage;\n    this.event = event;\n    this.collect = false;\n    this.timeStamp = Date.now();\n\n    if (type !== 'mousemove' && type !== 'touchmove') {\n      DEBUG && console.log(this.type + ' ' + this);\n    }\n\n    if (targets) {\n      while (targets.length)\n        if (this.visitor.end(targets.shift(), this))\n          break;\n      targets.length = 0;\n    } else {\n      this.root.visit(this.visitor, this);\n    }\n  };\n  this.visitor = {\n    reverse : true,\n    visible : true,\n    start : function(node, mouse) {\n      return !node._flag(mouse.type);\n    },\n    end : function(node, mouse) {\n      // mouse: event/collect, type, root\n      rel.raw = mouse.event;\n      rel.type = mouse.type;\n      rel.timeStamp = mouse.timeStamp;\n      rel.abs.x = mouse.x;\n      rel.abs.y = mouse.y;\n\n      var listeners = node.listeners(mouse.type);\n      if (!listeners) {\n        return;\n      }\n      node.matrix().inverse().map(mouse, rel);\n      if (!(node === mouse.root || node.hitTest(rel))) {\n        return;\n      }\n      if (mouse.collect) {\n        mouse.collect.push(node);\n      }\n      if (mouse.event) {\n        var cancel = false;\n        for (var l = 0; l < listeners.length; l++) {\n          cancel = listeners[l].call(node, rel) ? true : cancel;\n        }\n        return cancel;\n      }\n    }\n  };\n};\n\n// TODO: define per mouse object with get-only x and y\nvar rel = {}, abs = {};\n\ndefineValue(rel, 'clone', function(obj) {\n  obj = obj || {}, obj.x = this.x, obj.y = this.y;\n  return obj;\n});\ndefineValue(rel, 'toString', function() {\n  return (this.x | 0) + 'x' + (this.y | 0) + ' (' + this.abs + ')';\n});\ndefineValue(rel, 'abs', abs);\ndefineValue(abs, 'clone', function(obj) {\n  obj = obj || {}, obj.x = this.x, obj.y = this.y;\n  return obj;\n});\ndefineValue(abs, 'toString', function() {\n  return (this.x | 0) + 'x' + (this.y | 0);\n});\n\nfunction defineValue(obj, name, value) {\n  Object.defineProperty(obj, name, {\n    value : value\n  });\n}\n\nfunction locateElevent(el, ev, loc) {\n  // pageX/Y if available?\n  if (ev.touches && ev.touches.length) {\n    loc.x = ev.touches[0].clientX;\n    loc.y = ev.touches[0].clientY;\n  } else {\n    loc.x = ev.clientX;\n    loc.y = ev.clientY;\n  }\n  var rect = el.getBoundingClientRect();\n  loc.x -= rect.left;\n  loc.y -= rect.top;\n  loc.x -= el.clientLeft | 0;\n  loc.y -= el.clientTop | 0;\n  return loc;\n};\n\nmodule.exports = Mouse;\n","/**\n * Default loader for web.\n */\n\nif (typeof DEBUG === 'undefined')\n  DEBUG = true;\n\nvar Class = require('../core');\n\nClass._supported = (function() {\n  var elem = document.createElement('canvas');\n  return (elem.getContext && elem.getContext('2d')) ? true : false;\n})();\n\nwindow.addEventListener('load', function() {\n  DEBUG && console.log('On load.');\n  if (Class._supported) {\n    Class.start();\n  }\n  // TODO if not supported\n}, false);\n\nClass.config({\n  'app-loader' : AppLoader,\n  'image-loader' : ImageLoader\n});\n\nfunction AppLoader(app, configs) {\n  configs = configs || {};\n  var canvas = configs.canvas, context = null, full = false;\n  var width = 0, height = 0, ratio = 1;\n\n  if (typeof canvas === 'string') {\n    canvas = document.getElementById(canvas);\n  }\n\n  if (!canvas) {\n    canvas = document.getElementById('cutjs')\n        || document.getElementById('stage');\n  }\n\n  if (!canvas) {\n    full = true;\n    DEBUG && console.log('Creating Canvas...');\n    canvas = document.createElement('canvas');\n    canvas.style.position = 'absolute';\n    canvas.style.top = '0';\n    canvas.style.left = '0';\n\n    var body = document.body;\n    body.insertBefore(canvas, body.firstChild);\n  }\n\n  context = canvas.getContext('2d');\n\n  var devicePixelRatio = window.devicePixelRatio || 1;\n  var backingStoreRatio = context.webkitBackingStorePixelRatio\n      || context.mozBackingStorePixelRatio || context.msBackingStorePixelRatio\n      || context.oBackingStorePixelRatio || context.backingStorePixelRatio || 1;\n  ratio = devicePixelRatio / backingStoreRatio;\n\n  var requestAnimationFrame = window.requestAnimationFrame\n      || window.msRequestAnimationFrame || window.mozRequestAnimationFrame\n      || window.webkitRequestAnimationFrame || window.oRequestAnimationFrame\n      || function(callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n\n  DEBUG && console.log('Creating stage...');\n  var root = Class.root(requestAnimationFrame, render);\n\n  function render() {\n    context.setTransform(1, 0, 0, 1, 0, 0);\n    context.clearRect(0, 0, width, height);\n    root.render(context);\n  }\n\n  root.background = function(color) {\n    canvas.style.backgroundColor = color;\n    return this;\n  };\n\n  app(root, canvas);\n\n  resize();\n  window.addEventListener('resize', resize, false);\n  window.addEventListener('orientationchange', resize, false);\n\n  function resize() {\n\n    if (full) {\n      // screen.availWidth/Height?\n      width = (window.innerWidth > 0 ? window.innerWidth : screen.width);\n      height = (window.innerHeight > 0 ? window.innerHeight : screen.height);\n\n      canvas.style.width = width + 'px';\n      canvas.style.height = height + 'px';\n\n    } else {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    }\n\n    width *= ratio;\n    height *= ratio;\n\n    if (canvas.width === width && canvas.height === height) {\n      return;\n    }\n\n    canvas.width = width;\n    canvas.height = height;\n\n    DEBUG && console.log('Resize: ' + width + ' x ' + height + ' / ' + ratio);\n\n    root.viewport(width, height, ratio);\n\n    render();\n  }\n}\n\nfunction ImageLoader(src, success, error) {\n  DEBUG && console.log('Loading image: ' + src);\n  var image = new Image();\n  image.onload = function() {\n    success(image);\n  };\n  image.onerror = error;\n  image.src = src;\n}\n"],"sourceRoot":""}